package com.zju.leetcode;

public class NewCoderQueue {
    public int solve (int n, int[] a) {
        // write code here
        int M=1000000007;
        int[] flag=new int[1000001];
        for (int i : a) {
            flag[i]++;
        }
        int index=n-1;
        //判断站法是否合法
        while (index>0)
        {
            if(flag[index]!=2||flag[index-1]!=0)
            {
                return 0;
            }
            index=index-2;
        }
        if((n&1)==0&&flag[0]!=0||(n&1)==1&&flag[0]!=1)
        {
            return 0;
        }
        //合法 计算2^(n/2)
        long res=1;
        long b=n/2;
        long base=2;
        while (b>0)
        {
            if((b&1)==1)
            {
                res=(res*base)%M;
            }
            base=(base*base)%M;
            b>>=1;
        }
        return (int)res;
    }

    public int solve2 (int n, int[] a) {
        if(a.length != n) return 0;
        int sum[] = new int[n];
        for(int i = 0; i < n; i ++) {
            if(a[i] >= n)return 0;
            sum[a[i]]++;
        }
        if((n % 2) == 0) {
            for(int i = 1; i <= n - 1; i+=2) {
                if(sum[i] != 2) return 0;
            }
        } else {
            if(sum[0] != 1) return 0;
            for(int i = 2; i <= n - 1; i+=2) {
                if(sum[i] != 2) return 0;
            }
        }
        long mod = 1000000007;
        long ans = 1;
        for(int i = 0; i < n; i++) {
            if(sum[i] != 0) {
                ans = ((ans * sum[i])%mod);
            }
        }
        return (int)ans;
        // write code here
    }
    public static void main(String[] args) {
        int n=586;
        int a[]={1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,107,109,111,113,115,117,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,173,175,177,179,181,183,185,187,189,191,193,195,197,199,201,203,205,207,209,211,213,215,217,219,221,223,225,227,229,231,233,235,237,239,241,243,245,247,249,251,253,255,257,259,261,263,265,267,269,271,273,275,277,279,281,283,285,287,289,291,293,295,297,299,301,303,305,307,309,311,313,315,317,319,321,323,325,327,329,331,333,335,337,339,341,343,345,347,349,351,353,355,357,359,361,363,365,367,369,371,373,375,377,379,381,383,385,387,389,391,393,395,397,399,401,403,405,407,409,411,413,415,417,419,421,423,425,427,429,431,433,435,437,439,441,443,445,447,449,451,453,455,457,459,461,463,465,467,469,471,473,475,477,479,481,483,485,487,489,491,493,495,497,499,501,503,505,507,509,511,513,515,517,519,521,523,525,527,529,531,533,535,537,539,541,543,545,547,549,551,553,555,557,559,561,563,565,567,569,571,573,575,577,579,581,583,585,1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,107,109,111,113,115,117,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,173,175,177,179,181,183,185,187,189,191,193,195,197,199,201,203,205,207,209,211,213,215,217,219,221,223,225,227,229,231,233,235,237,239,241,243,245,247,249,251,253,255,257,259,261,263,265,267,269,271,273,275,277,279,281,283,285,287,289,291,293,295,297,299,301,303,305,307,309,311,313,315,317,319,321,323,325,327,329,331,333,335,337,339,341,343,345,347,349,351,353,355,357,359,361,363,365,367,369,371,373,375,377,379,381,383,385,387,389,391,393,395,397,399,401,403,405,407,409,411,413,415,417,419,421,423,425,427,429,431,433,435,437,439,441,443,445,447,449,451,453,455,457,459,461,463,465,467,469,471,473,475,477,479,481,483,485,487,489,491,493,495,497,499,501,503,505,507,509,511,513,515,517,519,521,523,525,527,529,531,533,535,537,539,541,543,545,547,549,551,553,555,557,559,561,563,565,567,569,571,573,575,577,579,581,583,585};
        System.out.println(new NewCoderQueue().solve(n,a));
    }
}
