<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='9412' time_ms='1601277750204'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.221-b11
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.221-b11) for windows-amd64 JRE (1.8.0_221-b11), built on Jul  4 2019 04:39:29 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=jit.log -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\lib\idea_rt.jar=1031:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin -Dfile.encoding=UTF-8 
</args>
<command>
com.zju.leetcode.multiThread.testThread
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.221-b11
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=C:\Program Files\Java\jdk1.8.0_221\jre\lib\ext;C:\Windows\Sun\Java\lib\ext
java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_221\jre\lib\endorsed
sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_221\jre\bin
java.library.path=C:\Program Files\Java\jdk1.8.0_221\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\77204\AppData\Local\Continuum\anaconda3;C:\Users\77204\AppData\Local\Continuum\anaconda3\Scripts;C:\Users\77204\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;D:\Program Files (x86)\Rational\common;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\IBM\SPSS\Statistics\25\JRE\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;.;C:\Users\77204\AppData\Local\Microsoft\WindowsApps;C:\Users\77204\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm 2019.2\bin;;C:\Users\77204\AppData\Local\Continuum\anaconda3;C:\Users\77204\AppData\Local\Continuum\anaconda3\Scripts;C:\Users\77204\AppData\Local\Continuum\anaconda3\Library\bin;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Program Files\Java\jdk1.8.0_221\jre\bin;C:\Work\opencv\build\x64\vc14\bin;C:\Users\77204\AppData\Local\Android\Sdk\tools;C:\Users\77204\AppData\Local\Android\Sdk\platform-tools;C:\Users\77204\AppData\Roaming\npm;C:\Tool\apache-maven-3.6.3\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;;.
java.home=C:\Program Files\Java\jdk1.8.0_221\jre
java.class.path=C:\Program Files\Java\jdk1.8.0_221\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\rt.jar;C:\Work\Java\leetcode\target\classes
sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_221\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_221\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_221\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=com.zju.leetcode.multiThread.testThread
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='11160'/>
<thread_logfile thread='11160' filename='C:\Users\77204\AppData\Local\Temp\\hs_c11160_pid9412.log'/>
<writer thread='1944'/>
<thread_logfile thread='1944' filename='C:\Users\77204\AppData\Local\Temp\\hs_c1944_pid9412.log'/>
<writer thread='3656'/>
Loaded disassembler from C:\Program Files\Java\jdk1.8.0_221\jre\bin\server\hsdis-amd64.dll
Decoding compiled method 0x0000000002cdf090:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
  # {method} {0x00000000193896c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x0000000002cdf200: mov    0x8(%rdx),%r10d
  0x0000000002cdf204: shl    $0x3,%r10
  0x0000000002cdf208: cmp    %r10,%rax
  0x0000000002cdf20b: je     0x0000000002cdf218
  0x0000000002cdf211: jmpq   0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002cdf216: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002cdf218: mov    %eax,-0x6000(%rsp)
  0x0000000002cdf21f: push   %rbp
  0x0000000002cdf220: mov    %rsp,%rbp
  0x0000000002cdf223: sub    $0x80,%rsp
  0x0000000002cdf22a: mov    %rsi,0x30(%rsp)
  0x0000000002cdf22f: mov    %rdi,0x28(%rsp)
  0x0000000002cdf234: mov    %r9,0x48(%rsp)
  0x0000000002cdf239: cmp    $0x0,%r9
  0x0000000002cdf23d: lea    0x48(%rsp),%rax
  0x0000000002cdf242: cmove  0x48(%rsp),%rax
  0x0000000002cdf248: mov    %rax,0x20(%rsp)
  0x0000000002cdf24d: mov    %r8,%r9
  0x0000000002cdf250: mov    %rdx,0x38(%rsp)
  0x0000000002cdf255: cmp    $0x0,%rdx
  0x0000000002cdf259: lea    0x38(%rsp),%r8
  0x0000000002cdf25e: cmove  0x38(%rsp),%r8
  0x0000000002cdf264: movabs $0x780800c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000002cdf26e: mov    %r14,0x68(%rsp)
  0x0000000002cdf273: lea    0x68(%rsp),%r14
  0x0000000002cdf278: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x0000000002cdf27b: movabs $0x2cdf27b,%r10    ;   {section_word}
  0x0000000002cdf285: mov    %r10,0x1e0(%r15)
  0x0000000002cdf28c: mov    %rsp,0x1d8(%r15)
  0x0000000002cdf293: cmpb   $0x0,0x5b9d7ab4(%rip)        # 0x000000005e6b6d4e
                                                ;   {external_word}
  0x0000000002cdf29a: je     0x0000000002cdf2e2
  0x0000000002cdf2a0: push   %rdx
  0x0000000002cdf2a1: push   %r8
  0x0000000002cdf2a3: push   %r9
  0x0000000002cdf2a5: movabs $0x193896b8,%rdx   ;   {metadata({method} {0x00000000193896c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002cdf2af: mov    %r15,%rcx
  0x0000000002cdf2b2: sub    $0x20,%rsp
  0x0000000002cdf2b6: test   $0xf,%esp
  0x0000000002cdf2bc: je     0x0000000002cdf2d4
  0x0000000002cdf2c2: sub    $0x8,%rsp
  0x0000000002cdf2c6: callq  0x000000005e0cde90  ;   {runtime_call}
  0x0000000002cdf2cb: add    $0x8,%rsp
  0x0000000002cdf2cf: jmpq   0x0000000002cdf2d9
  0x0000000002cdf2d4: callq  0x000000005e0cde90  ;   {runtime_call}
  0x0000000002cdf2d9: add    $0x20,%rsp
  0x0000000002cdf2dd: pop    %r9
  0x0000000002cdf2df: pop    %r8
  0x0000000002cdf2e1: pop    %rdx
  0x0000000002cdf2e2: lea    0x1f8(%r15),%rcx
  0x0000000002cdf2e9: movl   $0x4,0x270(%r15)
  0x0000000002cdf2f4: movabs $0x7ffdd2730738,%r10  ;   {runtime_call}
  0x0000000002cdf2fe: callq  *%r10
  0x0000000002cdf301: vzeroupper 
  0x0000000002cdf304: movl   $0x5,0x270(%r15)
  0x0000000002cdf30f: mov    %r15d,%ecx
  0x0000000002cdf312: shr    $0x4,%ecx
  0x0000000002cdf315: and    $0xffc,%ecx
  0x0000000002cdf31b: movabs $0x29a0000,%r10    ;   {external_word}
  0x0000000002cdf325: mov    %ecx,(%r10,%rcx,1)
  0x0000000002cdf329: cmpl   $0x0,0x5b9d8605(%rip)        # 0x000000005e6b7938
                                                ;   {external_word}
  0x0000000002cdf333: jne    0x0000000002cdf347
  0x0000000002cdf339: cmpl   $0x0,0x30(%r15)
  0x0000000002cdf341: je     0x0000000002cdf360
  0x0000000002cdf347: mov    %r15,%rcx
  0x0000000002cdf34a: mov    %rsp,%r12
  0x0000000002cdf34d: sub    $0x20,%rsp
  0x0000000002cdf351: and    $0xfffffffffffffff0,%rsp
  0x0000000002cdf355: callq  0x000000005e0e5210  ;   {runtime_call}
  0x0000000002cdf35a: mov    %r12,%rsp
  0x0000000002cdf35d: xor    %r12,%r12
  0x0000000002cdf360: movl   $0x8,0x270(%r15)
  0x0000000002cdf36b: cmpl   $0x1,0x29c(%r15)
  0x0000000002cdf376: je     0x0000000002cdf406
  0x0000000002cdf37c: cmpb   $0x0,0x5b9d79cb(%rip)        # 0x000000005e6b6d4e
                                                ;   {external_word}
  0x0000000002cdf383: je     0x0000000002cdf3c1
  0x0000000002cdf389: 
<writer thread='28032'/>
<thread_logfile thread='28032' filename='C:\Users\77204\AppData\Local\Temp\\hs_c28032_pid9412.log'/>
<writer thread='3656'/>
movabs $0x193896b8,%rdx   ;   {metadata({method} {0x00000000193896c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002cdf393: mov    %r15,%rcx
  0x0000000002cdf396: sub    $0x20,%rsp
  0x0000000002cdf39a: test   $0xf,%esp
  0x0000000002cdf3a0: je     0x0000000002cdf3b8
  0x0000000002cdf3a6: sub    $0x8,%rsp
  0x0000000002cdf3aa: callq  0x000000005e0cde90  ;   {runtime_call}
  0x0000000002cdf3af: add    $0x8,%rsp
  0x0000000002cdf3b3: jmpq   0x0000000002cdf3bd
  0x0000000002cdf3b8: callq  0x000000005e0cde90  ;   {runtime_call}
  0x0000000002cdf3bd: add    $0x20,%rsp
  0x0000000002cdf3c1: movabs $0x0,%r10
  0x0000000002cdf3cb: mov    %r10,0x1d8(%r15)
  0x0000000002cdf3d2: movabs $0x0,%r10
  0x0000000002cdf3dc: mov    %r10,0x1e0(%r15)
  0x0000000002cdf3e3: mov    0x38(%r15),%rcx
  0x0000000002cdf3e7: movl   $0x0,0x100(%rcx)
  0x0000000002cdf3f1: leaveq 
  0x0000000002cdf3f2: cmpq   $0x0,0x8(%r15)
  0x0000000002cdf3fa: jne    0x0000000002cdf401
  0x0000000002cdf400: retq   
  0x0000000002cdf401: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002cdf406: mov    %rsp,%r12
  0x0000000002cdf409: sub    $0x20,%rsp
  0x0000000002cdf40d: and    $0xfffffffffffffff0,%rsp
  0x0000000002cdf411: callq  0x000000005e0cdeb0  ;   {runtime_call}
  0x0000000002cdf416: mov    %r12,%rsp
  0x0000000002cdf419: xor    %r12,%r12
  0x0000000002cdf41c: jmpq   0x0000000002cdf37c
  0x0000000002cdf421: hlt    
  0x0000000002cdf422: hlt    
  0x0000000002cdf423: hlt    
  0x0000000002cdf424: hlt    
  0x0000000002cdf425: hlt    
  0x0000000002cdf426: hlt    
  0x0000000002cdf427: hlt    
<nmethod compile_id='1' compile_kind='c2n' level='0' entry='0x0000000002cdf200' size='920' address='0x0000000002cdf090' relocation_offset='288' consts_offset='920' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='2560' iicount='2560' stamp='4.846'/>
<task_queued compile_id='2' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='896' iicount='896' level='3' stamp='4.847' comment='tiered' hot_count='896'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d70750:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000194f9b88} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;
  # this:     rdx:rdx   = &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x0000000002d708c0: mov    0x8(%rdx),%r10d
  0x0000000002d708c4: shl    $0x3,%r10
  0x0000000002d708c8: cmp    %rax,%r10
  0x0000000002d708cb: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d708d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d708dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d708e0: mov    %eax,-0x6000(%rsp)
  0x0000000002d708e7: push   %rbp
  0x0000000002d708e8: sub    $0x30,%rsp
  0x0000000002d708ec: movabs $0x195a8458,%rax   ;   {metadata(method data for {method} {0x00000000194f9b88} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;)}
  0x0000000002d708f6: mov    0xdc(%rax),%esi
  0x0000000002d708fc: add    $0x8,%esi
  0x0000000002d708ff: mov    %esi,0xdc(%rax)
  0x0000000002d70905: movabs $0x194f9b80,%rax   ;   {metadata({method} {0x00000000194f9b88} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;)}
  0x0000000002d7090f: and    $0x1ff8,%esi
  0x0000000002d70915: cmp    $0x0,%esi
  0x0000000002d70918: je     0x0000000002d7096a  ;*aload_0
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@0 (line 656)

  0x0000000002d7091e: mov    0x30(%rdx),%eax
  0x0000000002d70921: shl    $0x3,%rax          ;*getfield c2b
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@1 (line 656)

  0x0000000002d70925: mov    0x34(%rdx),%esi
  0x0000000002d70928: shl    $0x3,%rsi          ;*getfield c2bIndex
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@5 (line 656)

  0x0000000002d7092c: mov    %r8,%rdi
  0x0000000002d7092f: sar    $0x8,%edi
  0x0000000002d70932: movslq %edi,%rbx
  0x0000000002d70935: cmp    0xc(%rsi),%edi     ; implicit exception: dispatches to 0x0000000002d7097e
  0x0000000002d70938: jae    0x0000000002d70988
  0x0000000002d7093e: movzwl 0x10(%rsi,%rbx,2),%esi  ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)

  0x0000000002d70943: and    $0xff,%r8d
  0x0000000002d7094a: add    %r8d,%esi
  0x0000000002d7094d: movslq %esi,%rdi
  0x0000000002d70950: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000002d70991
  0x0000000002d70953: jae    0x0000000002d7099b
  0x0000000002d70959: movzwl 0x10(%rax,%rdi,2),%eax  ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)

  0x0000000002d7095e: add    $0x30,%rsp
  0x0000000002d70962: pop    %rbp
  0x0000000002d70963: test   %eax,-0x3e0869(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d70969: retq   
  0x0000000002d7096a: mov    %rax,0x8(%rsp)
  0x0000000002d7096f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d70977: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=188}
                                                ;*synchronization entry
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@-1 (line 656)
                                                ;   {runtime_call}
  0x0000000002d7097c: jmp    0x0000000002d7091e
  0x0000000002d7097e: callq  0x0000000002cdff40  ; OopMap{rax=Oop rsi=Oop off=195}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x0000000002d70983: callq  0x0000000002cdff40  ; OopMap{rax=Oop rsi=Oop off=200}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x0000000002d70988: mov    %rdi,(%rsp)
  0x0000000002d7098c: callq  0x0000000002ce0600  ; OopMap{rax=Oop rsi=Oop off=209}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x0000000002d70991: callq  0x0000000002cdff40  ; OopMap{rax=Oop off=214}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x0000000002d70996: callq  0x0000000002cdff40  ; OopMap{rax=Oop off=219}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x0000000002d7099b: mov    %rsi,(%rsp)
  0x0000000002d7099f: callq  0x0000000002ce0600  ; OopMap{rax=Oop off=228}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x0000000002d709a4: nop
  0x0000000002d709a5: nop
  0x0000000002d709a6: mov    0x2a8(%r15),%rax
  0x0000000002d709ad: movabs $0x0,%r10
  0x0000000002d709b7: mov    %r10,0x2a8(%r15)
  0x0000000002d709be: movabs $0x0,%r10
  0x0000000002d709c8: mov    %r10,0x2b0(%r15)
  0x0000000002d709cf: add    $0x30,%rsp
  0x0000000002d709d3: pop    %rbp
  0x0000000002d709d4: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d709d9: hlt    
  0x0000000002d709da: hlt    
  0x0000000002d709db: hlt    
  0x0000000002d709dc: hlt    
  0x0000000002d709dd: hlt    
  0x0000000002d709de: hlt    
  0x0000000002d709df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d709e0: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d709e5: mov    %rsp,-0x28(%rsp)
  0x0000000002d709ea: sub    $0x80,%rsp
  0x0000000002d709f1: mov    %rax,0x78(%rsp)
  0x0000000002d709f6: mov    %rcx,0x70(%rsp)
  0x0000000002d709fb: mov    %rdx,0x68(%rsp)
  0x0000000002d70a00: mov    %rbx,0x60(%rsp)
  0x0000000002d70a05: mov    %rbp,0x50(%rsp)
  0x0000000002d70a0a: mov    %rsi,0x48(%rsp)
  0x0000000002d70a0f: mov    %rdi,0x40(%rsp)
  0x0000000002d70a14: mov    %r8,0x38(%rsp)
  0x0000000002d70a19: mov    %r9,0x30(%rsp)
  0x0000000002d70a1e: mov    %r10,0x28(%rsp)
  0x0000000002d70a23: mov    %r11,0x20(%rsp)
  0x0000000002d70a28: mov    %r12,0x18(%rsp)
  0x0000000002d70a2d: mov    %r13,0x10(%rsp)
  0x0000000002d70a32: mov    %r14,0x8(%rsp)
  0x0000000002d70a37: mov    %r15,(%rsp)
  0x0000000002d70a3b: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d70a45: movabs $0x2d709e5,%rdx    ;   {internal_word}
  0x0000000002d70a4f: mov    %rsp,%r8
  0x0000000002d70a52: and    $0xfffffffffffffff0,%rsp
  0x0000000002d70a56: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d70a5b: hlt    
[Deopt Handler Code]
  0x0000000002d70a5c: movabs $0x2d70a5c,%r10    ;   {section_word}
  0x0000000002d70a66: push   %r10
  0x0000000002d70a68: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d70a6d: hlt    
  0x0000000002d70a6e: hlt    
  0x0000000002d70a6f: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x0000000002d708c0' size='1144' address='0x0000000002d70750' relocation_offset='288' insts_offset='368' stub_offset='656' scopes_data_offset='808' scopes_pcs_offset='872' dependencies_offset='1096' nul_chk_table_offset='1104' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='914' iicount='914' stamp='4.875'/>
<writer thread='3656'/>
<task_queued compile_id='3' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='7168' iicount='7168' stamp='4.876' comment='tiered' hot_count='7168'/>
<writer thread='5912'/>
<task_queued compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='731' backedge_count='14336' iicount='731' level='3' stamp='4.877' comment='tiered' hot_count='731'/>
<writer thread='3656'/>
<task_queued compile_id='5' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4352' iicount='4352' level='3' stamp='4.877' comment='tiered' hot_count='4352'/>
<task_queued compile_id='6' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='2944' iicount='2944' level='3' stamp='4.877' comment='tiered' hot_count='2944'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d73990:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019374fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d73b00: mov    0x8(%rdx),%r10d
  0x0000000002d73b04: shl    $0x3,%r10
  0x0000000002d73b08: cmp    %rax,%r10
  0x0000000002d73b0b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d73b11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d73b1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d73b20: mov    %eax,-0x6000(%rsp)
  0x0000000002d73b27: push   %rbp
  0x0000000002d73b28: sub    $0x30,%rsp
  0x0000000002d73b2c: movabs $0x19558888,%rax   ;   {metadata(method data for {method} {0x0000000019374fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d73b36: mov    0xdc(%rax),%esi
  0x0000000002d73b3c: add    $0x8,%esi
  0x0000000002d73b3f: mov    %esi,0xdc(%rax)
  0x0000000002d73b45: movabs $0x19374fb8,%rax   ;   {metadata({method} {0x0000000019374fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d73b4f: and    $0x1ff8,%esi
  0x0000000002d73b55: cmp    $0x0,%esi
  0x0000000002d73b58: je     0x0000000002d73c91  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x0000000002d73b5e: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x0000000002d73b61: cmp    $0x0,%eax
  0x0000000002d73b64: movabs $0x19558888,%rsi   ;   {metadata(method data for {method} {0x0000000019374fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d73b6e: movabs $0x108,%rdi
  0x0000000002d73b78: jne    0x0000000002d73b88
  0x0000000002d73b7e: movabs $0x118,%rdi
  0x0000000002d73b88: mov    (%rsi,%rdi,1),%rbx
  0x0000000002d73b8c: lea    0x1(%rbx),%rbx
  0x0000000002d73b90: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002d73b94: jne    0x0000000002d73c85  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x0000000002d73b9a: mov    0xc(%rdx),%esi
  0x0000000002d73b9d: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x0000000002d73ba1: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x0000000002d73ca8
  0x0000000002d73ba4: cmp    $0x0,%edi
  0x0000000002d73ba7: movabs $0x19558888,%rbx   ;   {metadata(method data for {method} {0x0000000019374fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d73bb1: movabs $0x128,%rcx
  0x0000000002d73bbb: jle    0x0000000002d73bcb
  0x0000000002d73bc1: movabs $0x138,%rcx
  0x0000000002d73bcb: mov    (%rbx,%rcx,1),%r8
  0x0000000002d73bcf: lea    0x1(%r8),%r8
  0x0000000002d73bd3: mov    %r8,(%rbx,%rcx,1)
  0x0000000002d73bd7: jle    0x0000000002d73c85  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x0000000002d73bdd: mov    $0x0,%ebx
  0x0000000002d73be2: jmpq   0x0000000002d73c4a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x0000000002d73be7: nop
  0x0000000002d73be8: movslq %ebx,%rcx
  0x0000000002d73beb: movzwl 0x10(%rsi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002d73bf0: mov    %rax,%r8
  0x0000000002d73bf3: shl    $0x5,%eax
  0x0000000002d73bf6: sub    %r8d,%eax
  0x0000000002d73bf9: add    %ecx,%eax
  0x0000000002d73bfb: inc    %ebx
  0x0000000002d73bfd: movabs $0x19558888,%rcx   ;   {metadata(method data for {method} {0x0000000019374fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d73c07: mov    0xe0(%rcx),%r8d
  0x0000000002d73c0e: add    $0x8,%r8d
  0x0000000002d73c12: mov    %r8d,0xe0(%rcx)
  0x0000000002d73c19: movabs $0x19374fb8,%rcx   ;   {metadata({method} {0x0000000019374fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d73c23: and    $0xfff8,%r8d
  0x0000000002d73c2a: cmp    $0x0,%r8d
  0x0000000002d73c2e: je     0x0000000002d73cad  ; OopMap{rsi=Oop rdx=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x0000000002d73c34: test   %eax,-0x3e3b3a(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d73c3a: movabs $0x19558888,%rcx   ;   {metadata(method data for {method} {0x0000000019374fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d73c44: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x0000000002d73c4a: cmp    %edi,%ebx
  0x0000000002d73c4c: movabs $0x19558888,%rcx   ;   {metadata(method data for {method} {0x0000000019374fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d73c56: movabs $0x148,%r8
  0x0000000002d73c60: jge    0x0000000002d73c70
  0x0000000002d73c66: movabs $0x158,%r8
  0x0000000002d73c70: mov    (%rcx,%r8,1),%r9
  0x0000000002d73c74: lea    0x1(%r9),%r9
  0x0000000002d73c78: mov    %r9,(%rcx,%r8,1)
  0x0000000002d73c7c: jl     0x0000000002d73be8  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002d73c82: mov    %eax,0x10(%rdx)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x0000000002d73c85: add    $0x30,%rsp
  0x0000000002d73c89: pop    %rbp
  0x0000000002d73c8a: test   %eax,-0x3e3b90(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d73c90: retq   
  0x0000000002d73c91: mov    %rax,0x8(%rsp)
  0x0000000002d73c96: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d73c9e: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x0000000002d73ca3: jmpq   0x0000000002d73b5e
  0x0000000002d73ca8: callq  0x0000000002cdff40  ; OopMap{rdx=Oop rsi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x0000000002d73cad: mov    %rcx,0x8(%rsp)
  0x0000000002d73cb2: movq   $0x2d,(%rsp)
  0x0000000002d73cba: callq  0x0000000002d710e0  ; OopMap{rsi=Oop rdx=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x0000000002d73cbf: jmpq   0x0000000002d73c34
  0x0000000002d73cc4: nop
  0x0000000002d73cc5: nop
  0x0000000002d73cc6: mov    0x2a8(%r15),%rax
  0x0000000002d73ccd: movabs $0x0,%r10
  0x0000000002d73cd7: mov    %r10,0x2a8(%r15)
  0x0000000002d73cde: movabs $0x0,%r10
  0x0000000002d73ce8: mov    %r10,0x2b0(%r15)
  0x0000000002d73cef: add    $0x30,%rsp
  0x0000000002d73cf3: pop    %rbp
  0x0000000002d73cf4: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d73cf9: hlt    
  0x0000000002d73cfa: hlt    
  0x0000000002d73cfb: hlt    
  0x0000000002d73cfc: hlt    
  0x0000000002d73cfd: hlt    
  0x0000000002d73cfe: hlt    
  0x0000000002d73cff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d73d00: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d73d05: mov    %rsp,-0x28(%rsp)
  0x0000000002d73d0a: sub    $0x80,%rsp
  0x0000000002d73d11: mov    %rax,0x78(%rsp)
  0x0000000002d73d16: mov    %rcx,0x70(%rsp)
  0x0000000002d73d1b: mov    %rdx,0x68(%rsp)
  0x0000000002d73d20: mov    %rbx,0x60(%rsp)
  0x0000000002d73d25: mov    %rbp,0x50(%rsp)
  0x0000000002d73d2a: mov    %rsi,0x48(%rsp)
  0x0000000002d73d2f: mov    %rdi,0x40(%rsp)
  0x0000000002d73d34: mov    %r8,0x38(%rsp)
  0x0000000002d73d39: mov    %r9,0x30(%rsp)
  0x0000000002d73d3e: mov    %r10,0x28(%rsp)
  0x0000000002d73d43: mov    %r11,0x20(%rsp)
  0x0000000002d73d48: mov    %r12,0x18(%rsp)
  0x0000000002d73d4d: mov    %r13,0x10(%rsp)
  0x0000000002d73d52: mov    %r14,0x8(%rsp)
  0x0000000002d73d57: mov    %r15,(%rsp)
  0x0000000002d73d5b: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d73d65: movabs $0x2d73d05,%rdx    ;   {internal_word}
  0x0000000002d73d6f: mov    %rsp,%r8
  0x0000000002d73d72: and    $0xfffffffffffffff0,%rsp
  0x0000000002d73d76: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d73d7b: hlt    
[Deopt Handler Code]
  0x0000000002d73d7c: movabs $0x2d73d7c,%r10    ;   {section_word}
  0x0000000002d73d86: push   %r10
  0x0000000002d73d88: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d73d8d: hlt    
  0x0000000002d73d8e: hlt    
  0x0000000002d73d8f: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x0000000002d73b00' size='1448' address='0x0000000002d73990' relocation_offset='288' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='731' backedge_count='14374' iicount='731' stamp='4.893'/>
Decoding compiled method 0x0000000002d73590:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000002d736e0: mov    0x8(%rdx),%r10d
  0x0000000002d736e4: shl    $0x3,%r10
  0x0000000002d736e8: cmp    %rax,%r10
  0x0000000002d736eb: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d736f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d736fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d73700: mov    %eax,-0x6000(%rsp)
  0x0000000002d73707: push   %rbp
  0x0000000002d73708: sub    $0x50,%rsp
  0x0000000002d7370c: movabs $0x194a47d8,%rcx   ;   {metadata(method data for {method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d73716: mov    0xdc(%rcx),%esi
  0x0000000002d7371c: add    $0x8,%esi
  0x0000000002d7371f: mov    %esi,0xdc(%rcx)
  0x0000000002d73725: movabs $0x19370480,%rcx   ;   {metadata({method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d7372f: and    $0x1ff8,%esi
  0x0000000002d73735: cmp    $0x0,%esi
  0x0000000002d73738: je     0x0000000002d73757
  0x0000000002d7373e: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000002d73741: mov    %rdx,0x40(%rsp)
  0x0000000002d73746: callq  0x0000000002cdfca0  ; OopMap{[64]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x0000000002d7374b: add    $0x50,%rsp
  0x0000000002d7374f: pop    %rbp
  0x0000000002d73750: test   %eax,-0x3e3656(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d73756: retq   
  0x0000000002d73757: mov    %rcx,0x8(%rsp)
  0x0000000002d7375c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d73764: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x0000000002d73769: jmp    0x0000000002d7373e
  0x0000000002d7376b: nop
  0x0000000002d7376c: nop
  0x0000000002d7376d: mov    0x2a8(%r15),%rax
  0x0000000002d73774: movabs $0x0,%r10
  0x0000000002d7377e: mov    %r10,0x2a8(%r15)
  0x0000000002d73785: movabs $0x0,%r10
  0x0000000002d7378f: mov    %r10,0x2b0(%r15)
  0x0000000002d73796: add    $0x50,%rsp
  0x0000000002d7379a: pop    %rbp
  0x0000000002d7379b: jmpq   0x0000000002cdede0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x0000000002d737a0: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d737a5: mov    %rsp,-0x28(%rsp)
  0x0000000002d737aa: sub    $0x80,%rsp
  0x0000000002d737b1: mov    %rax,0x78(%rsp)
  0x0000000002d737b6: mov    %rcx,0x70(%rsp)
  0x0000000002d737bb: mov    %rdx,0x68(%rsp)
  0x0000000002d737c0: mov    %rbx,0x60(%rsp)
  0x0000000002d737c5: mov    %rbp,0x50(%rsp)
  0x0000000002d737ca: mov    %rsi,0x48(%rsp)
  0x0000000002d737cf: mov    %rdi,0x40(%rsp)
  0x0000000002d737d4: mov    %r8,0x38(%rsp)
  0x0000000002d737d9: mov    %r9,0x30(%rsp)
  0x0000000002d737de: mov    %r10,0x28(%rsp)
  0x0000000002d737e3: mov    %r11,0x20(%rsp)
  0x0000000002d737e8: mov    %r12,0x18(%rsp)
  0x0000000002d737ed: mov    %r13,0x10(%rsp)
  0x0000000002d737f2: mov    %r14,0x8(%rsp)
  0x0000000002d737f7: mov    %r15,(%rsp)
  0x0000000002d737fb: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d73805: movabs $0x2d737a5,%rdx    ;   {internal_word}
  0x0000000002d7380f: mov    %rsp,%r8
  0x0000000002d73812: and    $0xfffffffffffffff0,%rsp
  0x0000000002d73816: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d7381b: hlt    
[Deopt Handler Code]
  0x0000000002d7381c: movabs $0x2d7381c,%r10    ;   {section_word}
  0x0000000002d73826: push   %r10
  0x0000000002d73828: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d7382d: hlt    
  0x0000000002d7382e: hlt    
  0x0000000002d7382f: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x0000000002d736e0' size='800' address='0x0000000002d73590' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='792' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4361' iicount='4361' stamp='4.897'/>
Decoding compiled method 0x0000000002d76850:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000193e8d90} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x100]  (sp of caller)
  0x0000000002d76a00: mov    0x8(%rdx),%r10d
  0x0000000002d76a04: shl    $0x3,%r10
  0x0000000002d76a08: cmp    %rax,%r10
  0x0000000002d76a0b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d76a11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d76a1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d76a20: mov    %eax,-0x6000(%rsp)
  0x0000000002d76a27: push   %rbp
  0x0000000002d76a28: sub    $0xf0,%rsp
  0x0000000002d76a2f: movabs $0x195766b0,%rsi   ;   {metadata(method data for {method} {0x00000000193e8d90} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d76a39: mov    0xdc(%rsi),%edi
  0x0000000002d76a3f: add    $0x8,%edi
  0x0000000002d76a42: mov    %edi,0xdc(%rsi)
  0x0000000002d76a48: movabs $0x193e8d88,%rsi   ;   {metadata({method} {0x00000000193e8d90} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d76a52: and    $0x1ff8,%edi
  0x0000000002d76a58: cmp    $0x0,%edi
  0x0000000002d76a5b: je     0x0000000002d76df9  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 202)

  0x0000000002d76a61: mov    %rdx,%rsi
  0x0000000002d76a64: movabs $0x195766b0,%rdi   ;   {metadata(method data for {method} {0x00000000193e8d90} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d76a6e: addq   $0x1,0x108(%rdi)
  0x0000000002d76a76: movabs $0x19576578,%rsi   ;   {metadata(method data for {method} {0x00000000193e5d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d76a80: mov    0xdc(%rsi),%edi
  0x0000000002d76a86: add    $0x8,%edi
  0x0000000002d76a89: mov    %edi,0xdc(%rsi)
  0x0000000002d76a8f: movabs $0x193e5d30,%rsi   ;   {metadata({method} {0x00000000193e5d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d76a99: and    $0x7ffff8,%edi
  0x0000000002d76a9f: cmp    $0x0,%edi
  0x0000000002d76aa2: je     0x0000000002d76e10
  0x0000000002d76aa8: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76aab: inc    %esi
  0x0000000002d76aad: mov    %rdx,%rdi
  0x0000000002d76ab0: movabs $0x19576578,%rbx   ;   {metadata(method data for {method} {0x00000000193e5d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d76aba: addq   $0x1,0x108(%rbx)
  0x0000000002d76ac2: movabs $0x195763e8,%rdi   ;   {metadata(method data for {method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d76acc: mov    0xdc(%rdi),%ebx
  0x0000000002d76ad2: add    $0x8,%ebx
  0x0000000002d76ad5: mov    %ebx,0xdc(%rdi)
  0x0000000002d76adb: movabs $0x193e4bf8,%rdi   ;   {metadata({method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d76ae5: and    $0x7ffff8,%ebx
  0x0000000002d76aeb: cmp    $0x0,%ebx
  0x0000000002d76aee: je     0x0000000002d76e27
  0x0000000002d76af4: mov    0x10(%rdx),%edi
  0x0000000002d76af7: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76afb: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; implicit exception: dispatches to 0x0000000002d76e3e
  0x0000000002d76afe: mov    %rsi,%rax
  0x0000000002d76b01: sub    %ebx,%eax
  0x0000000002d76b03: cmp    $0x0,%eax
  0x0000000002d76b06: movabs $0x195763e8,%rax   ;   {metadata(method data for {method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d76b10: movabs $0x108,%rcx
  0x0000000002d76b1a: jle    0x0000000002d76b2a
  0x0000000002d76b20: movabs $0x118,%rcx
  0x0000000002d76b2a: mov    (%rax,%rcx,1),%r9
  0x0000000002d76b2e: lea    0x1(%r9),%r9
  0x0000000002d76b32: mov    %r9,(%rax,%rcx,1)
  0x0000000002d76b36: jg     0x0000000002d76b49  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76b3c: mov    %r8d,0xc4(%rsp)
  0x0000000002d76b44: jmpq   0x0000000002d76dbb  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76b49: mov    %ebx,0xc0(%rsp)
  0x0000000002d76b50: mov    %rdi,0xc8(%rsp)
  0x0000000002d76b58: mov    %r8d,0xc4(%rsp)
  0x0000000002d76b60: mov    %rdx,%rax
  0x0000000002d76b63: movabs $0x195763e8,%rcx   ;   {metadata(method data for {method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d76b6d: addq   $0x1,0x128(%rcx)
  0x0000000002d76b75: mov    %rsi,%r8
  0x0000000002d76b78: mov    %rdx,%rsi
  0x0000000002d76b7b: mov    %rsi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76b7e: mov    %rsi,0xd0(%rsp)
  0x0000000002d76b86: nop
  0x0000000002d76b87: callq  0x0000000002cb61a0  ; OopMap{[208]=Oop [200]=Oop off=396}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {optimized virtual_call}
  0x0000000002d76b8c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76b8f: movabs $0x195763e8,%rbx   ;   {metadata(method data for {method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d76b99: addq   $0x1,0x138(%rbx)
  0x0000000002d76ba1: movabs $0x195f2d88,%rbx   ;   {metadata(method data for {method} {0x0000000019489c28} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d76bab: mov    0xdc(%rbx),%edx
  0x0000000002d76bb1: add    $0x8,%edx
  0x0000000002d76bb4: mov    %edx,0xdc(%rbx)
  0x0000000002d76bba: movabs $0x19489c20,%rbx   ;   {metadata({method} {0x0000000019489c28} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d76bc4: and    $0x7ffff8,%edx
  0x0000000002d76bca: cmp    $0x0,%edx
  0x0000000002d76bcd: je     0x0000000002d76e43
  0x0000000002d76bd3: mov    %r8,%rbx
  0x0000000002d76bd6: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002d76be0: movslq %ebx,%rbx
  0x0000000002d76be3: mov    %rbx,%rdi
  0x0000000002d76be6: cmp    $0xffffff,%rbx
  0x0000000002d76bed: ja     0x0000000002d76e5a
  0x0000000002d76bf3: movabs $0x17,%rsi
  0x0000000002d76bfd: lea    (%rsi,%rbx,2),%rsi
  0x0000000002d76c01: and    $0xfffffffffffffff8,%rsi
  0x0000000002d76c05: mov    0x60(%r15),%rax
  0x0000000002d76c09: lea    (%rax,%rsi,1),%rsi
  0x0000000002d76c0d: cmp    0x70(%r15),%rsi
  0x0000000002d76c11: ja     0x0000000002d76e5a
  0x0000000002d76c17: mov    %rsi,0x60(%r15)
  0x0000000002d76c1b: sub    %rax,%rsi
  0x0000000002d76c1e: movq   $0x1,(%rax)
  0x0000000002d76c25: mov    %rdx,%rcx
  0x0000000002d76c28: shr    $0x3,%rcx
  0x0000000002d76c2c: mov    %ecx,0x8(%rax)
  0x0000000002d76c2f: mov    %ebx,0xc(%rax)
  0x0000000002d76c32: sub    $0x10,%rsi
  0x0000000002d76c36: je     0x0000000002d76c4d
  0x0000000002d76c3c: xor    %rbx,%rbx
  0x0000000002d76c3f: shr    $0x3,%rsi
  0x0000000002d76c43: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002d76c48: dec    %rsi
  0x0000000002d76c4b: jne    0x0000000002d76c43  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76c4d: movabs $0x195f2d88,%rdx   ;   {metadata(method data for {method} {0x0000000019489c28} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d76c57: addq   $0x1,0x108(%rdx)
  0x0000000002d76c5f: movabs $0x195628e0,%rdx   ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d76c69: mov    0xdc(%rdx),%r9d
  0x0000000002d76c70: add    $0x8,%r9d
  0x0000000002d76c74: mov    %r9d,0xdc(%rdx)
  0x0000000002d76c7b: movabs $0x194656c8,%rdx   ;   {metadata({method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d76c85: and    $0x7ffff8,%r9d
  0x0000000002d76c8c: cmp    $0x0,%r9d
  0x0000000002d76c90: je     0x0000000002d76e64
  0x0000000002d76c96: mov    0xc0(%rsp),%ebx
  0x0000000002d76c9d: cmp    %r8d,%ebx
  0x0000000002d76ca0: movabs $0x195628e0,%rdx   ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d76caa: movabs $0x108,%r9
  0x0000000002d76cb4: jg     0x0000000002d76cc4
  0x0000000002d76cba: movabs $0x118,%r9
  0x0000000002d76cc4: mov    (%rdx,%r9,1),%rdi
  0x0000000002d76cc8: lea    0x1(%rdi),%rdi
  0x0000000002d76ccc: mov    %rdi,(%rdx,%r9,1)
  0x0000000002d76cd0: jg     0x0000000002d76ceb  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76cd6: movabs $0x195628e0,%rdx   ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d76ce0: incl   0x128(%rdx)
  0x0000000002d76ce6: jmpq   0x0000000002d76cee  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76ceb: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76cee: mov    0xc8(%rsp),%rdi
  0x0000000002d76cf6: movabs $0x195f2d88,%rdx   ;   {metadata(method data for {method} {0x0000000019489c28} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d76d00: addq   $0x1,0x118(%rdx)
  0x0000000002d76d08: mov    %rdi,%rdx
  0x0000000002d76d0b: mov    $0x0,%r8d
  0x0000000002d76d11: mov    %rax,%r9
  0x0000000002d76d14: mov    $0x0,%edi
  0x0000000002d76d19: mov    %rbx,%rsi
  0x0000000002d76d1c: mov    %rax,0xd8(%rsp)
  0x0000000002d76d24: lea    (%r8,%rsi,1),%rcx
  0x0000000002d76d28: cmp    0xc(%rdx),%ecx
  0x0000000002d76d2b: ja     0x0000000002d76e7b
  0x0000000002d76d31: lea    (%rdi,%rsi,1),%rcx
  0x0000000002d76d35: cmp    0xc(%r9),%ecx
  0x0000000002d76d39: ja     0x0000000002d76e7b
  0x0000000002d76d3f: test   %esi,%esi
  0x0000000002d76d41: jl     0x0000000002d76e7b
  0x0000000002d76d47: je     0x0000000002d76d8b
  0x0000000002d76d4d: movslq %r8d,%r8
  0x0000000002d76d50: movslq %edi,%rdi
  0x0000000002d76d53: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002d76d58: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002d76d5d: mov    %rsi,%r8
  0x0000000002d76d60: sub    $0x20,%rsp
  0x0000000002d76d64: test   $0xf,%esp
  0x0000000002d76d6a: je     0x0000000002d76d82
  0x0000000002d76d70: sub    $0x8,%rsp
  0x0000000002d76d74: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002d76d79: add    $0x8,%rsp
  0x0000000002d76d7d: jmpq   0x0000000002d76d87
  0x0000000002d76d82: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002d76d87: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76d8b: mov    0xd8(%rsp),%rax
  0x0000000002d76d93: mov    0xd0(%rsp),%rdx
  0x0000000002d76d9b: mov    %rax,%r10
  0x0000000002d76d9e: shr    $0x3,%r10
  0x0000000002d76da2: mov    %r10d,0x10(%rdx)
  0x0000000002d76da6: mov    %rdx,%rax
  0x0000000002d76da9: shr    $0x9,%rax
  0x0000000002d76dad: movabs $0xe824000,%rsi
  0x0000000002d76db7: movb   $0x0,(%rax,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76dbb: mov    0xc4(%rsp),%r8d
  0x0000000002d76dc3: mov    0x10(%rdx),%eax
  0x0000000002d76dc6: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76dca: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76dcd: mov    %rsi,%rdi
  0x0000000002d76dd0: inc    %edi
  0x0000000002d76dd2: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76dd5: movslq %esi,%rdi
  0x0000000002d76dd8: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000002d76e89
  0x0000000002d76ddb: jae    0x0000000002d76e93
  0x0000000002d76de1: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000002d76de7: mov    %rdx,%rax
  0x0000000002d76dea: add    $0xf0,%rsp
  0x0000000002d76df1: pop    %rbp
  0x0000000002d76df2: test   %eax,-0x3e6cf8(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d76df8: retq   
  0x0000000002d76df9: mov    %rsi,0x8(%rsp)
  0x0000000002d76dfe: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d76e06: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=1035}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ;   {runtime_call}
  0x0000000002d76e0b: jmpq   0x0000000002d76a61
  0x0000000002d76e10: mov    %rsi,0x8(%rsp)
  0x0000000002d76e15: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d76e1d: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=1058}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000002d76e22: jmpq   0x0000000002d76aa8
  0x0000000002d76e27: mov    %rdi,0x8(%rsp)
  0x0000000002d76e2c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d76e34: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=1081}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000002d76e39: jmpq   0x0000000002d76af4
  0x0000000002d76e3e: callq  0x0000000002cdff40  ; OopMap{rdx=Oop rdi=Oop off=1091}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000002d76e43: mov    %rbx,0x8(%rsp)
  0x0000000002d76e48: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d76e50: callq  0x0000000002d710e0  ; OopMap{[208]=Oop [200]=Oop off=1109}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000002d76e55: jmpq   0x0000000002d76bd3
  0x0000000002d76e5a: callq  0x0000000002d6e600  ; OopMap{[208]=Oop [200]=Oop off=1119}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000002d76e5f: jmpq   0x0000000002d76c4d
  0x0000000002d76e64: mov    %rdx,0x8(%rsp)
  0x0000000002d76e69: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d76e71: callq  0x0000000002d710e0  ; OopMap{[208]=Oop [200]=Oop rax=Oop off=1142}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000002d76e76: jmpq   0x0000000002d76c96
  0x0000000002d76e7b: nop
  0x0000000002d76e7c: nop
  0x0000000002d76e7d: nop
  0x0000000002d76e7e: nop
  0x0000000002d76e7f: callq  0x0000000002cb6620  ; OopMap{[208]=Oop [216]=Oop off=1156}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {static_call}
  0x0000000002d76e84: jmpq   0x0000000002d76d8b
  0x0000000002d76e89: callq  0x0000000002cdff40  ; OopMap{rdx=Oop rax=Oop off=1166}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000002d76e8e: callq  0x0000000002cdff40  ; OopMap{rdx=Oop rax=Oop off=1171}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000002d76e93: mov    %rsi,(%rsp)
  0x0000000002d76e97: callq  0x0000000002ce0600  ; OopMap{rdx=Oop rax=Oop off=1180}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000002d76e9c: nop
  0x0000000002d76e9d: nop
  0x0000000002d76e9e: mov    0x2a8(%r15),%rax
  0x0000000002d76ea5: movabs $0x0,%r10
  0x0000000002d76eaf: mov    %r10,0x2a8(%r15)
  0x0000000002d76eb6: movabs $0x0,%r10
  0x0000000002d76ec0: mov    %r10,0x2b0(%r15)
  0x0000000002d76ec7: add    $0xf0,%rsp
  0x0000000002d76ece: pop    %rbp
  0x0000000002d76ecf: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d76ed4: hlt    
  0x0000000002d76ed5: hlt    
  0x0000000002d76ed6: hlt    
  0x0000000002d76ed7: hlt    
  0x0000000002d76ed8: hlt    
  0x0000000002d76ed9: hlt    
  0x0000000002d76eda: hlt    
  0x0000000002d76edb: hlt    
  0x0000000002d76edc: hlt    
  0x0000000002d76edd: hlt    
  0x0000000002d76ede: hlt    
  0x0000000002d76edf: hlt    
[Stub Code]
  0x0000000002d76ee0: nop                       ;   {no_reloc}
  0x0000000002d76ee1: nop
  0x0000000002d76ee2: nop
  0x0000000002d76ee3: nop
  0x0000000002d76ee4: nop
  0x0000000002d76ee5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d76eef: jmpq   0x0000000002d76eef  ;   {runtime_call}
  0x0000000002d76ef4: nop
  0x0000000002d76ef5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d76eff: jmpq   0x0000000002d76eff  ;   {runtime_call}
[Exception Handler]
  0x0000000002d76f04: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d76f09: mov    %rsp,-0x28(%rsp)
  0x0000000002d76f0e: sub    $0x80,%rsp
  0x0000000002d76f15: mov    %rax,0x78(%rsp)
  0x0000000002d76f1a: mov    %rcx,0x70(%rsp)
  0x0000000002d76f1f: mov    %rdx,0x68(%rsp)
  0x0000000002d76f24: mov    %rbx,0x60(%rsp)
  0x0000000002d76f29: mov    %rbp,0x50(%rsp)
  0x0000000002d76f2e: mov    %rsi,0x48(%rsp)
  0x0000000002d76f33: mov    %rdi,0x40(%rsp)
  0x0000000002d76f38: mov    %r8,0x38(%rsp)
  0x0000000002d76f3d: mov    %r9,0x30(%rsp)
  0x0000000002d76f42: mov    %r10,0x28(%rsp)
  0x0000000002d76f47: mov    %r11,0x20(%rsp)
  0x0000000002d76f4c: mov    %r12,0x18(%rsp)
  0x0000000002d76f51: mov    %r13,0x10(%rsp)
  0x0000000002d76f56: mov    %r14,0x8(%rsp)
  0x0000000002d76f5b: mov    %r15,(%rsp)
  0x0000000002d76f5f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d76f69: movabs $0x2d76f09,%rdx    ;   {internal_word}
  0x0000000002d76f73: mov    %rsp,%r8
  0x0000000002d76f76: and    $0xfffffffffffffff0,%rsp
  0x0000000002d76f7a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d76f7f: hlt    
[Deopt Handler Code]
  0x0000000002d76f80: movabs $0x2d76f80,%r10    ;   {section_word}
  0x0000000002d76f8a: push   %r10
  0x0000000002d76f8c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d76f91: hlt    
  0x0000000002d76f92: hlt    
  0x0000000002d76f93: hlt    
  0x0000000002d76f94: hlt    
  0x0000000002d76f95: hlt    
  0x0000000002d76f96: hlt    
  0x0000000002d76f97: hlt    
<nmethod compile_id='6' compiler='C1' level='3' entry='0x0000000002d76a00' size='2784' address='0x0000000002d76850' relocation_offset='288' insts_offset='432' stub_offset='1680' scopes_data_offset='1904' scopes_pcs_offset='2232' dependencies_offset='2744' nul_chk_table_offset='2752' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='2944' iicount='2944' stamp='4.956'/>
<writer thread='3656'/>
<task_queued compile_id='7' method='java/lang/String charAt (I)C' bytes='29' count='102400' iicount='102400' stamp='4.957' comment='tiered' hot_count='102400'/>
<task_queued compile_id='8' method='java/lang/String getChars (II[CI)V' bytes='62' count='768' iicount='768' level='3' stamp='4.957' comment='tiered' hot_count='768'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d75e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000193741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = &apos;[C&apos;
  # parm3:    rsi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002d76040: mov    0x8(%rdx),%r10d
  0x0000000002d76044: shl    $0x3,%r10
  0x0000000002d76048: cmp    %rax,%r10
  0x0000000002d7604b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d76051: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d7605c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d76060: mov    %eax,-0x6000(%rsp)
  0x0000000002d76067: push   %rbp
  0x0000000002d76068: sub    $0x60,%rsp
  0x0000000002d7606c: movabs $0x1959e4c0,%rbx   ;   {metadata(method data for {method} {0x00000000193741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d76076: mov    0xdc(%rbx),%eax
  0x0000000002d7607c: add    $0x8,%eax
  0x0000000002d7607f: mov    %eax,0xdc(%rbx)
  0x0000000002d76085: movabs $0x193741c0,%rbx   ;   {metadata({method} {0x00000000193741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7608f: and    $0x1ff8,%eax
  0x0000000002d76095: cmp    $0x0,%eax
  0x0000000002d76098: je     0x0000000002d762ce  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x0000000002d7609e: cmp    $0x0,%r8d
  0x0000000002d760a2: movabs $0x1959e4c0,%rbx   ;   {metadata(method data for {method} {0x00000000193741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d760ac: movabs $0x108,%rax
  0x0000000002d760b6: jge    0x0000000002d760c6
  0x0000000002d760bc: movabs $0x118,%rax
  0x0000000002d760c6: mov    (%rbx,%rax,1),%rcx
  0x0000000002d760ca: lea    0x1(%rcx),%rcx
  0x0000000002d760ce: mov    %rcx,(%rbx,%rax,1)
  0x0000000002d760d2: jl     0x0000000002d7628e  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x0000000002d760d8: mov    0xc(%rdx),%edx
  0x0000000002d760db: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x0000000002d760df: mov    0xc(%rdx),%ebx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x0000000002d762e5
  0x0000000002d760e2: cmp    %ebx,%r9d
  0x0000000002d760e5: movabs $0x1959e4c0,%rbx   ;   {metadata(method data for {method} {0x00000000193741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d760ef: movabs $0x138,%rax
  0x0000000002d760f9: jle    0x0000000002d76109
  0x0000000002d760ff: movabs $0x148,%rax
  0x0000000002d76109: mov    (%rbx,%rax,1),%rcx
  0x0000000002d7610d: lea    0x1(%rcx),%rcx
  0x0000000002d76111: mov    %rcx,(%rbx,%rax,1)
  0x0000000002d76115: jg     0x0000000002d7624e  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x0000000002d7611b: cmp    %r9d,%r8d
  0x0000000002d7611e: movabs $0x1959e4c0,%rbx   ;   {metadata(method data for {method} {0x00000000193741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d76128: movabs $0x168,%rax
  0x0000000002d76132: jle    0x0000000002d76142
  0x0000000002d76138: movabs $0x178,%rax
  0x0000000002d76142: mov    (%rbx,%rax,1),%rcx
  0x0000000002d76146: lea    0x1(%rcx),%rcx
  0x0000000002d7614a: mov    %rcx,(%rbx,%rax,1)
  0x0000000002d7614e: jg     0x0000000002d76202  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x0000000002d76154: movabs $0x1959e4c0,%rbx   ;   {metadata(method data for {method} {0x00000000193741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7615e: addq   $0x1,0x198(%rbx)
  0x0000000002d76166: mov    %r9,%rbx
  0x0000000002d76169: sub    %r8d,%ebx
  0x0000000002d7616c: mov    %rdi,%r9
  0x0000000002d7616f: mov    %rsi,%rdi
  0x0000000002d76172: mov    %rbx,%rsi
  0x0000000002d76175: test   %r9,%r9
  0x0000000002d76178: je     0x0000000002d762ea
  0x0000000002d7617e: test   %r8d,%r8d
  0x0000000002d76181: jl     0x0000000002d762ea
  0x0000000002d76187: test   %edi,%edi
  0x0000000002d76189: jl     0x0000000002d762ea
  0x0000000002d7618f: lea    (%r8,%rsi,1),%rcx
  0x0000000002d76193: cmp    0xc(%rdx),%ecx
  0x0000000002d76196: ja     0x0000000002d762ea
  0x0000000002d7619c: lea    (%rdi,%rsi,1),%rcx
  0x0000000002d761a0: cmp    0xc(%r9),%ecx
  0x0000000002d761a4: ja     0x0000000002d762ea
  0x0000000002d761aa: test   %esi,%esi
  0x0000000002d761ac: jl     0x0000000002d762ea
  0x0000000002d761b2: je     0x0000000002d761f6
  0x0000000002d761b8: movslq %r8d,%r8
  0x0000000002d761bb: movslq %edi,%rdi
  0x0000000002d761be: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002d761c3: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002d761c8: mov    %rsi,%r8
  0x0000000002d761cb: sub    $0x20,%rsp
  0x0000000002d761cf: test   $0xf,%esp
  0x0000000002d761d5: je     0x0000000002d761ed
  0x0000000002d761db: sub    $0x8,%rsp
  0x0000000002d761df: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x0000000002d761e4: add    $0x8,%rsp
  0x0000000002d761e8: jmpq   0x0000000002d761f2
  0x0000000002d761ed: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x0000000002d761f2: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)

  0x0000000002d761f6: add    $0x60,%rsp
  0x0000000002d761fa: pop    %rbp
  0x0000000002d761fb: test   %eax,-0x3e6101(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d76201: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x0000000002d76202: nopw   0x0(%rax,%rax,1)
  0x0000000002d76208: jmpq   0x0000000002d76308  ;   {no_reloc}
  0x0000000002d7620d: add    %al,(%rax)
  0x0000000002d7620f: add    %al,(%rax)
  0x0000000002d76211: add    %ch,%cl
  0x0000000002d76213: sti    
  0x0000000002d76214: add    %al,(%rax)
  0x0000000002d76216: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x0000000002d76219: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00000000193741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7621c: shl    $0x59,%ah
  0x0000000002d7621f: sbb    %eax,(%rax)
  0x0000000002d76221: add    %al,(%rax)
  0x0000000002d76223: add    %cl,-0x7d(%rax)
  0x0000000002d76226: xchg   %cl,0x1000001(%rax)
  0x0000000002d7622c: sub    %r8d,%r9d
  0x0000000002d7622f: mov    %r9,%r8
  0x0000000002d76232: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x0000000002d76235: mov    %rax,0x38(%rsp)
  0x0000000002d7623a: nop
  0x0000000002d7623b: nop
  0x0000000002d7623c: nop
  0x0000000002d7623d: nop
  0x0000000002d7623e: nop
  0x0000000002d7623f: callq  0x0000000002cb61a0  ; OopMap{[56]=Oop off=516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x0000000002d76244: mov    0x38(%rsp),%rax
  0x0000000002d76249: jmpq   0x0000000002d76396  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x0000000002d7624e: xchg   %ax,%ax
  0x0000000002d76250: jmpq   0x0000000002d7632e  ;   {no_reloc}
  0x0000000002d76255: add    %al,(%rax)
  0x0000000002d76257: add    %al,(%rax)
  0x0000000002d76259: add    %ch,%cl
  0x0000000002d7625b: flds   (%rax)
  0x0000000002d7625d: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x0000000002d7625f: mov    %rax,%r8
  0x0000000002d76262: movabs $0x1959e4c0,%rdx   ;   {metadata(method data for {method} {0x00000000193741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7626c: addq   $0x1,0x158(%rdx)
  0x0000000002d76274: mov    %r9,%r8
  0x0000000002d76277: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x0000000002d7627a: mov    %rax,0x40(%rsp)
  0x0000000002d7627f: callq  0x0000000002cb61a0  ; OopMap{[64]=Oop off=580}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x0000000002d76284: mov    0x40(%rsp),%rax
  0x0000000002d76289: jmpq   0x0000000002d76396  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x0000000002d7628e: xchg   %ax,%ax
  0x0000000002d76290: jmpq   0x0000000002d76354  ;   {no_reloc}
  0x0000000002d76295: add    %al,(%rax)
  0x0000000002d76297: add    %al,(%rax)
  0x0000000002d76299: add    %ch,%cl
  0x0000000002d7629b: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x0000000002d762a0: mov    %eax,%edx
  0x0000000002d762a2: movabs $0x1959e4c0,%rsi   ;   {metadata(method data for {method} {0x00000000193741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d762ac: addq   $0x1,0x128(%rsi)
  0x0000000002d762b4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x0000000002d762b7: mov    %rax,0x48(%rsp)
  0x0000000002d762bc: nop
  0x0000000002d762bd: nop
  0x0000000002d762be: nop
  0x0000000002d762bf: callq  0x0000000002cb61a0  ; OopMap{[72]=Oop off=644}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x0000000002d762c4: mov    0x48(%rsp),%rax
  0x0000000002d762c9: jmpq   0x0000000002d76396
  0x0000000002d762ce: mov    %rbx,0x8(%rsp)
  0x0000000002d762d3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d762db: callq  0x0000000002d710e0  ; OopMap{rdx=Oop rdi=Oop off=672}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x0000000002d762e0: jmpq   0x0000000002d7609e
  0x0000000002d762e5: callq  0x0000000002cdff40  ; OopMap{rdi=Oop rdx=Oop off=682}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x0000000002d762ea: nop
  0x0000000002d762eb: nop
  0x0000000002d762ec: nop
  0x0000000002d762ed: nop
  0x0000000002d762ee: nop
  0x0000000002d762ef: callq  0x0000000002cb6620  ; OopMap{off=692}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x0000000002d762f4: jmpq   0x0000000002d761f6
  0x0000000002d762f9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d76303: mov    $0xa050f00,%eax
  0x0000000002d76308: callq  0x0000000002d72160  ; OopMap{off=717}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x0000000002d7630d: jmpq   0x0000000002d76208
  0x0000000002d76312: mov    %rdx,%rdx
  0x0000000002d76315: callq  0x0000000002cdfa20  ; OopMap{off=730}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x0000000002d7631a: jmpq   0x0000000002d76217
  0x0000000002d7631f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d76329: mov    $0xa050f00,%eax
  0x0000000002d7632e: callq  0x0000000002d72160  ; OopMap{off=755}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000002d76333: jmpq   0x0000000002d76250
  0x0000000002d76338: mov    %rdx,%rdx
  0x0000000002d7633b: callq  0x0000000002cdfa20  ; OopMap{off=768}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000002d76340: jmpq   0x0000000002d7625f
  0x0000000002d76345: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d7634f: mov    $0xa050f00,%eax
  0x0000000002d76354: callq  0x0000000002d72160  ; OopMap{off=793}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000002d76359: jmpq   0x0000000002d76290
  0x0000000002d7635e: mov    %rdx,%rdx
  0x0000000002d76361: callq  0x0000000002cdfa20  ; OopMap{off=806}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000002d76366: jmpq   0x0000000002d7629f
  0x0000000002d7636b: nop
  0x0000000002d7636c: nop
  0x0000000002d7636d: mov    0x2a8(%r15),%rax
  0x0000000002d76374: movabs $0x0,%r10
  0x0000000002d7637e: mov    %r10,0x2a8(%r15)
  0x0000000002d76385: movabs $0x0,%r10
  0x0000000002d7638f: mov    %r10,0x2b0(%r15)
  0x0000000002d76396: add    $0x60,%rsp
  0x0000000002d7639a: pop    %rbp
  0x0000000002d7639b: jmpq   0x0000000002cdede0  ;   {runtime_call}
[Stub Code]
  0x0000000002d763a0: nop                       ;   {no_reloc}
  0x0000000002d763a1: nop
  0x0000000002d763a2: nop
  0x0000000002d763a3: nop
  0x0000000002d763a4: nop
  0x0000000002d763a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d763af: jmpq   0x0000000002d763af  ;   {runtime_call}
  0x0000000002d763b4: nop
  0x0000000002d763b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d763bf: jmpq   0x0000000002d763bf  ;   {runtime_call}
  0x0000000002d763c4: nop
  0x0000000002d763c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d763cf: jmpq   0x0000000002d763cf  ;   {runtime_call}
  0x0000000002d763d4: nop
  0x0000000002d763d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d763df: jmpq   0x0000000002d763df  ;   {runtime_call}
[Exception Handler]
  0x0000000002d763e4: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d763e9: mov    %rsp,-0x28(%rsp)
  0x0000000002d763ee: sub    $0x80,%rsp
  0x0000000002d763f5: mov    %rax,0x78(%rsp)
  0x0000000002d763fa: mov    %rcx,0x70(%rsp)
  0x0000000002d763ff: mov    %rdx,0x68(%rsp)
  0x0000000002d76404: mov    %rbx,0x60(%rsp)
  0x0000000002d76409: mov    %rbp,0x50(%rsp)
  0x0000000002d7640e: mov    %rsi,0x48(%rsp)
  0x0000000002d76413: mov    %rdi,0x40(%rsp)
  0x0000000002d76418: mov    %r8,0x38(%rsp)
  0x0000000002d7641d: mov    %r9,0x30(%rsp)
  0x0000000002d76422: mov    %r10,0x28(%rsp)
  0x0000000002d76427: mov    %r11,0x20(%rsp)
  0x0000000002d7642c: mov    %r12,0x18(%rsp)
  0x0000000002d76431: mov    %r13,0x10(%rsp)
  0x0000000002d76436: mov    %r14,0x8(%rsp)
  0x0000000002d7643b: mov    %r15,(%rsp)
  0x0000000002d7643f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d76449: movabs $0x2d763e9,%rdx    ;   {internal_word}
  0x0000000002d76453: mov    %rsp,%r8
  0x0000000002d76456: and    $0xfffffffffffffff0,%rsp
  0x0000000002d7645a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d7645f: hlt    
[Deopt Handler Code]
  0x0000000002d76460: movabs $0x2d76460,%r10    ;   {section_word}
  0x0000000002d7646a: push   %r10
  0x0000000002d7646c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d76471: hlt    
  0x0000000002d76472: hlt    
  0x0000000002d76473: hlt    
  0x0000000002d76474: hlt    
  0x0000000002d76475: hlt    
  0x0000000002d76476: hlt    
  0x0000000002d76477: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x0000000002d76040' size='2256' address='0x0000000002d75e90' relocation_offset='288' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='768' iicount='768' stamp='5.011'/>
<writer thread='11160'/>
Decoding compiled method 0x0000000002d74f90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019373d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002d750e0: mov    0x8(%rdx),%r10d
  0x0000000002d750e4: shl    $0x3,%r10
  0x0000000002d750e8: cmp    %r10,%rax
  0x0000000002d750eb: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d750f1: data16 xchg %ax,%ax
  0x0000000002d750f4: nopl   0x0(%rax,%rax,1)
  0x0000000002d750fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d75100: mov    %eax,-0x6000(%rsp)
  0x0000000002d75107: push   %rbp
  0x0000000002d75108: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x0000000002d7510c: test   %r8d,%r8d
  0x0000000002d7510f: jl     0x0000000002d7514d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000002d75111: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x0000000002d75115: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000000002d75175
  0x0000000002d7511a: cmp    %ebp,%r8d
  0x0000000002d7511d: jge    0x0000000002d75161  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000002d7511f: cmp    %ebp,%r8d
  0x0000000002d75122: jae    0x0000000002d7513a
  0x0000000002d75124: shl    $0x3,%r10
  0x0000000002d75128: movzwl 0x10(%r10,%r8,2),%eax
  0x0000000002d7512e: add    $0x20,%rsp
  0x0000000002d75132: pop    %rbp
  0x0000000002d75133: test   %eax,-0x3e5139(%rip)        # 0x0000000002990000
                                                ;   {poll_return}
  0x0000000002d75139: retq   
  0x0000000002d7513a: mov    $0xffffffe4,%edx
  0x0000000002d7513f: mov    %r8d,%ebp
  0x0000000002d75142: mov    %r10d,(%rsp)
  0x0000000002d75146: nop
  0x0000000002d75147: callq  0x0000000002cb57a0  ; OopMap{[0]=NarrowOop off=108}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x0000000002d7514c: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x0000000002d7514d: mov    %rdx,%rbp
  0x0000000002d75150: mov    %r8d,0x4(%rsp)
  0x0000000002d75155: mov    $0xffffff65,%edx
  0x0000000002d7515a: nop
  0x0000000002d7515b: callq  0x0000000002cb57a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x0000000002d75160: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000002d75161: mov    %rdx,(%rsp)
  0x0000000002d75165: mov    %r8d,0xc(%rsp)
  0x0000000002d7516a: mov    $0xffffff65,%edx
  0x0000000002d7516f: callq  0x0000000002cb57a0  ; OopMap{[0]=Oop off=148}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x0000000002d75174: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000002d75175: mov    $0xfffffff6,%edx
  0x0000000002d7517a: nop
  0x0000000002d7517b: callq  0x0000000002cb57a0  ; OopMap{off=160}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000002d75180: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x0000000002d75181: hlt    
  0x0000000002d75182: hlt    
  0x0000000002d75183: hlt    
  0x0000000002d75184: hlt    
  0x0000000002d75185: hlt    
  0x0000000002d75186: hlt    
  0x0000000002d75187: hlt    
  0x0000000002d75188: hlt    
  0x0000000002d75189: hlt    
  0x0000000002d7518a: hlt    
  0x0000000002d7518b: hlt    
  0x0000000002d7518c: hlt    
  0x0000000002d7518d: hlt    
  0x0000000002d7518e: hlt    
  0x0000000002d7518f: hlt    
  0x0000000002d75190: hlt    
  0x0000000002d75191: hlt    
  0x0000000002d75192: hlt    
  0x0000000002d75193: hlt    
  0x0000000002d75194: hlt    
  0x0000000002d75195: hlt    
  0x0000000002d75196: hlt    
  0x0000000002d75197: hlt    
  0x0000000002d75198: hlt    
  0x0000000002d75199: hlt    
  0x0000000002d7519a: hlt    
  0x0000000002d7519b: hlt    
  0x0000000002d7519c: hlt    
  0x0000000002d7519d: hlt    
  0x0000000002d7519e: hlt    
  0x0000000002d7519f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d751a0: jmpq   0x0000000002cdf4a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002d751a5: callq  0x0000000002d751aa
  0x0000000002d751aa: subq   $0x5,(%rsp)
  0x0000000002d751af: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d751b4: hlt    
  0x0000000002d751b5: hlt    
  0x0000000002d751b6: hlt    
  0x0000000002d751b7: hlt    
<nmethod compile_id='7' compiler='C2' level='4' entry='0x0000000002d750e0' size='928' address='0x0000000002d74f90' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='102427' iicount='102427' stamp='5.028'/>
<writer thread='1944'/>
Decoding compiled method 0x0000000002d74850:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002d749a0: mov    0x8(%rdx),%r10d
  0x0000000002d749a4: shl    $0x3,%r10
  0x0000000002d749a8: cmp    %r10,%rax
  0x0000000002d749ab: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d749b1: data16 xchg %ax,%ax
  0x0000000002d749b4: nopl   0x0(%rax,%rax,1)
  0x0000000002d749bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d749c0: mov    %eax,-0x6000(%rsp)
  0x0000000002d749c7: push   %rbp
  0x0000000002d749c8: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000002d749cc: mov    %rdx,0x40(%rsp)
  0x0000000002d749d1: mov    0x10(%rdx),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000000002d749d5: mov    0xc(%r12,%r9,8),%ebp  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x0000000002d74c04
  0x0000000002d749da: mov    %r8d,%r11d
  0x0000000002d749dd: sub    %ebp,%r11d
  0x0000000002d749e0: test   %r11d,%r11d
  0x0000000002d749e3: jg     0x0000000002d749f6  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000002d749e5: add    $0x60,%rsp
  0x0000000002d749e9: pop    %rbp
  0x0000000002d749ea: test   %eax,-0x3e49f0(%rip)        # 0x0000000002990000
                                                ;   {poll_return}
  0x0000000002d749f0: retq   
  0x0000000002d749f1: mov    %r8d,%r11d
  0x0000000002d749f4: jmp    0x0000000002d74a0d
  0x0000000002d749f6: mov    %ebp,%r11d
  0x0000000002d749f9: shl    %r11d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002d749fc: mov    %r11d,%ecx
  0x0000000002d749ff: sub    %r8d,%ecx
  0x0000000002d74a02: add    $0x2,%ecx
  0x0000000002d74a05: test   %ecx,%ecx
  0x0000000002d74a07: jl     0x0000000002d749f1  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002d74a09: add    $0x2,%r11d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002d74a0d: test   %r11d,%r11d
  0x0000000002d74a10: jle    0x0000000002d74a1e  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002d74a12: mov    $0x7ffffff7,%ebx
  0x0000000002d74a17: sub    %r11d,%ebx
  0x0000000002d74a1a: test   %ebx,%ebx
  0x0000000002d74a1c: jge    0x0000000002d74a30  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002d74a1e: mov    %r9d,0x28(%rsp)
  0x0000000002d74a23: callq  0x0000000002cb61a0  ; OopMap{[40]=NarrowOop [64]=Oop off=136}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x0000000002d74a28: mov    %eax,%r11d
  0x0000000002d74a2b: mov    0x28(%rsp),%r9d    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002d74a30: cmp    $0x80000,%r11d
  0x0000000002d74a37: ja     0x0000000002d74bbc
  0x0000000002d74a3d: movslq %r11d,%r10
  0x0000000002d74a40: shl    %r10
  0x0000000002d74a43: add    $0x17,%r10
  0x0000000002d74a47: mov    %r10,%rdi
  0x0000000002d74a4a: and    $0xfffffffffffffff8,%rdi
  0x0000000002d74a4e: cmp    $0x80000,%r11d
  0x0000000002d74a55: ja     0x0000000002d74b6e
  0x0000000002d74a5b: mov    0x60(%r15),%rbx
  0x0000000002d74a5f: mov    %rbx,%r8
  0x0000000002d74a62: add    %rdi,%r8
  0x0000000002d74a65: cmp    0x70(%r15),%r8
  0x0000000002d74a69: jae    0x0000000002d74b6e
  0x0000000002d74a6f: mov    %r8,0x60(%r15)
  0x0000000002d74a73: prefetchw 0xc0(%r8)
  0x0000000002d74a7b: movq   $0x1,(%rbx)
  0x0000000002d74a82: prefetchw 0x100(%r8)
  0x0000000002d74a8a: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x0000000002d74a91: mov    %r11d,0xc(%rbx)
  0x0000000002d74a95: prefetchw 0x140(%r8)
  0x0000000002d74a9d: prefetchw 0x180(%r8)      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002d74aa5: cmp    %r11d,%ebp
  0x0000000002d74aa8: mov    %r11d,%esi
  0x0000000002d74aab: cmovl  %ebp,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002d74aae: mov    %rbx,%r13
  0x0000000002d74ab1: add    $0x10,%r13         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002d74ab5: lea    (%r12,%r9,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000000002d74ab9: shr    $0x3,%r10
  0x0000000002d74abd: mov    %r10,%rcx
  0x0000000002d74ac0: add    $0xfffffffffffffffe,%rcx
  0x0000000002d74ac4: cmp    %esi,%ebp
  0x0000000002d74ac6: jb     0x0000000002d74bc4
  0x0000000002d74acc: cmp    %esi,%r11d
  0x0000000002d74acf: jb     0x0000000002d74bc4
  0x0000000002d74ad5: test   %esi,%esi
  0x0000000002d74ad7: jle    0x0000000002d74bf2
  0x0000000002d74add: lea    0x10(%r12,%r9,8),%r9
  0x0000000002d74ae2: cmp    %r11d,%esi
  0x0000000002d74ae5: jl     0x0000000002d74b2b
  0x0000000002d74ae7: add    $0xfffffffffffffff0,%rdi
  0x0000000002d74aeb: shr    $0x3,%rdi
  0x0000000002d74aef: mov    %r9,%rcx
  0x0000000002d74af2: mov    %r13,%rdx
  0x0000000002d74af5: mov    %rdi,%r8
  0x0000000002d74af8: movabs $0x2cc2ca0,%r10
  0x0000000002d74b02: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002d74b05: mov    %rbx,%r10
  0x0000000002d74b08: shr    $0x3,%r10
  0x0000000002d74b0c: mov    0x40(%rsp),%r11
  0x0000000002d74b11: mov    %r10d,0x10(%r11)
  0x0000000002d74b15: mov    %r11,%r10
  0x0000000002d74b18: shr    $0x9,%r10
  0x0000000002d74b1c: mov    $0xe824000,%r11d
  0x0000000002d74b22: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x0000000002d74b26: jmpq   0x0000000002d749e5
  0x0000000002d74b2b: movslq %esi,%r8
  0x0000000002d74b2e: mov    %r8,%r11
  0x0000000002d74b31: shl    %r11
  0x0000000002d74b34: add    $0x10,%r11
  0x0000000002d74b38: mov    %r11,%rcx
  0x0000000002d74b3b: and    $0xfffffffffffffff9,%rcx
  0x0000000002d74b3f: mov    %rbx,%rdi
  0x0000000002d74b42: add    %rcx,%rdi
  0x0000000002d74b45: shr    $0x3,%r11
  0x0000000002d74b49: sub    %r11,%r10
  0x0000000002d74b4c: mov    %r10,%rcx
  0x0000000002d74b4f: xor    %rax,%rax
  0x0000000002d74b52: shl    $0x3,%rcx
  0x0000000002d74b56: rep rex.W stos %al,%es:(%rdi)
  0x0000000002d74b59: mov    %r9,%rcx
  0x0000000002d74b5c: mov    %r13,%rdx
  0x0000000002d74b5f: movabs $0x2cc2980,%r10
  0x0000000002d74b69: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002d74b6c: jmp    0x0000000002d74b05
  0x0000000002d74b6e: mov    %r9d,0x2c(%rsp)
  0x0000000002d74b73: mov    %rdi,0x38(%rsp)
  0x0000000002d74b78: mov    %r10,0x30(%rsp)
  0x0000000002d74b7d: mov    %r11d,0x28(%rsp)
  0x0000000002d74b82: rex.W pushq 0x40(%rsp)
  0x0000000002d74b87: rex.W popq 0x20(%rsp)
  0x0000000002d74b8c: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002d74b96: mov    %r11d,%r8d
  0x0000000002d74b99: xchg   %ax,%ax
  0x0000000002d74b9b: callq  0x0000000002d70d60  ; OopMap{[32]=Oop [44]=NarrowOop [64]=Oop off=512}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000002d74ba0: mov    0x28(%rsp),%r11d
  0x0000000002d74ba5: mov    0x30(%rsp),%r10
  0x0000000002d74baa: mov    0x38(%rsp),%rdi
  0x0000000002d74baf: mov    0x2c(%rsp),%r9d
  0x0000000002d74bb4: mov    %rax,%rbx
  0x0000000002d74bb7: jmpq   0x0000000002d74aa5
  0x0000000002d74bbc: movslq %r11d,%r10         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002d74bbf: jmpq   0x0000000002d74a40
  0x0000000002d74bc4: mov    %r13,%rdi
  0x0000000002d74bc7: xor    %rax,%rax
  0x0000000002d74bca: shl    $0x3,%rcx
  0x0000000002d74bce: rep rex.W stos %al,%es:(%rdi)
  0x0000000002d74bd1: xor    %r8d,%r8d
  0x0000000002d74bd4: mov    %rbx,%r9
  0x0000000002d74bd7: xor    %edi,%edi
  0x0000000002d74bd9: mov    0x40(%rsp),%rbp
  0x0000000002d74bde: mov    %rbx,0x28(%rsp)
  0x0000000002d74be3: callq  0x0000000002d767e0  ; OopMap{rbp=Oop [40]=Oop [64]=Oop off=584}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000002d74be8: mov    0x28(%rsp),%rbx
  0x0000000002d74bed: jmpq   0x0000000002d74b05
  0x0000000002d74bf2: mov    %r13,%rdi
  0x0000000002d74bf5: xor    %rax,%rax
  0x0000000002d74bf8: shl    $0x3,%rcx
  0x0000000002d74bfc: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002d74bff: jmpq   0x0000000002d74b05
  0x0000000002d74c04: mov    $0xfffffff6,%edx
  0x0000000002d74c09: xchg   %ax,%ax
  0x0000000002d74c0b: callq  0x0000000002cb57a0  ; OopMap{off=624}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x0000000002d74c10: int3   
  0x0000000002d74c11: jmp    0x0000000002d74c13  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002d74c13: mov    %rax,%rdx
  0x0000000002d74c16: jmp    0x0000000002d74c1b  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002d74c18: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000002d74c1b: add    $0x60,%rsp
  0x0000000002d74c1f: pop    %rbp
  0x0000000002d74c20: jmpq   0x0000000002d72f60  ;   {runtime_call}
  0x0000000002d74c25: hlt    
  0x0000000002d74c26: hlt    
  0x0000000002d74c27: hlt    
  0x0000000002d74c28: hlt    
  0x0000000002d74c29: hlt    
  0x0000000002d74c2a: hlt    
  0x0000000002d74c2b: hlt    
  0x0000000002d74c2c: hlt    
  0x0000000002d74c2d: hlt    
  0x0000000002d74c2e: hlt    
  0x0000000002d74c2f: hlt    
  0x0000000002d74c30: hlt    
  0x0000000002d74c31: hlt    
  0x0000000002d74c32: hlt    
  0x0000000002d74c33: hlt    
  0x0000000002d74c34: hlt    
  0x0000000002d74c35: hlt    
  0x0000000002d74c36: hlt    
  0x0000000002d74c37: hlt    
  0x0000000002d74c38: hlt    
  0x0000000002d74c39: hlt    
  0x0000000002d74c3a: hlt    
  0x0000000002d74c3b: hlt    
  0x0000000002d74c3c: hlt    
  0x0000000002d74c3d: hlt    
  0x0000000002d74c3e: hlt    
  0x0000000002d74c3f: hlt    
[Stub Code]
  0x0000000002d74c40: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002d74c4a: jmpq   0x0000000002d74c4a  ;   {runtime_call}
[Exception Handler]
  0x0000000002d74c4f: jmpq   0x0000000002cdf4a0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002d74c54: callq  0x0000000002d74c59
  0x0000000002d74c59: subq   $0x5,(%rsp)
  0x0000000002d74c5e: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d74c63: hlt    
  0x0000000002d74c64: hlt    
  0x0000000002d74c65: hlt    
  0x0000000002d74c66: hlt    
  0x0000000002d74c67: hlt    
<nmethod compile_id='3' compiler='C2' level='4' entry='0x0000000002d749a0' size='1816' address='0x0000000002d74850' relocation_offset='288' insts_offset='336' stub_offset='1008' scopes_data_offset='1080' scopes_pcs_offset='1272' dependencies_offset='1720' handler_table_offset='1728' nul_chk_table_offset='1800' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='7180' iicount='7180' stamp='5.055'/>
<writer thread='5912'/>
<task_queued compile_id='9' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='384' iicount='384' level='3' stamp='5.055' comment='tiered' hot_count='384'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d74310:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000019389508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d74460: mov    %eax,-0x6000(%rsp)
  0x0000000002d74467: push   %rbp
  0x0000000002d74468: sub    $0x30,%rsp
  0x0000000002d7446c: movabs $0x196055a0,%rax   ;   {metadata(method data for {method} {0x0000000019389508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000000002d74476: mov    0xdc(%rax),%esi
  0x0000000002d7447c: add    $0x8,%esi
  0x0000000002d7447f: mov    %esi,0xdc(%rax)
  0x0000000002d74485: movabs $0x19389500,%rax   ;   {metadata({method} {0x0000000019389508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000000002d7448f: and    $0x1ff8,%esi
  0x0000000002d74495: cmp    $0x0,%esi
  0x0000000002d74498: je     0x0000000002d744bb
  0x0000000002d7449e: movabs $0x780800c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000002d744a8: mov    0x74(%rax),%eax
  0x0000000002d744ab: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x0000000002d744af: add    $0x30,%rsp
  0x0000000002d744b3: pop    %rbp
  0x0000000002d744b4: test   %eax,-0x3e43ba(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d744ba: retq   
  0x0000000002d744bb: mov    %rax,0x8(%rsp)
  0x0000000002d744c0: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d744c8: callq  0x0000000002d710e0  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x0000000002d744cd: jmp    0x0000000002d7449e
  0x0000000002d744cf: nop
  0x0000000002d744d0: nop
  0x0000000002d744d1: mov    0x2a8(%r15),%rax
  0x0000000002d744d8: movabs $0x0,%r10
  0x0000000002d744e2: mov    %r10,0x2a8(%r15)
  0x0000000002d744e9: movabs $0x0,%r10
  0x0000000002d744f3: mov    %r10,0x2b0(%r15)
  0x0000000002d744fa: add    $0x30,%rsp
  0x0000000002d744fe: pop    %rbp
  0x0000000002d744ff: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d74504: hlt    
  0x0000000002d74505: hlt    
  0x0000000002d74506: hlt    
  0x0000000002d74507: hlt    
  0x0000000002d74508: hlt    
  0x0000000002d74509: hlt    
  0x0000000002d7450a: hlt    
  0x0000000002d7450b: hlt    
  0x0000000002d7450c: hlt    
  0x0000000002d7450d: hlt    
  0x0000000002d7450e: hlt    
  0x0000000002d7450f: hlt    
  0x0000000002d74510: hlt    
  0x0000000002d74511: hlt    
  0x0000000002d74512: hlt    
  0x0000000002d74513: hlt    
  0x0000000002d74514: hlt    
  0x0000000002d74515: hlt    
  0x0000000002d74516: hlt    
  0x0000000002d74517: hlt    
  0x0000000002d74518: hlt    
  0x0000000002d74519: hlt    
  0x0000000002d7451a: hlt    
  0x0000000002d7451b: hlt    
  0x0000000002d7451c: hlt    
  0x0000000002d7451d: hlt    
  0x0000000002d7451e: hlt    
  0x0000000002d7451f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d74520: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d74525: mov    %rsp,-0x28(%rsp)
  0x0000000002d7452a: sub    $0x80,%rsp
  0x0000000002d74531: mov    %rax,0x78(%rsp)
  0x0000000002d74536: mov    %rcx,0x70(%rsp)
  0x0000000002d7453b: mov    %rdx,0x68(%rsp)
  0x0000000002d74540: mov    %rbx,0x60(%rsp)
  0x0000000002d74545: mov    %rbp,0x50(%rsp)
  0x0000000002d7454a: mov    %rsi,0x48(%rsp)
  0x0000000002d7454f: mov    %rdi,0x40(%rsp)
  0x0000000002d74554: mov    %r8,0x38(%rsp)
  0x0000000002d74559: mov    %r9,0x30(%rsp)
  0x0000000002d7455e: mov    %r10,0x28(%rsp)
  0x0000000002d74563: mov    %r11,0x20(%rsp)
  0x0000000002d74568: mov    %r12,0x18(%rsp)
  0x0000000002d7456d: mov    %r13,0x10(%rsp)
  0x0000000002d74572: mov    %r14,0x8(%rsp)
  0x0000000002d74577: mov    %r15,(%rsp)
  0x0000000002d7457b: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d74585: movabs $0x2d74525,%rdx    ;   {internal_word}
  0x0000000002d7458f: mov    %rsp,%r8
  0x0000000002d74592: and    $0xfffffffffffffff0,%rsp
  0x0000000002d74596: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d7459b: hlt    
[Deopt Handler Code]
  0x0000000002d7459c: movabs $0x2d7459c,%r10    ;   {section_word}
  0x0000000002d745a6: push   %r10
  0x0000000002d745a8: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d745ad: hlt    
  0x0000000002d745ae: hlt    
  0x0000000002d745af: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x0000000002d74460' size='768' address='0x0000000002d74310' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='388' iicount='388' stamp='5.061'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='5912'/>
<task_queued compile_id='10' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='640' backedge_count='3009' iicount='640' level='3' stamp='5.062' comment='tiered' hot_count='640'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d7a990:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d7ab20: mov    0x8(%rdx),%r10d
  0x0000000002d7ab24: shl    $0x3,%r10
  0x0000000002d7ab28: cmp    %rax,%r10
  0x0000000002d7ab2b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d7ab31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d7ab3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d7ab40: mov    %eax,-0x6000(%rsp)
  0x0000000002d7ab47: push   %rbp
  0x0000000002d7ab48: sub    $0x30,%rsp
  0x0000000002d7ab4c: movabs $0x195a81f0,%rax   ;   {metadata(method data for {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7ab56: mov    0xdc(%rax),%esi
  0x0000000002d7ab5c: add    $0x8,%esi
  0x0000000002d7ab5f: mov    %esi,0xdc(%rax)
  0x0000000002d7ab65: movabs $0x193745d0,%rax   ;   {metadata({method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7ab6f: and    $0x1ff8,%esi
  0x0000000002d7ab75: cmp    $0x0,%esi
  0x0000000002d7ab78: je     0x0000000002d7af4e  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x0000000002d7ab7e: cmp    %r8,%rdx
  0x0000000002d7ab81: movabs $0x195a81f0,%rax   ;   {metadata(method data for {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7ab8b: movabs $0x108,%rsi
  0x0000000002d7ab95: jne    0x0000000002d7aba5
  0x0000000002d7ab9b: movabs $0x118,%rsi
  0x0000000002d7aba5: mov    (%rax,%rsi,1),%rdi
  0x0000000002d7aba9: lea    0x1(%rdi),%rdi
  0x0000000002d7abad: mov    %rdi,(%rax,%rsi,1)
  0x0000000002d7abb1: je     0x0000000002d7af3d  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x0000000002d7abb7: cmp    $0x0,%r8
  0x0000000002d7abbb: jne    0x0000000002d7abd6
  0x0000000002d7abbd: movabs $0x195a81f0,%rdi   ;   {metadata(method data for {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7abc7: orl    $0x100,0x120(%rdi)
  0x0000000002d7abd1: jmpq   0x0000000002d7ac98
  0x0000000002d7abd6: movabs $0x7c00016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002d7abe0: mov    0x8(%r8),%esi
  0x0000000002d7abe4: shl    $0x3,%rsi
  0x0000000002d7abe8: cmp    %rsi,%rbx
  0x0000000002d7abeb: jne    0x0000000002d7ac7c
  0x0000000002d7abf1: movabs $0x195a81f0,%rdi   ;   {metadata(method data for {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7abfb: mov    0x8(%r8),%ebx
  0x0000000002d7abff: shl    $0x3,%rbx
  0x0000000002d7ac03: cmp    0x130(%rdi),%rbx
  0x0000000002d7ac0a: jne    0x0000000002d7ac19
  0x0000000002d7ac0c: addq   $0x1,0x138(%rdi)
  0x0000000002d7ac14: jmpq   0x0000000002d7ac9d
  0x0000000002d7ac19: cmp    0x140(%rdi),%rbx
  0x0000000002d7ac20: jne    0x0000000002d7ac2f
  0x0000000002d7ac22: addq   $0x1,0x148(%rdi)
  0x0000000002d7ac2a: jmpq   0x0000000002d7ac9d
  0x0000000002d7ac2f: cmpq   $0x0,0x130(%rdi)
  0x0000000002d7ac3a: jne    0x0000000002d7ac53
  0x0000000002d7ac3c: mov    %rbx,0x130(%rdi)
  0x0000000002d7ac43: movq   $0x1,0x138(%rdi)
  0x0000000002d7ac4e: jmpq   0x0000000002d7ac9d
  0x0000000002d7ac53: cmpq   $0x0,0x140(%rdi)
  0x0000000002d7ac5e: jne    0x0000000002d7ac77
  0x0000000002d7ac60: mov    %rbx,0x140(%rdi)
  0x0000000002d7ac67: movq   $0x1,0x148(%rdi)
  0x0000000002d7ac72: jmpq   0x0000000002d7ac9d
  0x0000000002d7ac77: jmpq   0x0000000002d7ac9d
  0x0000000002d7ac7c: movabs $0x195a81f0,%rdi   ;   {metadata(method data for {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7ac86: subq   $0x1,0x128(%rdi)
  0x0000000002d7ac8e: jmpq   0x0000000002d7ac98
  0x0000000002d7ac93: jmpq   0x0000000002d7ac9d
  0x0000000002d7ac98: xor    %rax,%rax
  0x0000000002d7ac9b: jmp    0x0000000002d7aca7
  0x0000000002d7ac9d: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x0000000002d7aca7: cmp    $0x0,%eax
  0x0000000002d7acaa: movabs $0x195a81f0,%rax   ;   {metadata(method data for {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7acb4: movabs $0x158,%rsi
  0x0000000002d7acbe: je     0x0000000002d7acce
  0x0000000002d7acc4: movabs $0x168,%rsi
  0x0000000002d7acce: mov    (%rax,%rsi,1),%rdi
  0x0000000002d7acd2: lea    0x1(%rdi),%rdi
  0x0000000002d7acd6: mov    %rdi,(%rax,%rsi,1)
  0x0000000002d7acda: je     0x0000000002d7af2c  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x0000000002d7ace0: cmp    $0x0,%r8
  0x0000000002d7ace4: jne    0x0000000002d7acff
  0x0000000002d7ace6: movabs $0x195a81f0,%rdi   ;   {metadata(method data for {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7acf0: orl    $0x100,0x170(%rdi)
  0x0000000002d7acfa: jmpq   0x0000000002d7adc1
  0x0000000002d7acff: movabs $0x7c00016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002d7ad09: mov    0x8(%r8),%esi
  0x0000000002d7ad0d: shl    $0x3,%rsi
  0x0000000002d7ad11: cmp    %rsi,%rbx
  0x0000000002d7ad14: jne    0x0000000002d7ada5
  0x0000000002d7ad1a: movabs $0x195a81f0,%rdi   ;   {metadata(method data for {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7ad24: mov    0x8(%r8),%ebx
  0x0000000002d7ad28: shl    $0x3,%rbx
  0x0000000002d7ad2c: cmp    0x180(%rdi),%rbx
  0x0000000002d7ad33: jne    0x0000000002d7ad42
  0x0000000002d7ad35: addq   $0x1,0x188(%rdi)
  0x0000000002d7ad3d: jmpq   0x0000000002d7adc1
  0x0000000002d7ad42: cmp    0x190(%rdi),%rbx
  0x0000000002d7ad49: jne    0x0000000002d7ad58
  0x0000000002d7ad4b: addq   $0x1,0x198(%rdi)
  0x0000000002d7ad53: jmpq   0x0000000002d7adc1
  0x0000000002d7ad58: cmpq   $0x0,0x180(%rdi)
  0x0000000002d7ad63: jne    0x0000000002d7ad7c
  0x0000000002d7ad65: mov    %rbx,0x180(%rdi)
  0x0000000002d7ad6c: movq   $0x1,0x188(%rdi)
  0x0000000002d7ad77: jmpq   0x0000000002d7adc1
  0x0000000002d7ad7c: cmpq   $0x0,0x190(%rdi)
  0x0000000002d7ad87: jne    0x0000000002d7ada0
  0x0000000002d7ad89: mov    %rbx,0x190(%rdi)
  0x0000000002d7ad90: movq   $0x1,0x198(%rdi)
  0x0000000002d7ad9b: jmpq   0x0000000002d7adc1
  0x0000000002d7ada0: jmpq   0x0000000002d7adc1
  0x0000000002d7ada5: movabs $0x195a81f0,%rdi   ;   {metadata(method data for {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7adaf: subq   $0x1,0x178(%rdi)
  0x0000000002d7adb7: jmpq   0x0000000002d7af65
  0x0000000002d7adbc: jmpq   0x0000000002d7adc1
  0x0000000002d7adc1: mov    %r8,%rax           ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x0000000002d7adc4: mov    0xc(%rdx),%esi
  0x0000000002d7adc7: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x0000000002d7adcb: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x0000000002d7af6e
  0x0000000002d7adce: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000002d7af73
  0x0000000002d7add1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x0000000002d7add5: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x0000000002d7af78
  0x0000000002d7add8: cmp    %ebx,%edi
  0x0000000002d7adda: movabs $0x195a81f0,%rbx   ;   {metadata(method data for {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7ade4: movabs $0x1a8,%rdx
  0x0000000002d7adee: jne    0x0000000002d7adfe
  0x0000000002d7adf4: movabs $0x1b8,%rdx
  0x0000000002d7adfe: mov    (%rbx,%rdx,1),%rcx
  0x0000000002d7ae02: lea    0x1(%rcx),%rcx
  0x0000000002d7ae06: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002d7ae0a: jne    0x0000000002d7af2c  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x0000000002d7ae10: mov    $0x0,%ebx
  0x0000000002d7ae15: jmpq   0x0000000002d7aec7  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x0000000002d7ae1a: nopw   0x0(%rax,%rax,1)
  0x0000000002d7ae20: movslq %ebx,%rdi
  0x0000000002d7ae23: cmp    0xc(%rsi),%ebx
  0x0000000002d7ae26: jae    0x0000000002d7af7d
  0x0000000002d7ae2c: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002d7ae31: movslq %ebx,%rcx
  0x0000000002d7ae34: cmp    0xc(%rax),%ebx
  0x0000000002d7ae37: jae    0x0000000002d7af86
  0x0000000002d7ae3d: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002d7ae42: cmp    %ecx,%edi
  0x0000000002d7ae44: movabs $0x195a81f0,%rdi   ;   {metadata(method data for {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7ae4e: movabs $0x1e8,%rcx
  0x0000000002d7ae58: je     0x0000000002d7ae68
  0x0000000002d7ae5e: movabs $0x1f8,%rcx
  0x0000000002d7ae68: mov    (%rdi,%rcx,1),%r8
  0x0000000002d7ae6c: lea    0x1(%r8),%r8
  0x0000000002d7ae70: mov    %r8,(%rdi,%rcx,1)
  0x0000000002d7ae74: jne    0x0000000002d7af0a  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002d7ae7a: inc    %ebx
  0x0000000002d7ae7c: movabs $0x195a81f0,%rdi   ;   {metadata(method data for {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7ae86: mov    0xe0(%rdi),%ecx
  0x0000000002d7ae8c: add    $0x8,%ecx
  0x0000000002d7ae8f: mov    %ecx,0xe0(%rdi)
  0x0000000002d7ae95: movabs $0x193745d0,%rdi   ;   {metadata({method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7ae9f: and    $0xfff8,%ecx
  0x0000000002d7aea5: cmp    $0x0,%ecx
  0x0000000002d7aea8: je     0x0000000002d7af8f  ; OopMap{rax=Oop rsi=Oop off=910}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000002d7aeae: test   %eax,-0x3eadb4(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d7aeb4: movabs $0x195a81f0,%rdi   ;   {metadata(method data for {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7aebe: incl   0x208(%rdi)
  0x0000000002d7aec4: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000002d7aec7: mov    %rdi,%rdx
  0x0000000002d7aeca: dec    %edx
  0x0000000002d7aecc: cmp    $0x0,%edi
  0x0000000002d7aecf: movabs $0x195a81f0,%rdi   ;   {metadata(method data for {method} {0x00000000193745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7aed9: movabs $0x1c8,%rcx
  0x0000000002d7aee3: je     0x0000000002d7aef3
  0x0000000002d7aee9: movabs $0x1d8,%rcx
  0x0000000002d7aef3: mov    (%rdi,%rcx,1),%r8
  0x0000000002d7aef7: lea    0x1(%r8),%r8
  0x0000000002d7aefb: mov    %r8,(%rdi,%rcx,1)
  0x0000000002d7aeff: je     0x0000000002d7af1b
  0x0000000002d7af05: jmpq   0x0000000002d7ae20  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000002d7af0a: mov    $0x0,%eax
  0x0000000002d7af0f: add    $0x30,%rsp
  0x0000000002d7af13: pop    %rbp
  0x0000000002d7af14: test   %eax,-0x3eae1a(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d7af1a: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x0000000002d7af1b: mov    $0x1,%eax
  0x0000000002d7af20: add    $0x30,%rsp
  0x0000000002d7af24: pop    %rbp
  0x0000000002d7af25: test   %eax,-0x3eae2b(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d7af2b: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x0000000002d7af2c: mov    $0x0,%eax
  0x0000000002d7af31: add    $0x30,%rsp
  0x0000000002d7af35: pop    %rbp
  0x0000000002d7af36: test   %eax,-0x3eae3c(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d7af3c: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x0000000002d7af3d: mov    $0x1,%eax
  0x0000000002d7af42: add    $0x30,%rsp
  0x0000000002d7af46: pop    %rbp
  0x0000000002d7af47: test   %eax,-0x3eae4d(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d7af4d: retq   
  0x0000000002d7af4e: mov    %rax,0x8(%rsp)
  0x0000000002d7af53: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d7af5b: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop off=1088}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x0000000002d7af60: jmpq   0x0000000002d7ab7e
  0x0000000002d7af65: mov    %r8,(%rsp)
  0x0000000002d7af69: callq  0x0000000002d6ef80  ; OopMap{rdx=Oop off=1102}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x0000000002d7af6e: callq  0x0000000002cdff40  ; OopMap{rax=Oop rsi=Oop off=1107}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x0000000002d7af73: callq  0x0000000002cdff40  ; OopMap{rsi=Oop off=1112}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x0000000002d7af78: callq  0x0000000002cdff40  ; OopMap{rsi=Oop rax=Oop off=1117}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x0000000002d7af7d: mov    %rbx,(%rsp)
  0x0000000002d7af81: callq  0x0000000002ce0600  ; OopMap{rax=Oop rsi=Oop off=1126}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x0000000002d7af86: mov    %rbx,(%rsp)
  0x0000000002d7af8a: callq  0x0000000002ce0600  ; OopMap{rax=Oop rsi=Oop off=1135}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x0000000002d7af8f: mov    %rdi,0x8(%rsp)
  0x0000000002d7af94: movq   $0x4a,(%rsp)
  0x0000000002d7af9c: callq  0x0000000002d710e0  ; OopMap{rax=Oop rsi=Oop off=1153}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x0000000002d7afa1: jmpq   0x0000000002d7aeae
  0x0000000002d7afa6: nop
  0x0000000002d7afa7: nop
  0x0000000002d7afa8: mov    0x2a8(%r15),%rax
  0x0000000002d7afaf: movabs $0x0,%r10
  0x0000000002d7afb9: mov    %r10,0x2a8(%r15)
  0x0000000002d7afc0: movabs $0x0,%r10
  0x0000000002d7afca: mov    %r10,0x2b0(%r15)
  0x0000000002d7afd1: add    $0x30,%rsp
  0x0000000002d7afd5: pop    %rbp
  0x0000000002d7afd6: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d7afdb: hlt    
  0x0000000002d7afdc: hlt    
  0x0000000002d7afdd: hlt    
  0x0000000002d7afde: hlt    
  0x0000000002d7afdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d7afe0: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d7afe5: mov    %rsp,-0x28(%rsp)
  0x0000000002d7afea: sub    $0x80,%rsp
  0x0000000002d7aff1: mov    %rax,0x78(%rsp)
  0x0000000002d7aff6: mov    %rcx,0x70(%rsp)
  0x0000000002d7affb: mov    %rdx,0x68(%rsp)
  0x0000000002d7b000: mov    %rbx,0x60(%rsp)
  0x0000000002d7b005: mov    %rbp,0x50(%rsp)
  0x0000000002d7b00a: mov    %rsi,0x48(%rsp)
  0x0000000002d7b00f: mov    %rdi,0x40(%rsp)
  0x0000000002d7b014: mov    %r8,0x38(%rsp)
  0x0000000002d7b019: mov    %r9,0x30(%rsp)
  0x0000000002d7b01e: mov    %r10,0x28(%rsp)
  0x0000000002d7b023: mov    %r11,0x20(%rsp)
  0x0000000002d7b028: mov    %r12,0x18(%rsp)
  0x0000000002d7b02d: mov    %r13,0x10(%rsp)
  0x0000000002d7b032: mov    %r14,0x8(%rsp)
  0x0000000002d7b037: mov    %r15,(%rsp)
  0x0000000002d7b03b: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d7b045: movabs $0x2d7afe5,%rdx    ;   {internal_word}
  0x0000000002d7b04f: mov    %rsp,%r8
  0x0000000002d7b052: and    $0xfffffffffffffff0,%rsp
  0x0000000002d7b056: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d7b05b: hlt    
[Deopt Handler Code]
  0x0000000002d7b05c: movabs $0x2d7b05c,%r10    ;   {section_word}
  0x0000000002d7b066: push   %r10
  0x0000000002d7b068: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d7b06d: hlt    
  0x0000000002d7b06e: hlt    
  0x0000000002d7b06f: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x0000000002d7ab20' size='2504' address='0x0000000002d7a990' relocation_offset='288' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='673' backedge_count='3254' iicount='673' stamp='5.095'/>
<writer thread='5912'/>
<task_queued compile_id='11' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='5.095' comment='tiered' hot_count='128'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d7a490:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019567d80} &apos;getSnapshotTransformerList&apos; &apos;()[Lsun/instrument/TransformerManager$TransformerInfo;&apos; in &apos;sun/instrument/TransformerManager&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d7a5e0: mov    0x8(%rdx),%r10d
  0x0000000002d7a5e4: shl    $0x3,%r10
  0x0000000002d7a5e8: cmp    %rax,%r10
  0x0000000002d7a5eb: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d7a5f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d7a5fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d7a600: mov    %eax,-0x6000(%rsp)
  0x0000000002d7a607: push   %rbp
  0x0000000002d7a608: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@0 (line 166)

  0x0000000002d7a60c: mov    0x10(%rdx),%eax
  0x0000000002d7a60f: shl    $0x3,%rax          ;*getfield mTransformerList
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@1 (line 166)

  0x0000000002d7a613: add    $0x30,%rsp
  0x0000000002d7a617: pop    %rbp
  0x0000000002d7a618: test   %eax,-0x3ea51e(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d7a61e: retq   
  0x0000000002d7a61f: nop
  0x0000000002d7a620: nop
  0x0000000002d7a621: mov    0x2a8(%r15),%rax
  0x0000000002d7a628: movabs $0x0,%r10
  0x0000000002d7a632: mov    %r10,0x2a8(%r15)
  0x0000000002d7a639: movabs $0x0,%r10
  0x0000000002d7a643: mov    %r10,0x2b0(%r15)
  0x0000000002d7a64a: add    $0x30,%rsp
  0x0000000002d7a64e: pop    %rbp
  0x0000000002d7a64f: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d7a654: hlt    
  0x0000000002d7a655: hlt    
  0x0000000002d7a656: hlt    
  0x0000000002d7a657: hlt    
  0x0000000002d7a658: hlt    
  0x0000000002d7a659: hlt    
  0x0000000002d7a65a: hlt    
  0x0000000002d7a65b: hlt    
  0x0000000002d7a65c: hlt    
  0x0000000002d7a65d: hlt    
  0x0000000002d7a65e: hlt    
  0x0000000002d7a65f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d7a660: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d7a665: mov    %rsp,-0x28(%rsp)
  0x0000000002d7a66a: sub    $0x80,%rsp
  0x0000000002d7a671: mov    %rax,0x78(%rsp)
  0x0000000002d7a676: mov    %rcx,0x70(%rsp)
  0x0000000002d7a67b: mov    %rdx,0x68(%rsp)
  0x0000000002d7a680: mov    %rbx,0x60(%rsp)
  0x0000000002d7a685: mov    %rbp,0x50(%rsp)
  0x0000000002d7a68a: mov    %rsi,0x48(%rsp)
  0x0000000002d7a68f: mov    %rdi,0x40(%rsp)
  0x0000000002d7a694: mov    %r8,0x38(%rsp)
  0x0000000002d7a699: mov    %r9,0x30(%rsp)
  0x0000000002d7a69e: mov    %r10,0x28(%rsp)
  0x0000000002d7a6a3: mov    %r11,0x20(%rsp)
  0x0000000002d7a6a8: mov    %r12,0x18(%rsp)
  0x0000000002d7a6ad: mov    %r13,0x10(%rsp)
  0x0000000002d7a6b2: mov    %r14,0x8(%rsp)
  0x0000000002d7a6b7: mov    %r15,(%rsp)
  0x0000000002d7a6bb: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d7a6c5: movabs $0x2d7a665,%rdx    ;   {internal_word}
  0x0000000002d7a6cf: mov    %rsp,%r8
  0x0000000002d7a6d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002d7a6d6: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d7a6db: hlt    
[Deopt Handler Code]
  0x0000000002d7a6dc: movabs $0x2d7a6dc,%r10    ;   {section_word}
  0x0000000002d7a6e6: push   %r10
  0x0000000002d7a6e8: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d7a6ed: hlt    
  0x0000000002d7a6ee: hlt    
  0x0000000002d7a6ef: hlt    
<nmethod compile_id='11' compiler='C1' level='1' entry='0x0000000002d7a5e0' size='704' address='0x0000000002d7a490' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='129' iicount='129' stamp='5.108'/>
<writer thread='3656'/>
<task_queued compile_id='12' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='768' iicount='768' level='3' stamp='5.109' comment='tiered' hot_count='768'/>
<writer thread='5912'/>
<task_queued compile_id='13' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='256' iicount='256' level='1' stamp='5.110' comment='tiered' hot_count='256'/>
<task_queued compile_id='14' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='256' iicount='256' level='3' stamp='5.110' comment='tiered' hot_count='256'/>
<task_queued compile_id='15' method='java/lang/String length ()I' bytes='6' count='27776' iicount='27776' stamp='5.111' comment='tiered' hot_count='27776'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d79590:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019373160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002d79760: mov    0x8(%rdx),%r10d
  0x0000000002d79764: shl    $0x3,%r10
  0x0000000002d79768: cmp    %rax,%r10
  0x0000000002d7976b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d79771: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d7977c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d79780: mov    %eax,-0x6000(%rsp)
  0x0000000002d79787: push   %rbp
  0x0000000002d79788: sub    $0x60,%rsp
  0x0000000002d7978c: movabs $0x1959e270,%rsi   ;   {metadata(method data for {method} {0x0000000019373160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d79796: mov    0xdc(%rsi),%ebx
  0x0000000002d7979c: add    $0x8,%ebx
  0x0000000002d7979f: mov    %ebx,0xdc(%rsi)
  0x0000000002d797a5: movabs $0x19373158,%rsi   ;   {metadata({method} {0x0000000019373160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d797af: and    $0x1ff8,%ebx
  0x0000000002d797b5: cmp    $0x0,%ebx
  0x0000000002d797b8: je     0x0000000002d79a8e  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x0000000002d797be: mov    %rdx,%rsi
  0x0000000002d797c1: movabs $0x1959e270,%rbx   ;   {metadata(method data for {method} {0x0000000019373160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d797cb: addq   $0x1,0x108(%rbx)
  0x0000000002d797d3: movabs $0x194a47d8,%rsi   ;   {metadata(method data for {method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d797dd: mov    0xdc(%rsi),%ebx
  0x0000000002d797e3: add    $0x8,%ebx
  0x0000000002d797e6: mov    %ebx,0xdc(%rsi)
  0x0000000002d797ec: movabs $0x19370480,%rsi   ;   {metadata({method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d797f6: and    $0x7ffff8,%ebx
  0x0000000002d797fc: cmp    $0x0,%ebx
  0x0000000002d797ff: je     0x0000000002d79aa5
  0x0000000002d79805: cmp    $0x0,%r9d
  0x0000000002d79809: movabs $0x1959e270,%rsi   ;   {metadata(method data for {method} {0x0000000019373160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d79813: movabs $0x118,%rbx
  0x0000000002d7981d: jge    0x0000000002d7982d
  0x0000000002d79823: movabs $0x128,%rbx
  0x0000000002d7982d: mov    (%rsi,%rbx,1),%rax
  0x0000000002d79831: lea    0x1(%rax),%rax
  0x0000000002d79835: mov    %rax,(%rsi,%rbx,1)
  0x0000000002d79839: jl     0x0000000002d79a4e  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x0000000002d7983f: cmp    $0x0,%edi
  0x0000000002d79842: movabs $0x1959e270,%rsi   ;   {metadata(method data for {method} {0x0000000019373160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7984c: movabs $0x148,%rbx
  0x0000000002d79856: jg     0x0000000002d79866
  0x0000000002d7985c: movabs $0x158,%rbx
  0x0000000002d79866: mov    (%rsi,%rbx,1),%rax
  0x0000000002d7986a: lea    0x1(%rax),%rax
  0x0000000002d7986e: mov    %rax,(%rsi,%rbx,1)
  0x0000000002d79872: jg     0x0000000002d798ee  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x0000000002d79878: cmp    $0x0,%edi
  0x0000000002d7987b: movabs $0x1959e270,%rsi   ;   {metadata(method data for {method} {0x0000000019373160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d79885: movabs $0x168,%rbx
  0x0000000002d7988f: jge    0x0000000002d7989f
  0x0000000002d79895: movabs $0x178,%rbx
  0x0000000002d7989f: mov    (%rsi,%rbx,1),%rax
  0x0000000002d798a3: lea    0x1(%rax),%rax
  0x0000000002d798a7: mov    %rax,(%rsi,%rbx,1)
  0x0000000002d798ab: jl     0x0000000002d79a0e  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x0000000002d798b1: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x0000000002d79abc
  0x0000000002d798b5: cmp    %esi,%r9d
  0x0000000002d798b8: movabs $0x1959e270,%rsi   ;   {metadata(method data for {method} {0x0000000019373160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d798c2: movabs $0x198,%rbx
  0x0000000002d798cc: jg     0x0000000002d798dc
  0x0000000002d798d2: movabs $0x1a8,%rbx
  0x0000000002d798dc: mov    (%rsi,%rbx,1),%rax
  0x0000000002d798e0: lea    0x1(%rax),%rax
  0x0000000002d798e4: mov    %rax,(%rsi,%rbx,1)
  0x0000000002d798e8: jle    0x0000000002d7998a  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x0000000002d798ee: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x0000000002d79ac1
  0x0000000002d798f2: sub    %edi,%esi
  0x0000000002d798f4: cmp    %esi,%r9d
  0x0000000002d798f7: movabs $0x1959e270,%rsi   ;   {metadata(method data for {method} {0x0000000019373160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d79901: movabs $0x1b8,%rbx
  0x0000000002d7990b: jle    0x0000000002d7991b
  0x0000000002d79911: movabs $0x1c8,%rbx
  0x0000000002d7991b: mov    (%rsi,%rbx,1),%rax
  0x0000000002d7991f: lea    0x1(%rax),%rax
  0x0000000002d79923: mov    %rax,(%rsi,%rbx,1)
  0x0000000002d79927: jg     0x0000000002d799c4  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x0000000002d7992d: mov    %rdx,0x38(%rsp)
  0x0000000002d79932: movabs $0x1959e270,%rsi   ;   {metadata(method data for {method} {0x0000000019373160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7993c: addq   $0x1,0x1e8(%rsi)
  0x0000000002d79944: add    %r9d,%edi
  0x0000000002d79947: mov    %r8,%rdx
  0x0000000002d7994a: mov    %r9,%r8
  0x0000000002d7994d: mov    %rdi,%r9           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x0000000002d79950: nop
  0x0000000002d79951: nop
  0x0000000002d79952: nop
  0x0000000002d79953: nop
  0x0000000002d79954: nop
  0x0000000002d79955: nop
  0x0000000002d79956: nop
  0x0000000002d79957: callq  0x0000000002cb6620  ; OopMap{[56]=Oop off=508}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x0000000002d7995c: mov    0x38(%rsp),%rdx
  0x0000000002d79961: mov    %rax,%r10
  0x0000000002d79964: shr    $0x3,%r10
  0x0000000002d79968: mov    %r10d,0xc(%rdx)
  0x0000000002d7996c: shr    $0x9,%rdx
  0x0000000002d79970: movabs $0xe824000,%rax
  0x0000000002d7997a: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x0000000002d7997e: add    $0x60,%rsp
  0x0000000002d79982: pop    %rbp
  0x0000000002d79983: test   %eax,-0x3e9889(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d79989: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x0000000002d7998a: movabs $0x78080aa98,%rax  ;   {oop(&quot;&quot;)}
  0x0000000002d79994: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000002d79ac6
  0x0000000002d79997: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x0000000002d7999b: mov    %rax,%r10
  0x0000000002d7999e: shr    $0x3,%r10
  0x0000000002d799a2: mov    %r10d,0xc(%rdx)
  0x0000000002d799a6: shr    $0x9,%rdx
  0x0000000002d799aa: movabs $0xe824000,%rax
  0x0000000002d799b4: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x0000000002d799b8: add    $0x60,%rsp
  0x0000000002d799bc: pop    %rbp
  0x0000000002d799bd: test   %eax,-0x3e98c3(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d799c3: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x0000000002d799c4: nopl   0x0(%rax)
  0x0000000002d799c8: jmpq   0x0000000002d79ada  ;   {no_reloc}
  0x0000000002d799cd: add    %al,(%rax)
  0x0000000002d799cf: add    %al,(%rax)
  0x0000000002d799d1: add    %ch,%cl
  0x0000000002d799d3: or     $0x4c000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x0000000002d799d8: mov    %eax,%eax
  0x0000000002d799da: movabs $0x1959e270,%rdx   ;   {metadata(method data for {method} {0x0000000019373160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d799e4: addq   $0x1,0x1d8(%rdx)
  0x0000000002d799ec: add    %r9d,%edi
  0x0000000002d799ef: mov    %rdi,%r8
  0x0000000002d799f2: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x0000000002d799f5: mov    %rax,0x40(%rsp)
  0x0000000002d799fa: nop
  0x0000000002d799fb: nop
  0x0000000002d799fc: nop
  0x0000000002d799fd: nop
  0x0000000002d799fe: nop
  0x0000000002d799ff: callq  0x0000000002cb61a0  ; OopMap{[64]=Oop off=676}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x0000000002d79a04: mov    0x40(%rsp),%rax
  0x0000000002d79a09: jmpq   0x0000000002d79b68  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x0000000002d79a0e: xchg   %ax,%ax
  0x0000000002d79a10: jmpq   0x0000000002d79b00  ;   {no_reloc}
  0x0000000002d79a15: add    %al,(%rax)
  0x0000000002d79a17: add    %al,(%rax)
  0x0000000002d79a19: add    %ch,%cl
  0x0000000002d79a1b: jmp    0x0000000002d79a1d
  0x0000000002d79a1d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x0000000002d79a1f: mov    %rax,%r8
  0x0000000002d79a22: movabs $0x1959e270,%rdx   ;   {metadata(method data for {method} {0x0000000019373160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d79a2c: addq   $0x1,0x188(%rdx)
  0x0000000002d79a34: mov    %rdi,%r8
  0x0000000002d79a37: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x0000000002d79a3a: mov    %rax,0x48(%rsp)
  0x0000000002d79a3f: callq  0x0000000002cb61a0  ; OopMap{[72]=Oop off=740}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x0000000002d79a44: mov    0x48(%rsp),%rax
  0x0000000002d79a49: jmpq   0x0000000002d79b68  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x0000000002d79a4e: xchg   %ax,%ax
  0x0000000002d79a50: jmpq   0x0000000002d79b26  ;   {no_reloc}
  0x0000000002d79a55: add    %al,(%rax)
  0x0000000002d79a57: add    %al,(%rax)
  0x0000000002d79a59: add    %ch,%cl
  0x0000000002d79a5b: roll   (%rax)
  0x0000000002d79a5d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x0000000002d79a5f: mov    %rax,%r8
  0x0000000002d79a62: movabs $0x1959e270,%rdx   ;   {metadata(method data for {method} {0x0000000019373160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d79a6c: addq   $0x1,0x138(%rdx)
  0x0000000002d79a74: mov    %r9,%r8
  0x0000000002d79a77: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x0000000002d79a7a: mov    %rax,0x50(%rsp)
  0x0000000002d79a7f: callq  0x0000000002cb61a0  ; OopMap{[80]=Oop off=804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000002d79a84: mov    0x50(%rsp),%rax
  0x0000000002d79a89: jmpq   0x0000000002d79b68
  0x0000000002d79a8e: mov    %rsi,0x8(%rsp)
  0x0000000002d79a93: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d79a9b: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop off=832}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x0000000002d79aa0: jmpq   0x0000000002d797be
  0x0000000002d79aa5: mov    %rsi,0x8(%rsp)
  0x0000000002d79aaa: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d79ab2: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop off=855}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x0000000002d79ab7: jmpq   0x0000000002d79805
  0x0000000002d79abc: callq  0x0000000002cdff40  ; OopMap{rdx=Oop r8=Oop off=865}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x0000000002d79ac1: callq  0x0000000002cdff40  ; OopMap{rdx=Oop r8=Oop off=870}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x0000000002d79ac6: callq  0x0000000002cdff40  ; OopMap{rdx=Oop off=875}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x0000000002d79acb: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d79ad5: mov    $0xa050f00,%eax
  0x0000000002d79ada: callq  0x0000000002d72160  ; OopMap{off=895}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000002d79adf: jmpq   0x0000000002d799c8
  0x0000000002d79ae4: mov    %rdx,%rdx
  0x0000000002d79ae7: callq  0x0000000002cdfa20  ; OopMap{off=908}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000002d79aec: jmpq   0x0000000002d799d7
  0x0000000002d79af1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d79afb: mov    $0xa050f00,%eax
  0x0000000002d79b00: callq  0x0000000002d72160  ; OopMap{off=933}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000002d79b05: jmpq   0x0000000002d79a10
  0x0000000002d79b0a: mov    %rdx,%rdx
  0x0000000002d79b0d: callq  0x0000000002cdfa20  ; OopMap{off=946}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000002d79b12: jmpq   0x0000000002d79a1f
  0x0000000002d79b17: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d79b21: mov    $0xa050f00,%eax
  0x0000000002d79b26: callq  0x0000000002d72160  ; OopMap{off=971}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000002d79b2b: jmpq   0x0000000002d79a50
  0x0000000002d79b30: mov    %rdx,%rdx
  0x0000000002d79b33: callq  0x0000000002cdfa20  ; OopMap{off=984}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000002d79b38: jmpq   0x0000000002d79a5f
  0x0000000002d79b3d: nop
  0x0000000002d79b3e: nop
  0x0000000002d79b3f: mov    0x2a8(%r15),%rax
  0x0000000002d79b46: movabs $0x0,%r10
  0x0000000002d79b50: mov    %r10,0x2a8(%r15)
  0x0000000002d79b57: movabs $0x0,%r10
  0x0000000002d79b61: mov    %r10,0x2b0(%r15)
  0x0000000002d79b68: add    $0x60,%rsp
  0x0000000002d79b6c: pop    %rbp
  0x0000000002d79b6d: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d79b72: hlt    
  0x0000000002d79b73: hlt    
  0x0000000002d79b74: hlt    
  0x0000000002d79b75: hlt    
  0x0000000002d79b76: hlt    
  0x0000000002d79b77: hlt    
  0x0000000002d79b78: hlt    
  0x0000000002d79b79: hlt    
  0x0000000002d79b7a: hlt    
  0x0000000002d79b7b: hlt    
  0x0000000002d79b7c: hlt    
  0x0000000002d79b7d: hlt    
  0x0000000002d79b7e: hlt    
  0x0000000002d79b7f: hlt    
[Stub Code]
  0x0000000002d79b80: nop                       ;   {no_reloc}
  0x0000000002d79b81: nop
  0x0000000002d79b82: nop
  0x0000000002d79b83: nop
  0x0000000002d79b84: nop
  0x0000000002d79b85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d79b8f: jmpq   0x0000000002d79b8f  ;   {runtime_call}
  0x0000000002d79b94: nop
  0x0000000002d79b95: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d79b9f: jmpq   0x0000000002d79b9f  ;   {runtime_call}
  0x0000000002d79ba4: nop
  0x0000000002d79ba5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d79baf: jmpq   0x0000000002d79baf  ;   {runtime_call}
  0x0000000002d79bb4: nop
  0x0000000002d79bb5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d79bbf: jmpq   0x0000000002d79bbf  ;   {runtime_call}
[Exception Handler]
  0x0000000002d79bc4: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d79bc9: mov    %rsp,-0x28(%rsp)
  0x0000000002d79bce: sub    $0x80,%rsp
  0x0000000002d79bd5: mov    %rax,0x78(%rsp)
  0x0000000002d79bda: mov    %rcx,0x70(%rsp)
  0x0000000002d79bdf: mov    %rdx,0x68(%rsp)
  0x0000000002d79be4: mov    %rbx,0x60(%rsp)
  0x0000000002d79be9: mov    %rbp,0x50(%rsp)
  0x0000000002d79bee: mov    %rsi,0x48(%rsp)
  0x0000000002d79bf3: mov    %rdi,0x40(%rsp)
  0x0000000002d79bf8: mov    %r8,0x38(%rsp)
  0x0000000002d79bfd: mov    %r9,0x30(%rsp)
  0x0000000002d79c02: mov    %r10,0x28(%rsp)
  0x0000000002d79c07: mov    %r11,0x20(%rsp)
  0x0000000002d79c0c: mov    %r12,0x18(%rsp)
  0x0000000002d79c11: mov    %r13,0x10(%rsp)
  0x0000000002d79c16: mov    %r14,0x8(%rsp)
  0x0000000002d79c1b: mov    %r15,(%rsp)
  0x0000000002d79c1f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d79c29: movabs $0x2d79bc9,%rdx    ;   {internal_word}
  0x0000000002d79c33: mov    %rsp,%r8
  0x0000000002d79c36: and    $0xfffffffffffffff0,%rsp
  0x0000000002d79c3a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d79c3f: hlt    
[Deopt Handler Code]
  0x0000000002d79c40: movabs $0x2d79c40,%r10    ;   {section_word}
  0x0000000002d79c4a: push   %r10
  0x0000000002d79c4c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d79c51: hlt    
  0x0000000002d79c52: hlt    
  0x0000000002d79c53: hlt    
  0x0000000002d79c54: hlt    
  0x0000000002d79c55: hlt    
  0x0000000002d79c56: hlt    
  0x0000000002d79c57: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x0000000002d79760' size='2704' address='0x0000000002d79590' relocation_offset='288' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='772' iicount='772' stamp='5.241'/>
<writer thread='11160'/>
Decoding compiled method 0x0000000002d77e10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019373c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000002d77f40: mov    0x8(%rdx),%r10d
  0x0000000002d77f44: shl    $0x3,%r10
  0x0000000002d77f48: cmp    %r10,%rax
  0x0000000002d77f4b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d77f51: data16 xchg %ax,%ax
  0x0000000002d77f54: nopl   0x0(%rax,%rax,1)
  0x0000000002d77f5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d77f60: mov    %eax,-0x6000(%rsp)
  0x0000000002d77f67: push   %rbp
  0x0000000002d77f68: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x0000000002d77f6c: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x0000000002d77f70: mov    0xc(%r12,%r11,8),%eax  ; implicit exception: dispatches to 0x0000000002d77f81
  0x0000000002d77f75: add    $0x10,%rsp
  0x0000000002d77f79: pop    %rbp
  0x0000000002d77f7a: test   %eax,-0x3e7f80(%rip)        # 0x0000000002990000
                                                ;   {poll_return}
  0x0000000002d77f80: retq   
  0x0000000002d77f81: mov    $0xfffffff6,%edx
  0x0000000002d77f86: nop
  0x0000000002d77f87: callq  0x0000000002cb57a0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x0000000002d77f8c: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)

  0x0000000002d77f8d: hlt    
  0x0000000002d77f8e: hlt    
  0x0000000002d77f8f: hlt    
  0x0000000002d77f90: hlt    
  0x0000000002d77f91: hlt    
  0x0000000002d77f92: hlt    
  0x0000000002d77f93: hlt    
  0x0000000002d77f94: hlt    
  0x0000000002d77f95: hlt    
  0x0000000002d77f96: hlt    
  0x0000000002d77f97: hlt    
  0x0000000002d77f98: hlt    
  0x0000000002d77f99: hlt    
  0x0000000002d77f9a: hlt    
  0x0000000002d77f9b: hlt    
  0x0000000002d77f9c: hlt    
  0x0000000002d77f9d: hlt    
  0x0000000002d77f9e: hlt    
  0x0000000002d77f9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d77fa0: jmpq   0x0000000002cdf4a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002d77fa5: callq  0x0000000002d77faa
  0x0000000002d77faa: subq   $0x5,(%rsp)
  0x0000000002d77faf: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d77fb4: hlt    
  0x0000000002d77fb5: hlt    
  0x0000000002d77fb6: hlt    
  0x0000000002d77fb7: hlt    
<nmethod compile_id='15' compiler='C2' level='4' entry='0x0000000002d77f40' size='584' address='0x0000000002d77e10' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='560' nul_chk_table_offset='568' method='java/lang/String length ()I' bytes='6' count='27777' iicount='27777' stamp='5.244'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d77b50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019398210} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/Reference&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d77ca0: mov    0x8(%rdx),%r10d
  0x0000000002d77ca4: shl    $0x3,%r10
  0x0000000002d77ca8: cmp    %rax,%r10
  0x0000000002d77cab: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d77cb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d77cbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d77cc0: mov    %eax,-0x6000(%rsp)
  0x0000000002d77cc7: push   %rbp
  0x0000000002d77cc8: sub    $0x30,%rsp
  0x0000000002d77ccc: mov    0xc(%rdx),%eax
  0x0000000002d77ccf: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x0000000002d77cd3: add    $0x30,%rsp
  0x0000000002d77cd7: pop    %rbp
  0x0000000002d77cd8: test   %eax,-0x3e7bde(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d77cde: retq   
  0x0000000002d77cdf: nop
  0x0000000002d77ce0: nop
  0x0000000002d77ce1: mov    0x2a8(%r15),%rax
  0x0000000002d77ce8: movabs $0x0,%r10
  0x0000000002d77cf2: mov    %r10,0x2a8(%r15)
  0x0000000002d77cf9: movabs $0x0,%r10
  0x0000000002d77d03: mov    %r10,0x2b0(%r15)
  0x0000000002d77d0a: add    $0x30,%rsp
  0x0000000002d77d0e: pop    %rbp
  0x0000000002d77d0f: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d77d14: hlt    
  0x0000000002d77d15: hlt    
  0x0000000002d77d16: hlt    
  0x0000000002d77d17: hlt    
  0x0000000002d77d18: hlt    
  0x0000000002d77d19: hlt    
  0x0000000002d77d1a: hlt    
  0x0000000002d77d1b: hlt    
  0x0000000002d77d1c: hlt    
  0x0000000002d77d1d: hlt    
  0x0000000002d77d1e: hlt    
  0x0000000002d77d1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d77d20: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d77d25: mov    %rsp,-0x28(%rsp)
  0x0000000002d77d2a: sub    $0x80,%rsp
  0x0000000002d77d31: mov    %rax,0x78(%rsp)
  0x0000000002d77d36: mov    %rcx,0x70(%rsp)
  0x0000000002d77d3b: mov    %rdx,0x68(%rsp)
  0x0000000002d77d40: mov    %rbx,0x60(%rsp)
  0x0000000002d77d45: mov    %rbp,0x50(%rsp)
  0x0000000002d77d4a: mov    %rsi,0x48(%rsp)
  0x0000000002d77d4f: mov    %rdi,0x40(%rsp)
  0x0000000002d77d54: mov    %r8,0x38(%rsp)
  0x0000000002d77d59: mov    %r9,0x30(%rsp)
  0x0000000002d77d5e: mov    %r10,0x28(%rsp)
  0x0000000002d77d63: mov    %r11,0x20(%rsp)
  0x0000000002d77d68: mov    %r12,0x18(%rsp)
  0x0000000002d77d6d: mov    %r13,0x10(%rsp)
  0x0000000002d77d72: mov    %r14,0x8(%rsp)
  0x0000000002d77d77: mov    %r15,(%rsp)
  0x0000000002d77d7b: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d77d85: movabs $0x2d77d25,%rdx    ;   {internal_word}
  0x0000000002d77d8f: mov    %rsp,%r8
  0x0000000002d77d92: and    $0xfffffffffffffff0,%rsp
  0x0000000002d77d96: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d77d9b: hlt    
[Deopt Handler Code]
  0x0000000002d77d9c: movabs $0x2d77d9c,%r10    ;   {section_word}
  0x0000000002d77da6: push   %r10
  0x0000000002d77da8: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d77dad: hlt    
  0x0000000002d77dae: hlt    
  0x0000000002d77daf: hlt    
<nmethod compile_id='13' compiler='C1' level='1' entry='0x0000000002d77ca0' size='680' address='0x0000000002d77b50' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='256' iicount='256' stamp='5.255'/>
<writer thread='5912'/>
<task_queued compile_id='16' method='java/lang/Character toLowerCase (I)I' bytes='9' count='3328' iicount='3328' level='3' stamp='5.256' comment='tiered' hot_count='3328'/>
<task_queued compile_id='17' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='3328' iicount='3328' level='3' stamp='5.256' comment='tiered' hot_count='3328'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d77690:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001940ba58} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002d77800: mov    %eax,-0x6000(%rsp)
  0x0000000002d77807: push   %rbp
  0x0000000002d77808: sub    $0x30,%rsp
  0x0000000002d7780c: movabs $0x19547078,%rsi   ;   {metadata(method data for {method} {0x000000001940ba58} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002d77816: mov    0xdc(%rsi),%edi
  0x0000000002d7781c: add    $0x8,%edi
  0x0000000002d7781f: mov    %edi,0xdc(%rsi)
  0x0000000002d77825: movabs $0x1940ba50,%rsi   ;   {metadata({method} {0x000000001940ba58} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002d7782f: and    $0x1ff8,%edi
  0x0000000002d77835: cmp    $0x0,%edi
  0x0000000002d77838: je     0x0000000002d77920  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6374)

  0x0000000002d7783e: movabs $0x19547078,%rsi   ;   {metadata(method data for {method} {0x000000001940ba58} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002d77848: addq   $0x1,0x108(%rsi)
  0x0000000002d77850: mov    %rdx,%rsi
  0x0000000002d77853: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6374)

  0x0000000002d77856: mov    %esi,0x20(%rsp)
  0x0000000002d7785a: nop
  0x0000000002d7785b: nop
  0x0000000002d7785c: nop
  0x0000000002d7785d: nop
  0x0000000002d7785e: nop
  0x0000000002d7785f: callq  0x0000000002cb6620  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6374)
                                                ;   {static_call}
  0x0000000002d77864: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002d77937
  0x0000000002d77867: mov    %rax,%r8
  0x0000000002d7786a: movabs $0x19547078,%rdx   ;   {metadata(method data for {method} {0x000000001940ba58} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002d77874: mov    0x8(%r8),%r8d
  0x0000000002d77878: shl    $0x3,%r8
  0x0000000002d7787c: cmp    0x120(%rdx),%r8
  0x0000000002d77883: jne    0x0000000002d77892
  0x0000000002d77885: addq   $0x1,0x128(%rdx)
  0x0000000002d7788d: jmpq   0x0000000002d778f8
  0x0000000002d77892: cmp    0x130(%rdx),%r8
  0x0000000002d77899: jne    0x0000000002d778a8
  0x0000000002d7789b: addq   $0x1,0x138(%rdx)
  0x0000000002d778a3: jmpq   0x0000000002d778f8
  0x0000000002d778a8: cmpq   $0x0,0x120(%rdx)
  0x0000000002d778b3: jne    0x0000000002d778cc
  0x0000000002d778b5: mov    %r8,0x120(%rdx)
  0x0000000002d778bc: movq   $0x1,0x128(%rdx)
  0x0000000002d778c7: jmpq   0x0000000002d778f8
  0x0000000002d778cc: cmpq   $0x0,0x130(%rdx)
  0x0000000002d778d7: jne    0x0000000002d778f0
  0x0000000002d778d9: mov    %r8,0x130(%rdx)
  0x0000000002d778e0: movq   $0x1,0x138(%rdx)
  0x0000000002d778eb: jmpq   0x0000000002d778f8
  0x0000000002d778f0: addq   $0x1,0x118(%rdx)
  0x0000000002d778f8: mov    0x20(%rsp),%r8d
  0x0000000002d778fd: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)

  0x0000000002d77900: nop
  0x0000000002d77901: nop
  0x0000000002d77902: nop
  0x0000000002d77903: nop
  0x0000000002d77904: nop
  0x0000000002d77905: movabs $0xffffffffffffffff,%rax
  0x0000000002d7790f: callq  0x0000000002cb63e0  ; OopMap{off=276}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)
                                                ;   {virtual_call}
  0x0000000002d77914: add    $0x30,%rsp
  0x0000000002d77918: pop    %rbp
  0x0000000002d77919: test   %eax,-0x3e781f(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d7791f: retq   
  0x0000000002d77920: mov    %rsi,0x8(%rsp)
  0x0000000002d77925: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d7792d: callq  0x0000000002d710e0  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6374)
                                                ;   {runtime_call}
  0x0000000002d77932: jmpq   0x0000000002d7783e
  0x0000000002d77937: callq  0x0000000002cdff40  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)
                                                ;   {runtime_call}
  0x0000000002d7793c: nop
  0x0000000002d7793d: nop
  0x0000000002d7793e: mov    0x2a8(%r15),%rax
  0x0000000002d77945: movabs $0x0,%r10
  0x0000000002d7794f: mov    %r10,0x2a8(%r15)
  0x0000000002d77956: movabs $0x0,%r10
  0x0000000002d77960: mov    %r10,0x2b0(%r15)
  0x0000000002d77967: add    $0x30,%rsp
  0x0000000002d7796b: pop    %rbp
  0x0000000002d7796c: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d77971: hlt    
  0x0000000002d77972: hlt    
  0x0000000002d77973: hlt    
  0x0000000002d77974: hlt    
  0x0000000002d77975: hlt    
  0x0000000002d77976: hlt    
  0x0000000002d77977: hlt    
  0x0000000002d77978: hlt    
  0x0000000002d77979: hlt    
  0x0000000002d7797a: hlt    
  0x0000000002d7797b: hlt    
  0x0000000002d7797c: hlt    
  0x0000000002d7797d: hlt    
  0x0000000002d7797e: hlt    
  0x0000000002d7797f: hlt    
[Stub Code]
  0x0000000002d77980: nop                       ;   {no_reloc}
  0x0000000002d77981: nop
  0x0000000002d77982: nop
  0x0000000002d77983: nop
  0x0000000002d77984: nop
  0x0000000002d77985: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d7798f: jmpq   0x0000000002d7798f  ;   {runtime_call}
  0x0000000002d77994: nop
  0x0000000002d77995: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d7799f: jmpq   0x0000000002d7799f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d779a4: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d779a9: mov    %rsp,-0x28(%rsp)
  0x0000000002d779ae: sub    $0x80,%rsp
  0x0000000002d779b5: mov    %rax,0x78(%rsp)
  0x0000000002d779ba: mov    %rcx,0x70(%rsp)
  0x0000000002d779bf: mov    %rdx,0x68(%rsp)
  0x0000000002d779c4: mov    %rbx,0x60(%rsp)
  0x0000000002d779c9: mov    %rbp,0x50(%rsp)
  0x0000000002d779ce: mov    %rsi,0x48(%rsp)
  0x0000000002d779d3: mov    %rdi,0x40(%rsp)
  0x0000000002d779d8: mov    %r8,0x38(%rsp)
  0x0000000002d779dd: mov    %r9,0x30(%rsp)
  0x0000000002d779e2: mov    %r10,0x28(%rsp)
  0x0000000002d779e7: mov    %r11,0x20(%rsp)
  0x0000000002d779ec: mov    %r12,0x18(%rsp)
  0x0000000002d779f1: mov    %r13,0x10(%rsp)
  0x0000000002d779f6: mov    %r14,0x8(%rsp)
  0x0000000002d779fb: mov    %r15,(%rsp)
  0x0000000002d779ff: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d77a09: movabs $0x2d779a9,%rdx    ;   {internal_word}
  0x0000000002d77a13: mov    %rsp,%r8
  0x0000000002d77a16: and    $0xfffffffffffffff0,%rsp
  0x0000000002d77a1a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d77a1f: hlt    
[Deopt Handler Code]
  0x0000000002d77a20: movabs $0x2d77a20,%r10    ;   {section_word}
  0x0000000002d77a2a: push   %r10
  0x0000000002d77a2c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d77a31: hlt    
  0x0000000002d77a32: hlt    
  0x0000000002d77a33: hlt    
  0x0000000002d77a34: hlt    
  0x0000000002d77a35: hlt    
  0x0000000002d77a36: hlt    
  0x0000000002d77a37: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x0000000002d77800' size='1160' address='0x0000000002d77690' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='944' scopes_pcs_offset='992' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/Character toLowerCase (I)I' bytes='9' count='3346' iicount='3346' stamp='5.525'/>
<writer thread='5912'/>
<task_queued compile_id='18' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='145' backedge_count='3072' iicount='145' level='3' stamp='5.525' comment='tiered' hot_count='145'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d79010:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019544668} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002d79180: mov    0x8(%rdx),%r10d
  0x0000000002d79184: shl    $0x3,%r10
  0x0000000002d79188: cmp    %rax,%r10
  0x0000000002d7918b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d79191: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d7919c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d791a0: mov    %eax,-0x6000(%rsp)
  0x0000000002d791a7: push   %rbp
  0x0000000002d791a8: sub    $0x40,%rsp
  0x0000000002d791ac: movabs $0x19547470,%rax   ;   {metadata(method data for {method} {0x0000000019544668} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002d791b6: mov    0xdc(%rax),%esi
  0x0000000002d791bc: add    $0x8,%esi
  0x0000000002d791bf: mov    %esi,0xdc(%rax)
  0x0000000002d791c5: movabs $0x19544660,%rax   ;   {metadata({method} {0x0000000019544668} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002d791cf: and    $0x1ff8,%esi
  0x0000000002d791d5: cmp    $0x0,%esi
  0x0000000002d791d8: je     0x0000000002d792e7  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x0000000002d791de: movabs $0x19547470,%rax   ;   {metadata(method data for {method} {0x0000000019544668} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002d791e8: addq   $0x1,0x118(%rax)
  0x0000000002d791f0: movabs $0x19547630,%rax   ;   {metadata(method data for {method} {0x0000000019543e98} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002d791fa: mov    0xdc(%rax),%esi
  0x0000000002d79200: add    $0x8,%esi
  0x0000000002d79203: mov    %esi,0xdc(%rax)
  0x0000000002d79209: movabs $0x19543e90,%rax   ;   {metadata({method} {0x0000000019543e98} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002d79213: and    $0x7ffff8,%esi
  0x0000000002d79219: cmp    $0x0,%esi
  0x0000000002d7921c: je     0x0000000002d792fe
  0x0000000002d79222: mov    %r8,%rax
  0x0000000002d79225: and    $0xffff,%eax
  0x0000000002d7922b: movabs $0x78088bae8,%rsi  ;   {oop([I)}
  0x0000000002d79235: movslq %eax,%rdi
  0x0000000002d79238: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x0000000002d79315
  0x0000000002d7923b: jae    0x0000000002d7931f
  0x0000000002d79241: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000000002d79245: mov    %rax,%rsi
  0x0000000002d79248: and    $0x20000,%esi
  0x0000000002d7924e: cmp    $0x0,%esi
  0x0000000002d79251: movabs $0x19547470,%rsi   ;   {metadata(method data for {method} {0x0000000019544668} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002d7925b: movabs $0x138,%rdi
  0x0000000002d79265: je     0x0000000002d79275
  0x0000000002d7926b: movabs $0x148,%rdi
  0x0000000002d79275: mov    (%rsi,%rdi,1),%rbx
  0x0000000002d79279: lea    0x1(%rbx),%rbx
  0x0000000002d7927d: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002d79281: je     0x0000000002d792d8  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x0000000002d79287: mov    %rax,%rsi
  0x0000000002d7928a: and    $0x7fc0000,%esi
  0x0000000002d79290: cmp    $0x7fc0000,%esi
  0x0000000002d79296: movabs $0x19547470,%rsi   ;   {metadata(method data for {method} {0x0000000019544668} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002d792a0: movabs $0x158,%rdi
  0x0000000002d792aa: je     0x0000000002d792ba
  0x0000000002d792b0: movabs $0x168,%rdi
  0x0000000002d792ba: mov    (%rsi,%rdi,1),%rbx
  0x0000000002d792be: lea    0x1(%rbx),%rbx
  0x0000000002d792c2: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002d792c6: je     0x0000000002d792d8  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x0000000002d792cc: shl    $0x5,%eax
  0x0000000002d792cf: sar    $0x17,%eax
  0x0000000002d792d2: add    %r8d,%eax
  0x0000000002d792d5: mov    %rax,%r8           ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x0000000002d792d8: mov    %r8,%rax
  0x0000000002d792db: add    $0x40,%rsp
  0x0000000002d792df: pop    %rbp
  0x0000000002d792e0: test   %eax,-0x3e91e6(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d792e6: retq   
  0x0000000002d792e7: mov    %rax,0x8(%rsp)
  0x0000000002d792ec: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d792f4: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=377}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x0000000002d792f9: jmpq   0x0000000002d791de
  0x0000000002d792fe: mov    %rax,0x8(%rsp)
  0x0000000002d79303: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d7930b: callq  0x0000000002d710e0  ; OopMap{off=400}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002d79310: jmpq   0x0000000002d79222
  0x0000000002d79315: callq  0x0000000002cdff40  ; OopMap{rsi=Oop off=410}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002d7931a: callq  0x0000000002cdff40  ; OopMap{rsi=Oop off=415}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002d7931f: mov    %rax,(%rsp)
  0x0000000002d79323: callq  0x0000000002ce0600  ; OopMap{rsi=Oop off=424}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002d79328: nop
  0x0000000002d79329: nop
  0x0000000002d7932a: mov    0x2a8(%r15),%rax
  0x0000000002d79331: movabs $0x0,%r10
  0x0000000002d7933b: mov    %r10,0x2a8(%r15)
  0x0000000002d79342: movabs $0x0,%r10
  0x0000000002d7934c: mov    %r10,0x2b0(%r15)
  0x0000000002d79353: add    $0x40,%rsp
  0x0000000002d79357: pop    %rbp
  0x0000000002d79358: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d7935d: hlt    
  0x0000000002d7935e: hlt    
  0x0000000002d7935f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d79360: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d79365: mov    %rsp,-0x28(%rsp)
  0x0000000002d7936a: sub    $0x80,%rsp
  0x0000000002d79371: mov    %rax,0x78(%rsp)
  0x0000000002d79376: mov    %rcx,0x70(%rsp)
  0x0000000002d7937b: mov    %rdx,0x68(%rsp)
  0x0000000002d79380: mov    %rbx,0x60(%rsp)
  0x0000000002d79385: mov    %rbp,0x50(%rsp)
  0x0000000002d7938a: mov    %rsi,0x48(%rsp)
  0x0000000002d7938f: mov    %rdi,0x40(%rsp)
  0x0000000002d79394: mov    %r8,0x38(%rsp)
  0x0000000002d79399: mov    %r9,0x30(%rsp)
  0x0000000002d7939e: mov    %r10,0x28(%rsp)
  0x0000000002d793a3: mov    %r11,0x20(%rsp)
  0x0000000002d793a8: mov    %r12,0x18(%rsp)
  0x0000000002d793ad: mov    %r13,0x10(%rsp)
  0x0000000002d793b2: mov    %r14,0x8(%rsp)
  0x0000000002d793b7: mov    %r15,(%rsp)
  0x0000000002d793bb: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d793c5: movabs $0x2d79365,%rdx    ;   {internal_word}
  0x0000000002d793cf: mov    %rsp,%r8
  0x0000000002d793d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002d793d6: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d793db: hlt    
[Deopt Handler Code]
  0x0000000002d793dc: movabs $0x2d793dc,%r10    ;   {section_word}
  0x0000000002d793e6: push   %r10
  0x0000000002d793e8: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d793ed: hlt    
  0x0000000002d793ee: hlt    
  0x0000000002d793ef: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x0000000002d79180' size='1352' address='0x0000000002d79010' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1016' scopes_pcs_offset='1128' dependencies_offset='1320' nul_chk_table_offset='1328' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='3357' iicount='3357' stamp='5.556'/>
<writer thread='3656'/>
<task_queued compile_id='19' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='897' iicount='897' level='3' stamp='5.557' comment='tiered' hot_count='896'/>
<writer thread='5912'/>
<task_queued compile_id='20' method='java/lang/String indexOf (II)I' bytes='70' count='489' backedge_count='16384' iicount='489' level='3' stamp='5.557' comment='tiered' hot_count='489'/>
<task_queued compile_id='21' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='512' iicount='512' level='3' stamp='5.558' comment='tiered' hot_count='512'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d83cd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xa0]  (sp of caller)
  0x0000000002d83ec0: mov    0x8(%rdx),%r10d
  0x0000000002d83ec4: shl    $0x3,%r10
  0x0000000002d83ec8: cmp    %rax,%r10
  0x0000000002d83ecb: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d83ed1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d83edc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d83ee0: mov    %eax,-0x6000(%rsp)
  0x0000000002d83ee7: push   %rbp
  0x0000000002d83ee8: sub    $0x90,%rsp
  0x0000000002d83eef: movabs $0x1961e730,%r9    ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d83ef9: mov    0xdc(%r9),%edi
  0x0000000002d83f00: add    $0x8,%edi
  0x0000000002d83f03: mov    %edi,0xdc(%r9)
  0x0000000002d83f0a: movabs $0x194ed740,%r9    ;   {metadata({method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d83f14: and    $0x1ff8,%edi
  0x0000000002d83f1a: cmp    $0x0,%edi
  0x0000000002d83f1d: je     0x0000000002d84526  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@0 (line 82)

  0x0000000002d83f23: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ; implicit exception: dispatches to 0x0000000002d8453d
  0x0000000002d83f26: mov    %r8,%r9
  0x0000000002d83f29: movabs $0x1961e730,%rdi   ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d83f33: mov    0x8(%r9),%r9d
  0x0000000002d83f37: shl    $0x3,%r9
  0x0000000002d83f3b: cmp    0x110(%rdi),%r9
  0x0000000002d83f42: jne    0x0000000002d83f51
  0x0000000002d83f44: addq   $0x1,0x118(%rdi)
  0x0000000002d83f4c: jmpq   0x0000000002d83fb7
  0x0000000002d83f51: cmp    0x120(%rdi),%r9
  0x0000000002d83f58: jne    0x0000000002d83f67
  0x0000000002d83f5a: addq   $0x1,0x128(%rdi)
  0x0000000002d83f62: jmpq   0x0000000002d83fb7
  0x0000000002d83f67: cmpq   $0x0,0x110(%rdi)
  0x0000000002d83f72: jne    0x0000000002d83f8b
  0x0000000002d83f74: mov    %r9,0x110(%rdi)
  0x0000000002d83f7b: movq   $0x1,0x118(%rdi)
  0x0000000002d83f86: jmpq   0x0000000002d83fb7
  0x0000000002d83f8b: cmpq   $0x0,0x120(%rdi)
  0x0000000002d83f96: jne    0x0000000002d83faf
  0x0000000002d83f98: mov    %r9,0x120(%rdi)
  0x0000000002d83f9f: movq   $0x1,0x128(%rdi)
  0x0000000002d83faa: jmpq   0x0000000002d83fb7
  0x0000000002d83faf: addq   $0x1,0x108(%rdi)
  0x0000000002d83fb7: movabs $0x194a3a98,%r9    ;   {metadata(method data for {method} {0x0000000019373c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d83fc1: mov    0xdc(%r9),%edi
  0x0000000002d83fc8: add    $0x8,%edi
  0x0000000002d83fcb: mov    %edi,0xdc(%r9)
  0x0000000002d83fd2: movabs $0x19373c18,%r9    ;   {metadata({method} {0x0000000019373c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d83fdc: and    $0x7ffff8,%edi
  0x0000000002d83fe2: cmp    $0x0,%edi
  0x0000000002d83fe5: je     0x0000000002d84542
  0x0000000002d83feb: mov    0xc(%r8),%r9d
  0x0000000002d83fef: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x0000000002d83ff3: mov    0xc(%r9),%esi      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ; implicit exception: dispatches to 0x0000000002d84559
  0x0000000002d83ff7: movzwl 0xc(%rdx),%edi     ;*getfield slash
                                                ; - java.io.WinNTFileSystem::normalize@6 (line 83)

  0x0000000002d83ffb: movzwl 0xe(%rdx),%ebx     ;*getfield altSlash
                                                ; - java.io.WinNTFileSystem::normalize@11 (line 84)

  0x0000000002d83fff: mov    $0x0,%ecx
  0x0000000002d84004: mov    $0x0,%r9d          ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@22 (line 86)

  0x0000000002d8400a: nopw   0x0(%rax,%rax,1)
  0x0000000002d84010: cmp    %esi,%ecx
  0x0000000002d84012: movabs $0x1961e730,%rax   ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d8401c: movabs $0x138,%r11
  0x0000000002d84026: jge    0x0000000002d84036
  0x0000000002d8402c: movabs $0x148,%r11
  0x0000000002d84036: mov    (%rax,%r11,1),%r13
  0x0000000002d8403a: lea    0x1(%r13),%r13
  0x0000000002d8403e: mov    %r13,(%rax,%r11,1)
  0x0000000002d84042: jge    0x0000000002d8438f  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x0000000002d84048: mov    %r8,%rax
  0x0000000002d8404b: movabs $0x1961e730,%r11   ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d84055: mov    0x8(%rax),%eax
  0x0000000002d84058: shl    $0x3,%rax
  0x0000000002d8405c: cmp    0x160(%r11),%rax
  0x0000000002d84063: jne    0x0000000002d84072
  0x0000000002d84065: addq   $0x1,0x168(%r11)
  0x0000000002d8406d: jmpq   0x0000000002d840d8
  0x0000000002d84072: cmp    0x170(%r11),%rax
  0x0000000002d84079: jne    0x0000000002d84088
  0x0000000002d8407b: addq   $0x1,0x178(%r11)
  0x0000000002d84083: jmpq   0x0000000002d840d8
  0x0000000002d84088: cmpq   $0x0,0x160(%r11)
  0x0000000002d84093: jne    0x0000000002d840ac
  0x0000000002d84095: mov    %rax,0x160(%r11)
  0x0000000002d8409c: movq   $0x1,0x168(%r11)
  0x0000000002d840a7: jmpq   0x0000000002d840d8
  0x0000000002d840ac: cmpq   $0x0,0x170(%r11)
  0x0000000002d840b7: jne    0x0000000002d840d0
  0x0000000002d840b9: mov    %rax,0x170(%r11)
  0x0000000002d840c0: movq   $0x1,0x178(%r11)
  0x0000000002d840cb: jmpq   0x0000000002d840d8
  0x0000000002d840d0: addq   $0x1,0x158(%r11)
  0x0000000002d840d8: movabs $0x194a3920,%rax   ;   {metadata(method data for {method} {0x0000000019373d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d840e2: mov    0xdc(%rax),%r11d
  0x0000000002d840e9: add    $0x8,%r11d
  0x0000000002d840ed: mov    %r11d,0xdc(%rax)
  0x0000000002d840f4: movabs $0x19373d68,%rax   ;   {metadata({method} {0x0000000019373d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d840fe: and    $0x7ffff8,%r11d
  0x0000000002d84105: cmp    $0x0,%r11d
  0x0000000002d84109: je     0x0000000002d8455e
  0x0000000002d8410f: cmp    $0x0,%ecx
  0x0000000002d84112: movabs $0x194a3920,%rax   ;   {metadata(method data for {method} {0x0000000019373d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d8411c: movabs $0x108,%r11
  0x0000000002d84126: jl     0x0000000002d84136
  0x0000000002d8412c: movabs $0x118,%r11
  0x0000000002d84136: mov    (%rax,%r11,1),%r13
  0x0000000002d8413a: lea    0x1(%r13),%r13
  0x0000000002d8413e: mov    %r13,(%rax,%r11,1)
  0x0000000002d84142: jl     0x0000000002d844c3  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002d84148: mov    0xc(%r8),%eax
  0x0000000002d8414c: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002d84150: mov    0xc(%rax),%r11d    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ; implicit exception: dispatches to 0x0000000002d84575
  0x0000000002d84154: cmp    %r11d,%ecx
  0x0000000002d84157: movabs $0x194a3920,%r11   ;   {metadata(method data for {method} {0x0000000019373d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d84161: movabs $0x128,%r13
  0x0000000002d8416b: jl     0x0000000002d8417b
  0x0000000002d84171: movabs $0x138,%r13
  0x0000000002d8417b: mov    (%r11,%r13,1),%r14
  0x0000000002d8417f: lea    0x1(%r14),%r14
  0x0000000002d84183: mov    %r14,(%r11,%r13,1)
  0x0000000002d84187: jge    0x0000000002d844c3  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002d8418d: movslq %ecx,%r11
  0x0000000002d84190: cmp    0xc(%rax),%ecx
  0x0000000002d84193: jae    0x0000000002d8457a
  0x0000000002d84199: movzwl 0x10(%rax,%r11,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002d8419f: and    $0xffff,%eax
  0x0000000002d841a5: cmp    %ebx,%eax
  0x0000000002d841a7: movabs $0x1961e730,%r11   ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d841b1: movabs $0x188,%r13
  0x0000000002d841bb: jne    0x0000000002d841cb
  0x0000000002d841c1: movabs $0x198,%r13
  0x0000000002d841cb: mov    (%r11,%r13,1),%r14
  0x0000000002d841cf: lea    0x1(%r14),%r14
  0x0000000002d841d3: mov    %r14,(%r11,%r13,1)
  0x0000000002d841d7: je     0x0000000002d84351  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@40 (line 88)

  0x0000000002d841dd: cmp    %edi,%eax
  0x0000000002d841df: movabs $0x1961e730,%r11   ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d841e9: movabs $0x1f0,%r13
  0x0000000002d841f3: jne    0x0000000002d84203
  0x0000000002d841f9: movabs $0x200,%r13
  0x0000000002d84203: mov    (%r11,%r13,1),%r14
  0x0000000002d84207: lea    0x1(%r14),%r14
  0x0000000002d8420b: mov    %r14,(%r11,%r13,1)
  0x0000000002d8420f: jne    0x0000000002d84287  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@68 (line 90)

  0x0000000002d84215: cmp    %edi,%r9d
  0x0000000002d84218: movabs $0x1961e730,%r9    ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d84222: movabs $0x210,%r11
  0x0000000002d8422c: jne    0x0000000002d8423c
  0x0000000002d84232: movabs $0x220,%r11
  0x0000000002d8423c: mov    (%r9,%r11,1),%r13
  0x0000000002d84240: lea    0x1(%r13),%r13
  0x0000000002d84244: mov    %r13,(%r9,%r11,1)
  0x0000000002d84248: jne    0x0000000002d84287  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 90)

  0x0000000002d8424e: cmp    $0x1,%ecx
  0x0000000002d84251: movabs $0x1961e730,%r9    ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d8425b: movabs $0x230,%r11
  0x0000000002d84265: jle    0x0000000002d84275
  0x0000000002d8426b: movabs $0x240,%r11
  0x0000000002d84275: mov    (%r9,%r11,1),%r13
  0x0000000002d84279: lea    0x1(%r13),%r13
  0x0000000002d8427d: mov    %r13,(%r9,%r11,1)
  0x0000000002d84281: jg     0x0000000002d8448b  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@80 (line 90)

  0x0000000002d84287: cmp    $0x3a,%eax
  0x0000000002d8428a: movabs $0x1961e730,%r9    ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d84294: movabs $0x260,%r11
  0x0000000002d8429e: jne    0x0000000002d842ae
  0x0000000002d842a4: movabs $0x270,%r11
  0x0000000002d842ae: mov    (%r9,%r11,1),%r13
  0x0000000002d842b2: lea    0x1(%r13),%r13
  0x0000000002d842b6: mov    %r13,(%r9,%r11,1)
  0x0000000002d842ba: jne    0x0000000002d842f9  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@98 (line 92)

  0x0000000002d842c0: cmp    $0x1,%ecx
  0x0000000002d842c3: movabs $0x1961e730,%r9    ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d842cd: movabs $0x280,%r11
  0x0000000002d842d7: jle    0x0000000002d842e7
  0x0000000002d842dd: movabs $0x290,%r11
  0x0000000002d842e7: mov    (%r9,%r11,1),%r13
  0x0000000002d842eb: lea    0x1(%r13),%r13
  0x0000000002d842ef: mov    %r13,(%r9,%r11,1)
  0x0000000002d842f3: jg     0x0000000002d84453  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 92)

  0x0000000002d842f9: inc    %ecx
  0x0000000002d842fb: movabs $0x1961e730,%r9    ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d84305: mov    0xe0(%r9),%r11d
  0x0000000002d8430c: add    $0x8,%r11d
  0x0000000002d84310: mov    %r11d,0xe0(%r9)
  0x0000000002d84317: movabs $0x194ed740,%r9    ;   {metadata({method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d84321: and    $0xfff8,%r11d
  0x0000000002d84328: cmp    $0x0,%r11d
  0x0000000002d8432c: je     0x0000000002d84583  ; OopMap{rdx=Oop r8=Oop off=1138}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 86)

  0x0000000002d84332: test   %eax,-0x3f4238(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d84338: movabs $0x1961e730,%r9    ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d84342: incl   0x2b0(%r9)
  0x0000000002d84349: mov    %rax,%r9
  0x0000000002d8434c: jmpq   0x0000000002d84010  ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 86)

  0x0000000002d84351: cmp    %edi,%r9d
  0x0000000002d84354: movabs $0x1961e730,%r9    ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d8435e: movabs $0x1a8,%rdi
  0x0000000002d84368: jne    0x0000000002d84378
  0x0000000002d8436e: movabs $0x1b8,%rdi
  0x0000000002d84378: mov    (%r9,%rdi,1),%rbx
  0x0000000002d8437c: lea    0x1(%rbx),%rbx
  0x0000000002d84380: mov    %rbx,(%r9,%rdi,1)
  0x0000000002d84384: jne    0x0000000002d84420
  0x0000000002d8438a: jmpq   0x0000000002d8440d  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@49 (line 89)

  0x0000000002d8438f: cmp    %edi,%r9d
  0x0000000002d84392: movabs $0x1961e730,%r9    ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d8439c: movabs $0x2c8,%rdi
  0x0000000002d843a6: jne    0x0000000002d843b6
  0x0000000002d843ac: movabs $0x2d8,%rdi
  0x0000000002d843b6: mov    (%r9,%rdi,1),%rbx
  0x0000000002d843ba: lea    0x1(%rbx),%rbx
  0x0000000002d843be: mov    %rbx,(%r9,%rdi,1)
  0x0000000002d843c2: jne    0x0000000002d843fb  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 96)

  0x0000000002d843c8: mov    %rdx,%r9
  0x0000000002d843cb: movabs $0x1961e730,%rdi   ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d843d5: addq   $0x1,0x2e8(%rdi)
  0x0000000002d843dd: mov    %rsi,%rdi
  0x0000000002d843e0: dec    %edi
  0x0000000002d843e2: mov    %rsi,%r9           ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@137 (line 96)

  0x0000000002d843e5: nop
  0x0000000002d843e6: nop
  0x0000000002d843e7: callq  0x0000000002cb61a0  ; OopMap{off=1324}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@137 (line 96)
                                                ;   {optimized virtual_call}
  0x0000000002d843ec: add    $0x90,%rsp
  0x0000000002d843f3: pop    %rbp
  0x0000000002d843f4: test   %eax,-0x3f42fa(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d843fa: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@140 (line 96)

  0x0000000002d843fb: mov    %r8,%rax
  0x0000000002d843fe: add    $0x90,%rsp
  0x0000000002d84405: pop    %rbp
  0x0000000002d84406: test   %eax,-0x3f430c(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d8440c: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@142 (line 97)

  0x0000000002d8440d: dec    %ecx
  0x0000000002d8440f: movabs $0x1961e730,%r9    ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d84419: incl   0x1c8(%r9)         ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@56 (line 89)

  0x0000000002d84420: mov    %rdx,%r9
  0x0000000002d84423: movabs $0x1961e730,%rdi   ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d8442d: addq   $0x1,0x1e0(%rdi)
  0x0000000002d84435: mov    %rsi,%r9
  0x0000000002d84438: mov    %rcx,%rdi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002d8443b: nop
  0x0000000002d8443c: nop
  0x0000000002d8443d: nop
  0x0000000002d8443e: nop
  0x0000000002d8443f: callq  0x0000000002cb61a0  ; OopMap{off=1412}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x0000000002d84444: add    $0x90,%rsp
  0x0000000002d8444b: pop    %rbp
  0x0000000002d8444c: test   %eax,-0x3f4352(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d84452: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 89)

  0x0000000002d84453: mov    %rdx,%r9
  0x0000000002d84456: movabs $0x1961e730,%rdi   ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d84460: addq   $0x1,0x2a0(%rdi)
  0x0000000002d84468: mov    %rsi,%r9
  0x0000000002d8446b: mov    $0x0,%edi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002d84470: nop
  0x0000000002d84471: nop
  0x0000000002d84472: nop
  0x0000000002d84473: nop
  0x0000000002d84474: nop
  0x0000000002d84475: nop
  0x0000000002d84476: nop
  0x0000000002d84477: callq  0x0000000002cb61a0  ; OopMap{off=1468}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x0000000002d8447c: add    $0x90,%rsp
  0x0000000002d84483: pop    %rbp
  0x0000000002d84484: test   %eax,-0x3f438a(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d8448a: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@114 (line 93)

  0x0000000002d8448b: mov    %rdx,%r9
  0x0000000002d8448e: movabs $0x1961e730,%rdi   ;   {metadata(method data for {method} {0x00000000194ed748} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d84498: addq   $0x1,0x250(%rdi)
  0x0000000002d844a0: dec    %ecx
  0x0000000002d844a2: mov    %rsi,%r9
  0x0000000002d844a5: mov    %rcx,%rdi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 91)

  0x0000000002d844a8: nop
  0x0000000002d844a9: nop
  0x0000000002d844aa: nop
  0x0000000002d844ab: nop
  0x0000000002d844ac: nop
  0x0000000002d844ad: nop
  0x0000000002d844ae: nop
  0x0000000002d844af: callq  0x0000000002cb61a0  ; OopMap{off=1524}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 91)
                                                ;   {optimized virtual_call}
  0x0000000002d844b4: add    $0x90,%rsp
  0x0000000002d844bb: pop    %rbp
  0x0000000002d844bc: test   %eax,-0x3f43c2(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d844c2: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 91)

  0x0000000002d844c3: mov    %r9d,0x74(%rsp)
  0x0000000002d844c8: mov    %ebx,0x70(%rsp)
  0x0000000002d844cc: mov    %edi,0x6c(%rsp)
  0x0000000002d844d0: mov    %esi,0x68(%rsp)
  0x0000000002d844d4: mov    %r8,0x58(%rsp)
  0x0000000002d844d9: mov    %rdx,0x60(%rsp)
  0x0000000002d844de: xchg   %ax,%ax
  0x0000000002d844e0: jmpq   0x0000000002d845a9  ;   {no_reloc}
  0x0000000002d844e5: add    %al,(%rax)
  0x0000000002d844e7: add    %al,(%rax)
  0x0000000002d844e9: add    %ch,%cl
  0x0000000002d844eb: (bad)  
  0x0000000002d844ec: add    %al,(%rax)
  0x0000000002d844ee: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002d844f1: rorb   -0x43(%rcx)        ;   {metadata(method data for {method} {0x0000000019373d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d844f4: and    %bh,(%rcx)
  0x0000000002d844f6: rex.WX sbb %rax,(%rax)
  0x0000000002d844f9: add    %al,(%rax)
  0x0000000002d844fb: add    %cl,-0x7d(%rcx)
  0x0000000002d844fe: test   %ecx,0x1(%rax)
  0x0000000002d84501: add    %al,(%rax)
  0x0000000002d84503: add    %ecx,-0x3f(%rbx,%rcx,4)
  0x0000000002d84507: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002d8450a: mov    %ecx,0x78(%rsp)
  0x0000000002d8450e: mov    %rax,0x50(%rsp)
  0x0000000002d84513: nop
  0x0000000002d84514: nop
  0x0000000002d84515: nop
  0x0000000002d84516: nop
  0x0000000002d84517: callq  0x0000000002cb61a0  ; OopMap{[88]=Oop [80]=Oop [96]=Oop off=1628}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {optimized virtual_call}
  0x0000000002d8451c: mov    0x50(%rsp),%rax
  0x0000000002d84521: jmpq   0x0000000002d845eb
  0x0000000002d84526: mov    %r9,0x8(%rsp)
  0x0000000002d8452b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d84533: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop off=1656}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)
                                                ;   {runtime_call}
  0x0000000002d84538: jmpq   0x0000000002d83f23
  0x0000000002d8453d: callq  0x0000000002cdff40  ; OopMap{rdx=Oop r8=Oop off=1666}
                                                ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x0000000002d84542: mov    %r9,0x8(%rsp)
  0x0000000002d84547: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d8454f: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop off=1684}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x0000000002d84554: jmpq   0x0000000002d83feb
  0x0000000002d84559: callq  0x0000000002cdff40  ; OopMap{rdx=Oop r8=Oop off=1694}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x0000000002d8455e: mov    %rax,0x8(%rsp)
  0x0000000002d84563: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d8456b: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop off=1712}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000002d84570: jmpq   0x0000000002d8410f
  0x0000000002d84575: callq  0x0000000002cdff40  ; OopMap{rdx=Oop r8=Oop rax=Oop off=1722}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000002d8457a: mov    %rcx,(%rsp)
  0x0000000002d8457e: callq  0x0000000002ce0600  ; OopMap{rdx=Oop r8=Oop rax=Oop off=1731}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000002d84583: mov    %r9,0x8(%rsp)
  0x0000000002d84588: movq   $0x7a,(%rsp)
  0x0000000002d84590: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop off=1749}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 86)
                                                ;   {runtime_call}
  0x0000000002d84595: jmpq   0x0000000002d84332
  0x0000000002d8459a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d845a4: mov    $0xa050f00,%eax
  0x0000000002d845a9: callq  0x0000000002d72160  ; OopMap{[88]=Oop [96]=Oop off=1774}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000002d845ae: jmpq   0x0000000002d844e0
  0x0000000002d845b3: mov    %rdx,%rdx
  0x0000000002d845b6: callq  0x0000000002cdfa20  ; OopMap{[88]=Oop [96]=Oop off=1787}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000002d845bb: jmpq   0x0000000002d844ef
  0x0000000002d845c0: nop
  0x0000000002d845c1: nop
  0x0000000002d845c2: mov    0x2a8(%r15),%rax
  0x0000000002d845c9: movabs $0x0,%r10
  0x0000000002d845d3: mov    %r10,0x2a8(%r15)
  0x0000000002d845da: movabs $0x0,%r10
  0x0000000002d845e4: mov    %r10,0x2b0(%r15)
  0x0000000002d845eb: add    $0x90,%rsp
  0x0000000002d845f2: pop    %rbp
  0x0000000002d845f3: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d845f8: hlt    
  0x0000000002d845f9: hlt    
  0x0000000002d845fa: hlt    
  0x0000000002d845fb: hlt    
  0x0000000002d845fc: hlt    
  0x0000000002d845fd: hlt    
  0x0000000002d845fe: hlt    
  0x0000000002d845ff: hlt    
[Stub Code]
  0x0000000002d84600: nop                       ;   {no_reloc}
  0x0000000002d84601: nop
  0x0000000002d84602: nop
  0x0000000002d84603: nop
  0x0000000002d84604: nop
  0x0000000002d84605: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8460f: jmpq   0x0000000002d8460f  ;   {runtime_call}
  0x0000000002d84614: nop
  0x0000000002d84615: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8461f: jmpq   0x0000000002d8461f  ;   {runtime_call}
  0x0000000002d84624: nop
  0x0000000002d84625: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8462f: jmpq   0x0000000002d8462f  ;   {runtime_call}
  0x0000000002d84634: nop
  0x0000000002d84635: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8463f: jmpq   0x0000000002d8463f  ;   {runtime_call}
  0x0000000002d84644: nop
  0x0000000002d84645: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8464f: jmpq   0x0000000002d8464f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d84654: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d84659: mov    %rsp,-0x28(%rsp)
  0x0000000002d8465e: sub    $0x80,%rsp
  0x0000000002d84665: mov    %rax,0x78(%rsp)
  0x0000000002d8466a: mov    %rcx,0x70(%rsp)
  0x0000000002d8466f: mov    %rdx,0x68(%rsp)
  0x0000000002d84674: mov    %rbx,0x60(%rsp)
  0x0000000002d84679: mov    %rbp,0x50(%rsp)
  0x0000000002d8467e: mov    %rsi,0x48(%rsp)
  0x0000000002d84683: mov    %rdi,0x40(%rsp)
  0x0000000002d84688: mov    %r8,0x38(%rsp)
  0x0000000002d8468d: mov    %r9,0x30(%rsp)
  0x0000000002d84692: mov    %r10,0x28(%rsp)
  0x0000000002d84697: mov    %r11,0x20(%rsp)
  0x0000000002d8469c: mov    %r12,0x18(%rsp)
  0x0000000002d846a1: mov    %r13,0x10(%rsp)
  0x0000000002d846a6: mov    %r14,0x8(%rsp)
  0x0000000002d846ab: mov    %r15,(%rsp)
  0x0000000002d846af: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d846b9: movabs $0x2d84659,%rdx    ;   {internal_word}
  0x0000000002d846c3: mov    %rsp,%r8
  0x0000000002d846c6: and    $0xfffffffffffffff0,%rsp
  0x0000000002d846ca: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d846cf: hlt    
[Deopt Handler Code]
  0x0000000002d846d0: movabs $0x2d846d0,%r10    ;   {section_word}
  0x0000000002d846da: push   %r10
  0x0000000002d846dc: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d846e1: hlt    
  0x0000000002d846e2: hlt    
  0x0000000002d846e3: hlt    
  0x0000000002d846e4: hlt    
  0x0000000002d846e5: hlt    
  0x0000000002d846e6: hlt    
  0x0000000002d846e7: hlt    
<nmethod compile_id='18' compiler='C1' level='3' entry='0x0000000002d83ec0' size='3984' address='0x0000000002d83cd0' relocation_offset='288' insts_offset='496' stub_offset='2352' scopes_data_offset='2616' scopes_pcs_offset='3112' dependencies_offset='3944' nul_chk_table_offset='3952' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='150' backedge_count='3306' iicount='150' stamp='5.956'/>
<writer thread='5912'/>
<task_queued compile_id='22' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='786' backedge_count='2913' iicount='786' level='3' stamp='5.957' comment='tiered' hot_count='786'/>
<task_queued compile_id='23' method='java/lang/Math min (II)I' bytes='11' count='1792' iicount='1792' level='3' stamp='5.957' comment='tiered' hot_count='1792'/>
<task_queued compile_id='24' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='3584' iicount='3584' level='3' stamp='5.957' comment='tiered' hot_count='3584'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d78690:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019375140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002d78820: mov    0x8(%rdx),%r10d
  0x0000000002d78824: shl    $0x3,%r10
  0x0000000002d78828: cmp    %rax,%r10
  0x0000000002d7882b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d78831: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d7883c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d78840: mov    %eax,-0x6000(%rsp)
  0x0000000002d78847: push   %rbp
  0x0000000002d78848: sub    $0x30,%rsp
  0x0000000002d7884c: movabs $0x19564068,%rax   ;   {metadata(method data for {method} {0x0000000019375140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d78856: mov    0xdc(%rax),%esi
  0x0000000002d7885c: add    $0x8,%esi
  0x0000000002d7885f: mov    %esi,0xdc(%rax)
  0x0000000002d78865: movabs $0x19375138,%rax   ;   {metadata({method} {0x0000000019375140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7886f: and    $0x1ff8,%esi
  0x0000000002d78875: cmp    $0x0,%esi
  0x0000000002d78878: je     0x0000000002d78a91  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x0000000002d7887e: mov    0xc(%rdx),%eax
  0x0000000002d78881: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x0000000002d78885: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x0000000002d78aa8
  0x0000000002d78888: cmp    $0x0,%r9d
  0x0000000002d7888c: movabs $0x19564068,%rdi   ;   {metadata(method data for {method} {0x0000000019375140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d78896: movabs $0x108,%rbx
  0x0000000002d788a0: jge    0x0000000002d788b0
  0x0000000002d788a6: movabs $0x118,%rbx
  0x0000000002d788b0: mov    (%rdi,%rbx,1),%rcx
  0x0000000002d788b4: lea    0x1(%rcx),%rcx
  0x0000000002d788b8: mov    %rcx,(%rdi,%rbx,1)
  0x0000000002d788bc: jge    0x0000000002d788de  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000002d788c2: movabs $0x19564068,%r9    ;   {metadata(method data for {method} {0x0000000019375140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d788cc: incl   0x128(%r9)
  0x0000000002d788d3: mov    $0x0,%r9d
  0x0000000002d788d9: jmpq   0x0000000002d78917  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x0000000002d788de: cmp    %esi,%r9d
  0x0000000002d788e1: movabs $0x19564068,%rdi   ;   {metadata(method data for {method} {0x0000000019375140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d788eb: movabs $0x140,%rbx
  0x0000000002d788f5: jl     0x0000000002d78905
  0x0000000002d788fb: movabs $0x150,%rbx
  0x0000000002d78905: mov    (%rdi,%rbx,1),%rcx
  0x0000000002d78909: lea    0x1(%rcx),%rcx
  0x0000000002d7890d: mov    %rcx,(%rdi,%rbx,1)
  0x0000000002d78911: jge    0x0000000002d78a80  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x0000000002d78917: cmp    $0x10000,%r8d
  0x0000000002d7891e: movabs $0x19564068,%rdi   ;   {metadata(method data for {method} {0x0000000019375140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d78928: movabs $0x160,%rbx
  0x0000000002d78932: jge    0x0000000002d78942
  0x0000000002d78938: movabs $0x170,%rbx
  0x0000000002d78942: mov    (%rdi,%rbx,1),%rcx
  0x0000000002d78946: lea    0x1(%rcx),%rcx
  0x0000000002d7894a: mov    %rcx,(%rdi,%rbx,1)
  0x0000000002d7894e: jge    0x0000000002d78a54
  0x0000000002d78954: jmpq   0x0000000002d789f6  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x0000000002d78959: nopl   0x0(%rax)
  0x0000000002d78960: movslq %r9d,%rdx
  0x0000000002d78963: cmp    0xc(%rax),%r9d
  0x0000000002d78967: jae    0x0000000002d78aad
  0x0000000002d7896d: movzwl 0x10(%rax,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002d78972: cmp    %r8d,%edx
  0x0000000002d78975: movabs $0x19564068,%rdx   ;   {metadata(method data for {method} {0x0000000019375140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d7897f: movabs $0x1a0,%rdi
  0x0000000002d78989: jne    0x0000000002d78999
  0x0000000002d7898f: movabs $0x1b0,%rdi
  0x0000000002d78999: mov    (%rdx,%rdi,1),%rbx
  0x0000000002d7899d: lea    0x1(%rbx),%rbx
  0x0000000002d789a1: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002d789a5: je     0x0000000002d78a34  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002d789ab: inc    %r9d
  0x0000000002d789ae: movabs $0x19564068,%rdx   ;   {metadata(method data for {method} {0x0000000019375140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d789b8: mov    0xe0(%rdx),%edi
  0x0000000002d789be: add    $0x8,%edi
  0x0000000002d789c1: mov    %edi,0xe0(%rdx)
  0x0000000002d789c7: movabs $0x19375138,%rdx   ;   {metadata({method} {0x0000000019375140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d789d1: and    $0xfff8,%edi
  0x0000000002d789d7: cmp    $0x0,%edi
  0x0000000002d789da: je     0x0000000002d78ab6  ; OopMap{rax=Oop off=448}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x0000000002d789e0: test   %eax,-0x3e88e6(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d789e6: movabs $0x19564068,%rdx   ;   {metadata(method data for {method} {0x0000000019375140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d789f0: incl   0x1c0(%rdx)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x0000000002d789f6: cmp    %esi,%r9d
  0x0000000002d789f9: movabs $0x19564068,%rdx   ;   {metadata(method data for {method} {0x0000000019375140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d78a03: movabs $0x180,%rdi
  0x0000000002d78a0d: jge    0x0000000002d78a1d
  0x0000000002d78a13: movabs $0x190,%rdi
  0x0000000002d78a1d: mov    (%rdx,%rdi,1),%rbx
  0x0000000002d78a21: lea    0x1(%rbx),%rbx
  0x0000000002d78a25: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002d78a29: jge    0x0000000002d78a43
  0x0000000002d78a2f: jmpq   0x0000000002d78960  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002d78a34: mov    %r9,%rax
  0x0000000002d78a37: add    $0x30,%rsp
  0x0000000002d78a3b: pop    %rbp
  0x0000000002d78a3c: test   %eax,-0x3e8942(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d78a42: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x0000000002d78a43: mov    $0xffffffff,%eax
  0x0000000002d78a48: add    $0x30,%rsp
  0x0000000002d78a4c: pop    %rbp
  0x0000000002d78a4d: test   %eax,-0x3e8953(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d78a53: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x0000000002d78a54: mov    %rdx,%rsi
  0x0000000002d78a57: movabs $0x19564068,%rdi   ;   {metadata(method data for {method} {0x0000000019375140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d78a61: addq   $0x1,0x1d8(%rdi)
  0x0000000002d78a69: nop
  0x0000000002d78a6a: nop
  0x0000000002d78a6b: nop
  0x0000000002d78a6c: nop
  0x0000000002d78a6d: nop
  0x0000000002d78a6e: nop
  0x0000000002d78a6f: callq  0x0000000002cb61a0  ; OopMap{off=596}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x0000000002d78a74: add    $0x30,%rsp
  0x0000000002d78a78: pop    %rbp
  0x0000000002d78a79: test   %eax,-0x3e897f(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d78a7f: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x0000000002d78a80: mov    $0xffffffff,%eax
  0x0000000002d78a85: add    $0x30,%rsp
  0x0000000002d78a89: pop    %rbp
  0x0000000002d78a8a: test   %eax,-0x3e8990(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d78a90: retq   
  0x0000000002d78a91: mov    %rax,0x8(%rsp)
  0x0000000002d78a96: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d78a9e: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=643}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x0000000002d78aa3: jmpq   0x0000000002d7887e
  0x0000000002d78aa8: callq  0x0000000002cdff40  ; OopMap{rdx=Oop rax=Oop off=653}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x0000000002d78aad: mov    %r9,(%rsp)
  0x0000000002d78ab1: callq  0x0000000002ce0600  ; OopMap{rax=Oop off=662}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x0000000002d78ab6: mov    %rdx,0x8(%rsp)
  0x0000000002d78abb: movq   $0x3a,(%rsp)
  0x0000000002d78ac3: callq  0x0000000002d710e0  ; OopMap{rax=Oop off=680}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x0000000002d78ac8: jmpq   0x0000000002d789e0
  0x0000000002d78acd: nop
  0x0000000002d78ace: nop
  0x0000000002d78acf: mov    0x2a8(%r15),%rax
  0x0000000002d78ad6: movabs $0x0,%r10
  0x0000000002d78ae0: mov    %r10,0x2a8(%r15)
  0x0000000002d78ae7: movabs $0x0,%r10
  0x0000000002d78af1: mov    %r10,0x2b0(%r15)
  0x0000000002d78af8: add    $0x30,%rsp
  0x0000000002d78afc: pop    %rbp
  0x0000000002d78afd: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d78b02: hlt    
  0x0000000002d78b03: hlt    
  0x0000000002d78b04: hlt    
  0x0000000002d78b05: hlt    
  0x0000000002d78b06: hlt    
  0x0000000002d78b07: hlt    
  0x0000000002d78b08: hlt    
  0x0000000002d78b09: hlt    
  0x0000000002d78b0a: hlt    
  0x0000000002d78b0b: hlt    
  0x0000000002d78b0c: hlt    
  0x0000000002d78b0d: hlt    
  0x0000000002d78b0e: hlt    
  0x0000000002d78b0f: hlt    
  0x0000000002d78b10: hlt    
  0x0000000002d78b11: hlt    
  0x0000000002d78b12: hlt    
  0x0000000002d78b13: hlt    
  0x0000000002d78b14: hlt    
  0x0000000002d78b15: hlt    
  0x0000000002d78b16: hlt    
  0x0000000002d78b17: hlt    
  0x0000000002d78b18: hlt    
  0x0000000002d78b19: hlt    
  0x0000000002d78b1a: hlt    
  0x0000000002d78b1b: hlt    
  0x0000000002d78b1c: hlt    
  0x0000000002d78b1d: hlt    
  0x0000000002d78b1e: hlt    
  0x0000000002d78b1f: hlt    
[Stub Code]
  0x0000000002d78b20: nop                       ;   {no_reloc}
  0x0000000002d78b21: nop
  0x0000000002d78b22: nop
  0x0000000002d78b23: nop
  0x0000000002d78b24: nop
  0x0000000002d78b25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d78b2f: jmpq   0x0000000002d78b2f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d78b34: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d78b39: mov    %rsp,-0x28(%rsp)
  0x0000000002d78b3e: sub    $0x80,%rsp
  0x0000000002d78b45: mov    %rax,0x78(%rsp)
  0x0000000002d78b4a: mov    %rcx,0x70(%rsp)
  0x0000000002d78b4f: mov    %rdx,0x68(%rsp)
  0x0000000002d78b54: mov    %rbx,0x60(%rsp)
  0x0000000002d78b59: mov    %rbp,0x50(%rsp)
  0x0000000002d78b5e: mov    %rsi,0x48(%rsp)
  0x0000000002d78b63: mov    %rdi,0x40(%rsp)
  0x0000000002d78b68: mov    %r8,0x38(%rsp)
  0x0000000002d78b6d: mov    %r9,0x30(%rsp)
  0x0000000002d78b72: mov    %r10,0x28(%rsp)
  0x0000000002d78b77: mov    %r11,0x20(%rsp)
  0x0000000002d78b7c: mov    %r12,0x18(%rsp)
  0x0000000002d78b81: mov    %r13,0x10(%rsp)
  0x0000000002d78b86: mov    %r14,0x8(%rsp)
  0x0000000002d78b8b: mov    %r15,(%rsp)
  0x0000000002d78b8f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d78b99: movabs $0x2d78b39,%rdx    ;   {internal_word}
  0x0000000002d78ba3: mov    %rsp,%r8
  0x0000000002d78ba6: and    $0xfffffffffffffff0,%rsp
  0x0000000002d78baa: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d78baf: hlt    
[Deopt Handler Code]
  0x0000000002d78bb0: movabs $0x2d78bb0,%r10    ;   {section_word}
  0x0000000002d78bba: push   %r10
  0x0000000002d78bbc: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d78bc1: hlt    
  0x0000000002d78bc2: hlt    
  0x0000000002d78bc3: hlt    
  0x0000000002d78bc4: hlt    
  0x0000000002d78bc5: hlt    
  0x0000000002d78bc6: hlt    
  0x0000000002d78bc7: hlt    
<nmethod compile_id='20' compiler='C1' level='3' entry='0x0000000002d78820' size='1880' address='0x0000000002d78690' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1344' scopes_pcs_offset='1504' dependencies_offset='1856' nul_chk_table_offset='1864' method='java/lang/String indexOf (II)I' bytes='70' count='496' backedge_count='16667' iicount='496' stamp='5.973'/>
<writer thread='3656'/>
<task_queued compile_id='25' method='java/lang/String indexOf (I)I' bytes='7' count='512' iicount='512' level='3' stamp='5.973' comment='tiered' hot_count='512'/>
<writer thread='21476'/>
<task_queued compile_id='26' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4608' iicount='4608' level='1' stamp='5.973' comment='tiered' hot_count='4608'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d84c90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019374db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002d84e00: mov    0x8(%rdx),%r10d
  0x0000000002d84e04: shl    $0x3,%r10
  0x0000000002d84e08: cmp    %rax,%r10
  0x0000000002d84e0b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d84e11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d84e1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d84e20: mov    %eax,-0x6000(%rsp)
  0x0000000002d84e27: push   %rbp
  0x0000000002d84e28: sub    $0x30,%rsp
  0x0000000002d84e2c: movabs $0x195a86a0,%rax   ;   {metadata(method data for {method} {0x0000000019374db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d84e36: mov    0xdc(%rax),%esi
  0x0000000002d84e3c: add    $0x8,%esi
  0x0000000002d84e3f: mov    %esi,0xdc(%rax)
  0x0000000002d84e45: movabs $0x19374db0,%rax   ;   {metadata({method} {0x0000000019374db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d84e4f: and    $0x1ff8,%esi
  0x0000000002d84e55: cmp    $0x0,%esi
  0x0000000002d84e58: je     0x0000000002d85015  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x0000000002d84e5e: mov    0xc(%rdx),%eax
  0x0000000002d84e61: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x0000000002d84e65: mov    0xc(%r8),%esi      ; implicit exception: dispatches to 0x0000000002d8502c
  0x0000000002d84e69: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x0000000002d84e6d: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x0000000002d85031
  0x0000000002d84e70: cmp    $0x0,%r9d
  0x0000000002d84e74: movabs $0x195a86a0,%rbx   ;   {metadata(method data for {method} {0x0000000019374db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d84e7e: movabs $0x108,%rdx
  0x0000000002d84e88: jl     0x0000000002d84e98
  0x0000000002d84e8e: movabs $0x118,%rdx
  0x0000000002d84e98: mov    (%rbx,%rdx,1),%rcx
  0x0000000002d84e9c: lea    0x1(%rcx),%rcx
  0x0000000002d84ea0: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002d84ea4: jl     0x0000000002d84fe2  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x0000000002d84eaa: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x0000000002d85036
  0x0000000002d84ead: sub    %edi,%ebx
  0x0000000002d84eaf: cmp    %ebx,%r9d
  0x0000000002d84eb2: movabs $0x195a86a0,%rbx   ;   {metadata(method data for {method} {0x0000000019374db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d84ebc: movabs $0x128,%rdx
  0x0000000002d84ec6: jle    0x0000000002d84ed6
  0x0000000002d84ecc: movabs $0x138,%rdx
  0x0000000002d84ed6: mov    (%rbx,%rdx,1),%rcx
  0x0000000002d84eda: lea    0x1(%rcx),%rcx
  0x0000000002d84ede: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002d84ee2: jg     0x0000000002d84fe2  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x0000000002d84ee8: mov    $0x0,%ebx
  0x0000000002d84eed: jmpq   0x0000000002d84fa2  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000002d84ef2: nopw   0x0(%rax,%rax,1)
  0x0000000002d84ef8: mov    %r9,%rdx
  0x0000000002d84efb: inc    %edx
  0x0000000002d84efd: movslq %r9d,%rcx
  0x0000000002d84f00: cmp    0xc(%rax),%r9d
  0x0000000002d84f04: jae    0x0000000002d8503b
  0x0000000002d84f0a: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x0000000002d84f0f: mov    %rbx,%r8
  0x0000000002d84f12: inc    %r8d
  0x0000000002d84f15: movslq %ebx,%r9
  0x0000000002d84f18: cmp    0xc(%rsi),%ebx
  0x0000000002d84f1b: jae    0x0000000002d85044
  0x0000000002d84f21: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x0000000002d84f27: movabs $0x195a86a0,%r9    ;   {metadata(method data for {method} {0x0000000019374db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d84f31: mov    0xe0(%r9),%r11d
  0x0000000002d84f38: add    $0x8,%r11d
  0x0000000002d84f3c: mov    %r11d,0xe0(%r9)
  0x0000000002d84f43: movabs $0x19374db0,%r9    ;   {metadata({method} {0x0000000019374db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d84f4d: and    $0xfff8,%r11d
  0x0000000002d84f54: cmp    $0x0,%r11d
  0x0000000002d84f58: je     0x0000000002d8504d  ; OopMap{rsi=Oop rax=Oop off=350}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000002d84f5e: test   %eax,-0x3f4e64(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d84f64: cmp    %ebx,%ecx
  0x0000000002d84f66: movabs $0x195a86a0,%rbx   ;   {metadata(method data for {method} {0x0000000019374db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d84f70: movabs $0x168,%rcx
  0x0000000002d84f7a: je     0x0000000002d84f8a
  0x0000000002d84f80: movabs $0x178,%rcx
  0x0000000002d84f8a: mov    (%rbx,%rcx,1),%r9
  0x0000000002d84f8e: lea    0x1(%r9),%r9
  0x0000000002d84f92: mov    %r9,(%rbx,%rcx,1)
  0x0000000002d84f96: jne    0x0000000002d84ff3  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000002d84f9c: mov    %r8,%rbx
  0x0000000002d84f9f: mov    %rdx,%r9           ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000002d84fa2: dec    %edi
  0x0000000002d84fa4: cmp    $0x0,%edi
  0x0000000002d84fa7: movabs $0x195a86a0,%rdx   ;   {metadata(method data for {method} {0x0000000019374db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d84fb1: movabs $0x148,%rcx
  0x0000000002d84fbb: jl     0x0000000002d84fcb
  0x0000000002d84fc1: movabs $0x158,%rcx
  0x0000000002d84fcb: mov    (%rdx,%rcx,1),%r8
  0x0000000002d84fcf: lea    0x1(%r8),%r8
  0x0000000002d84fd3: mov    %r8,(%rdx,%rcx,1)
  0x0000000002d84fd7: jl     0x0000000002d85004
  0x0000000002d84fdd: jmpq   0x0000000002d84ef8  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x0000000002d84fe2: mov    $0x0,%eax
  0x0000000002d84fe7: add    $0x30,%rsp
  0x0000000002d84feb: pop    %rbp
  0x0000000002d84fec: test   %eax,-0x3f4ef2(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d84ff2: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x0000000002d84ff3: mov    $0x0,%eax
  0x0000000002d84ff8: add    $0x30,%rsp
  0x0000000002d84ffc: pop    %rbp
  0x0000000002d84ffd: test   %eax,-0x3f4f03(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d85003: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x0000000002d85004: mov    $0x1,%eax
  0x0000000002d85009: add    $0x30,%rsp
  0x0000000002d8500d: pop    %rbp
  0x0000000002d8500e: test   %eax,-0x3f4f14(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d85014: retq   
  0x0000000002d85015: mov    %rax,0x8(%rsp)
  0x0000000002d8501a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d85022: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop off=551}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x0000000002d85027: jmpq   0x0000000002d84e5e
  0x0000000002d8502c: callq  0x0000000002cdff40  ; OopMap{rax=Oop off=561}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x0000000002d85031: callq  0x0000000002cdff40  ; OopMap{rax=Oop rsi=Oop off=566}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x0000000002d85036: callq  0x0000000002cdff40  ; OopMap{rsi=Oop rax=Oop off=571}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x0000000002d8503b: mov    %r9,(%rsp)
  0x0000000002d8503f: callq  0x0000000002ce0600  ; OopMap{rsi=Oop rax=Oop off=580}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x0000000002d85044: mov    %rbx,(%rsp)
  0x0000000002d85048: callq  0x0000000002ce0600  ; OopMap{rsi=Oop rax=Oop off=589}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x0000000002d8504d: mov    %r9,0x8(%rsp)
  0x0000000002d85052: movq   $0x41,(%rsp)
  0x0000000002d8505a: callq  0x0000000002d710e0  ; OopMap{rsi=Oop rax=Oop off=607}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x0000000002d8505f: jmpq   0x0000000002d84f5e
  0x0000000002d85064: nop
  0x0000000002d85065: nop
  0x0000000002d85066: mov    0x2a8(%r15),%rax
  0x0000000002d8506d: movabs $0x0,%r10
  0x0000000002d85077: mov    %r10,0x2a8(%r15)
  0x0000000002d8507e: movabs $0x0,%r10
  0x0000000002d85088: mov    %r10,0x2b0(%r15)
  0x0000000002d8508f: add    $0x30,%rsp
  0x0000000002d85093: pop    %rbp
  0x0000000002d85094: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d85099: hlt    
  0x0000000002d8509a: hlt    
  0x0000000002d8509b: hlt    
  0x0000000002d8509c: hlt    
  0x0000000002d8509d: hlt    
  0x0000000002d8509e: hlt    
  0x0000000002d8509f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d850a0: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d850a5: mov    %rsp,-0x28(%rsp)
  0x0000000002d850aa: sub    $0x80,%rsp
  0x0000000002d850b1: mov    %rax,0x78(%rsp)
  0x0000000002d850b6: mov    %rcx,0x70(%rsp)
  0x0000000002d850bb: mov    %rdx,0x68(%rsp)
  0x0000000002d850c0: mov    %rbx,0x60(%rsp)
  0x0000000002d850c5: mov    %rbp,0x50(%rsp)
  0x0000000002d850ca: mov    %rsi,0x48(%rsp)
  0x0000000002d850cf: mov    %rdi,0x40(%rsp)
  0x0000000002d850d4: mov    %r8,0x38(%rsp)
  0x0000000002d850d9: mov    %r9,0x30(%rsp)
  0x0000000002d850de: mov    %r10,0x28(%rsp)
  0x0000000002d850e3: mov    %r11,0x20(%rsp)
  0x0000000002d850e8: mov    %r12,0x18(%rsp)
  0x0000000002d850ed: mov    %r13,0x10(%rsp)
  0x0000000002d850f2: mov    %r14,0x8(%rsp)
  0x0000000002d850f7: mov    %r15,(%rsp)
  0x0000000002d850fb: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d85105: movabs $0x2d850a5,%rdx    ;   {internal_word}
  0x0000000002d8510f: mov    %rsp,%r8
  0x0000000002d85112: and    $0xfffffffffffffff0,%rsp
  0x0000000002d85116: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d8511b: hlt    
[Deopt Handler Code]
  0x0000000002d8511c: movabs $0x2d8511c,%r10    ;   {section_word}
  0x0000000002d85126: push   %r10
  0x0000000002d85128: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d8512d: hlt    
  0x0000000002d8512e: hlt    
  0x0000000002d8512f: hlt    
<nmethod compile_id='22' compiler='C1' level='3' entry='0x0000000002d84e00' size='1824' address='0x0000000002d84c90' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='829' backedge_count='3003' iicount='829' stamp='6.009'/>
Decoding compiled method 0x0000000002d853d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000002d85520: mov    0x8(%rdx),%r10d
  0x0000000002d85524: shl    $0x3,%r10
  0x0000000002d85528: cmp    %rax,%r10
  0x0000000002d8552b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d85531: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d8553c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d85540: mov    %eax,-0x6000(%rsp)
  0x0000000002d85547: push   %rbp
  0x0000000002d85548: sub    $0x50,%rsp
  0x0000000002d8554c: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000002d8554f: mov    %rdx,0x40(%rsp)
  0x0000000002d85554: callq  0x0000000002cdfca0  ; OopMap{[64]=Oop off=57}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x0000000002d85559: add    $0x50,%rsp
  0x0000000002d8555d: pop    %rbp
  0x0000000002d8555e: test   %eax,-0x3f5464(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d85564: retq   
  0x0000000002d85565: nop
  0x0000000002d85566: nop
  0x0000000002d85567: mov    0x2a8(%r15),%rax
  0x0000000002d8556e: movabs $0x0,%r10
  0x0000000002d85578: mov    %r10,0x2a8(%r15)
  0x0000000002d8557f: movabs $0x0,%r10
  0x0000000002d85589: mov    %r10,0x2b0(%r15)
  0x0000000002d85590: add    $0x50,%rsp
  0x0000000002d85594: pop    %rbp
  0x0000000002d85595: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d8559a: hlt    
  0x0000000002d8559b: hlt    
  0x0000000002d8559c: hlt    
  0x0000000002d8559d: hlt    
  0x0000000002d8559e: hlt    
  0x0000000002d8559f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d855a0: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d855a5: mov    %rsp,-0x28(%rsp)
  0x0000000002d855aa: sub    $0x80,%rsp
  0x0000000002d855b1: mov    %rax,0x78(%rsp)
  0x0000000002d855b6: mov    %rcx,0x70(%rsp)
  0x0000000002d855bb: mov    %rdx,0x68(%rsp)
  0x0000000002d855c0: mov    %rbx,0x60(%rsp)
  0x0000000002d855c5: mov    %rbp,0x50(%rsp)
  0x0000000002d855ca: mov    %rsi,0x48(%rsp)
  0x0000000002d855cf: mov    %rdi,0x40(%rsp)
  0x0000000002d855d4: mov    %r8,0x38(%rsp)
  0x0000000002d855d9: mov    %r9,0x30(%rsp)
  0x0000000002d855de: mov    %r10,0x28(%rsp)
  0x0000000002d855e3: mov    %r11,0x20(%rsp)
  0x0000000002d855e8: mov    %r12,0x18(%rsp)
  0x0000000002d855ed: mov    %r13,0x10(%rsp)
  0x0000000002d855f2: mov    %r14,0x8(%rsp)
  0x0000000002d855f7: mov    %r15,(%rsp)
  0x0000000002d855fb: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d85605: movabs $0x2d855a5,%rdx    ;   {internal_word}
  0x0000000002d8560f: mov    %rsp,%r8
  0x0000000002d85612: and    $0xfffffffffffffff0,%rsp
  0x0000000002d85616: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d8561b: hlt    
[Deopt Handler Code]
  0x0000000002d8561c: movabs $0x2d8561c,%r10    ;   {section_word}
  0x0000000002d85626: push   %r10
  0x0000000002d85628: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d8562d: hlt    
  0x0000000002d8562e: hlt    
  0x0000000002d8562f: hlt    
<nmethod compile_id='26' compiler='C1' level='1' entry='0x0000000002d85520' size='712' address='0x0000000002d853d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4646' iicount='4646' stamp='6.012'/>
<make_not_entrant thread='28032' compile_id='5' compiler='C1' level='3' stamp='6.012'/>
Decoding compiled method 0x0000000002d85cd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000195437d8} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002d85e80: mov    %eax,-0x6000(%rsp)
  0x0000000002d85e87: push   %rbp
  0x0000000002d85e88: sub    $0x30,%rsp
  0x0000000002d85e8c: movabs $0x19547200,%rax   ;   {metadata(method data for {method} {0x00000000195437d8} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002d85e96: mov    0xdc(%rax),%esi
  0x0000000002d85e9c: add    $0x8,%esi
  0x0000000002d85e9f: mov    %esi,0xdc(%rax)
  0x0000000002d85ea5: movabs $0x195437d0,%rax   ;   {metadata({method} {0x00000000195437d8} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002d85eaf: and    $0x1ff8,%esi
  0x0000000002d85eb5: cmp    $0x0,%esi
  0x0000000002d85eb8: je     0x0000000002d8603c  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x0000000002d85ebe: mov    %rdx,%rax
  0x0000000002d85ec1: shr    $0x8,%eax
  0x0000000002d85ec4: cmp    $0x0,%eax
  0x0000000002d85ec7: movabs $0x19547200,%rax   ;   {metadata(method data for {method} {0x00000000195437d8} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002d85ed1: movabs $0x108,%rsi
  0x0000000002d85edb: jne    0x0000000002d85eeb
  0x0000000002d85ee1: movabs $0x118,%rsi
  0x0000000002d85eeb: mov    (%rax,%rsi,1),%rdi
  0x0000000002d85eef: lea    0x1(%rdi),%rdi
  0x0000000002d85ef3: mov    %rdi,(%rax,%rsi,1)
  0x0000000002d85ef7: je     0x0000000002d86026  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x0000000002d85efd: shr    $0x10,%edx
  0x0000000002d85f00: cmp    $0x0,%edx
  0x0000000002d85f03: je     0x0000000002d85ffe
  0x0000000002d85f09: cmp    $0x1,%edx
  0x0000000002d85f0c: je     0x0000000002d85fd6
  0x0000000002d85f12: cmp    $0x2,%edx
  0x0000000002d85f15: je     0x0000000002d85fae
  0x0000000002d85f1b: cmp    $0xe,%edx
  0x0000000002d85f1e: je     0x0000000002d85f86
  0x0000000002d85f24: cmp    $0xf,%edx
  0x0000000002d85f27: je     0x0000000002d85f36
  0x0000000002d85f2d: cmp    $0x10,%edx
  0x0000000002d85f30: jne    0x0000000002d85f5e  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x0000000002d85f36: xchg   %ax,%ax
  0x0000000002d85f38: jmpq   0x0000000002d860b0  ;   {no_reloc}
  0x0000000002d85f3d: add    %al,(%rax)
  0x0000000002d85f3f: add    %al,(%rax)
  0x0000000002d85f41: add    %ah,0xf(%rsi)
  0x0000000002d85f44: (bad)  
  0x0000000002d85f45: add    %r8b,(%rax)
  0x0000000002d85f48: jmpq   0x0000000002d860ca  ; implicit exception: dispatches to 0x0000000002d860ba
  0x0000000002d85f4d: nop
  0x0000000002d85f4e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x0000000002d85f52: add    $0x30,%rsp
  0x0000000002d85f56: pop    %rbp
  0x0000000002d85f57: test   %eax,-0x3f5e5d(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d85f5d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x0000000002d85f5e: xchg   %ax,%ax
  0x0000000002d85f60: jmpq   0x0000000002d86131  ;   {no_reloc}
  0x0000000002d85f65: add    %al,(%rax)
  0x0000000002d85f67: add    %al,(%rax)
  0x0000000002d85f69: add    %ah,0xf(%rsi)
  0x0000000002d85f6c: (bad)  
  0x0000000002d85f6d: add    %r8b,(%rax)
  0x0000000002d85f70: jmpq   0x0000000002d8614b  ; implicit exception: dispatches to 0x0000000002d8613b
  0x0000000002d85f75: nop
  0x0000000002d85f76: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x0000000002d85f7a: add    $0x30,%rsp
  0x0000000002d85f7e: pop    %rbp
  0x0000000002d85f7f: test   %eax,-0x3f5e85(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d85f85: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x0000000002d85f86: xchg   %ax,%ax
  0x0000000002d85f88: jmpq   0x0000000002d861b2  ;   {no_reloc}
  0x0000000002d85f8d: add    %al,(%rax)
  0x0000000002d85f8f: add    %al,(%rax)
  0x0000000002d85f91: add    %ah,0xf(%rsi)
  0x0000000002d85f94: (bad)  
  0x0000000002d85f95: add    %r8b,(%rax)
  0x0000000002d85f98: jmpq   0x0000000002d861cc  ; implicit exception: dispatches to 0x0000000002d861bc
  0x0000000002d85f9d: nop
  0x0000000002d85f9e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x0000000002d85fa2: add    $0x30,%rsp
  0x0000000002d85fa6: pop    %rbp
  0x0000000002d85fa7: test   %eax,-0x3f5ead(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d85fad: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x0000000002d85fae: xchg   %ax,%ax
  0x0000000002d85fb0: jmpq   0x0000000002d86233  ;   {no_reloc}
  0x0000000002d85fb5: add    %al,(%rax)
  0x0000000002d85fb7: add    %al,(%rax)
  0x0000000002d85fb9: add    %ah,0xf(%rsi)
  0x0000000002d85fbc: (bad)  
  0x0000000002d85fbd: add    %r8b,(%rax)
  0x0000000002d85fc0: jmpq   0x0000000002d8624d  ; implicit exception: dispatches to 0x0000000002d8623d
  0x0000000002d85fc5: nop
  0x0000000002d85fc6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x0000000002d85fca: add    $0x30,%rsp
  0x0000000002d85fce: pop    %rbp
  0x0000000002d85fcf: test   %eax,-0x3f5ed5(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d85fd5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x0000000002d85fd6: xchg   %ax,%ax
  0x0000000002d85fd8: jmpq   0x0000000002d862b4  ;   {no_reloc}
  0x0000000002d85fdd: add    %al,(%rax)
  0x0000000002d85fdf: add    %al,(%rax)
  0x0000000002d85fe1: add    %ah,0xf(%rsi)
  0x0000000002d85fe4: (bad)  
  0x0000000002d85fe5: add    %r8b,(%rax)
  0x0000000002d85fe8: jmpq   0x0000000002d862ce  ; implicit exception: dispatches to 0x0000000002d862be
  0x0000000002d85fed: nop
  0x0000000002d85fee: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x0000000002d85ff2: add    $0x30,%rsp
  0x0000000002d85ff6: pop    %rbp
  0x0000000002d85ff7: test   %eax,-0x3f5efd(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d85ffd: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x0000000002d85ffe: xchg   %ax,%ax
  0x0000000002d86000: jmpq   0x0000000002d86335  ;   {no_reloc}
  0x0000000002d86005: add    %al,(%rax)
  0x0000000002d86007: add    %al,(%rax)
  0x0000000002d86009: add    %ah,0xf(%rsi)
  0x0000000002d8600c: (bad)  
  0x0000000002d8600d: add    %r8b,(%rax)
  0x0000000002d86010: jmpq   0x0000000002d8634f  ; implicit exception: dispatches to 0x0000000002d8633f
  0x0000000002d86015: nop
  0x0000000002d86016: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x0000000002d8601a: add    $0x30,%rsp
  0x0000000002d8601e: pop    %rbp
  0x0000000002d8601f: test   %eax,-0x3f5f25(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d86025: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x0000000002d86026: movabs $0x78088bad8,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002d86030: add    $0x30,%rsp
  0x0000000002d86034: pop    %rbp
  0x0000000002d86035: test   %eax,-0x3f5f3b(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d8603b: retq   
  0x0000000002d8603c: mov    %rax,0x8(%rsp)
  0x0000000002d86041: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d86049: callq  0x0000000002d710e0  ; OopMap{off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x0000000002d8604e: jmpq   0x0000000002d85ebe
  0x0000000002d86053: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002d8605d: push   %rax
  0x0000000002d8605e: push   %rbx
  0x0000000002d8605f: mov    0x48(%rax),%rbx
  0x0000000002d86063: push   %rdi
  0x0000000002d86064: push   %rsi
  0x0000000002d86065: push   %rdx
  0x0000000002d86066: push   %rcx
  0x0000000002d86067: push   %r8
  0x0000000002d86069: push   %r9
  0x0000000002d8606b: push   %r10
  0x0000000002d8606d: mov    %rsp,%r10
  0x0000000002d86070: and    $0xfffffffffffffff0,%rsp
  0x0000000002d86074: push   %r10
  0x0000000002d86076: push   %r11
  0x0000000002d86078: mov    $0x7,%ecx
  0x0000000002d8607d: movabs $0x7ffddc7c5e40,%r10  ;   {runtime_call}
  0x0000000002d86087: callq  *%r10
  0x0000000002d8608a: pop    %r11
  0x0000000002d8608c: pop    %rsp
  0x0000000002d8608d: pop    %r10
  0x0000000002d8608f: pop    %r9
  0x0000000002d86091: pop    %r8
  0x0000000002d86093: pop    %rcx
  0x0000000002d86094: pop    %rdx
  0x0000000002d86095: pop    %rsi
  0x0000000002d86096: pop    %rdi
  0x0000000002d86097: cmp    0x118(%rbx),%rax
  0x0000000002d8609e: pop    %rbx
  0x0000000002d8609f: pop    %rax
  0x0000000002d860a0: jne    0x0000000002d860b0
  0x0000000002d860a6: jmpq   0x0000000002d85f42
  0x0000000002d860ab: mov    $0xa535d00,%eax
  0x0000000002d860b0: callq  0x0000000002d71d20  ; OopMap{off=565}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002d860b5: jmpq   0x0000000002d85f38
  0x0000000002d860ba: callq  0x0000000002cdff40  ; OopMap{rax=Oop off=575}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002d860bf: mov    0x0(%rax),%eax
  0x0000000002d860c5: mov    $0x6050b00,%eax
  0x0000000002d860ca: callq  0x0000000002d725a0  ; OopMap{rax=Oop off=591}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002d860cf: jmpq   0x0000000002d85f48
  0x0000000002d860d4: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002d860de: push   %rax
  0x0000000002d860df: push   %rbx
  0x0000000002d860e0: mov    0x48(%rax),%rbx
  0x0000000002d860e4: push   %rdi
  0x0000000002d860e5: push   %rsi
  0x0000000002d860e6: push   %rdx
  0x0000000002d860e7: push   %rcx
  0x0000000002d860e8: push   %r8
  0x0000000002d860ea: push   %r9
  0x0000000002d860ec: push   %r10
  0x0000000002d860ee: mov    %rsp,%r10
  0x0000000002d860f1: and    $0xfffffffffffffff0,%rsp
  0x0000000002d860f5: push   %r10
  0x0000000002d860f7: push   %r11
  0x0000000002d860f9: mov    $0x7,%ecx
  0x0000000002d860fe: movabs $0x7ffddc7c5e40,%r10  ;   {runtime_call}
  0x0000000002d86108: callq  *%r10
  0x0000000002d8610b: pop    %r11
  0x0000000002d8610d: pop    %rsp
  0x0000000002d8610e: pop    %r10
  0x0000000002d86110: pop    %r9
  0x0000000002d86112: pop    %r8
  0x0000000002d86114: pop    %rcx
  0x0000000002d86115: pop    %rdx
  0x0000000002d86116: pop    %rsi
  0x0000000002d86117: pop    %rdi
  0x0000000002d86118: cmp    0x118(%rbx),%rax
  0x0000000002d8611f: pop    %rbx
  0x0000000002d86120: pop    %rax
  0x0000000002d86121: jne    0x0000000002d86131
  0x0000000002d86127: jmpq   0x0000000002d85f6a
  0x0000000002d8612c: mov    $0xa535d00,%eax
  0x0000000002d86131: callq  0x0000000002d71d20  ; OopMap{off=694}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002d86136: jmpq   0x0000000002d85f60
  0x0000000002d8613b: callq  0x0000000002cdff40  ; OopMap{rax=Oop off=704}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002d86140: mov    0x0(%rax),%eax
  0x0000000002d86146: mov    $0x6050b00,%eax
  0x0000000002d8614b: callq  0x0000000002d725a0  ; OopMap{rax=Oop off=720}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002d86150: jmpq   0x0000000002d85f70
  0x0000000002d86155: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002d8615f: push   %rax
  0x0000000002d86160: push   %rbx
  0x0000000002d86161: mov    0x48(%rax),%rbx
  0x0000000002d86165: push   %rdi
  0x0000000002d86166: push   %rsi
  0x0000000002d86167: push   %rdx
  0x0000000002d86168: push   %rcx
  0x0000000002d86169: push   %r8
  0x0000000002d8616b: push   %r9
  0x0000000002d8616d: push   %r10
  0x0000000002d8616f: mov    %rsp,%r10
  0x0000000002d86172: and    $0xfffffffffffffff0,%rsp
  0x0000000002d86176: push   %r10
  0x0000000002d86178: push   %r11
  0x0000000002d8617a: mov    $0x7,%ecx
  0x0000000002d8617f: movabs $0x7ffddc7c5e40,%r10  ;   {runtime_call}
  0x0000000002d86189: callq  *%r10
  0x0000000002d8618c: pop    %r11
  0x0000000002d8618e: pop    %rsp
  0x0000000002d8618f: pop    %r10
  0x0000000002d86191: pop    %r9
  0x0000000002d86193: pop    %r8
  0x0000000002d86195: pop    %rcx
  0x0000000002d86196: pop    %rdx
  0x0000000002d86197: pop    %rsi
  0x0000000002d86198: pop    %rdi
  0x0000000002d86199: cmp    0x118(%rbx),%rax
  0x0000000002d861a0: pop    %rbx
  0x0000000002d861a1: pop    %rax
  0x0000000002d861a2: jne    0x0000000002d861b2
  0x0000000002d861a8: jmpq   0x0000000002d85f92
  0x0000000002d861ad: mov    $0xa535d00,%eax
  0x0000000002d861b2: callq  0x0000000002d71d20  ; OopMap{off=823}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002d861b7: jmpq   0x0000000002d85f88
  0x0000000002d861bc: callq  0x0000000002cdff40  ; OopMap{rax=Oop off=833}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002d861c1: mov    0x0(%rax),%eax
  0x0000000002d861c7: mov    $0x6050b00,%eax
  0x0000000002d861cc: callq  0x0000000002d725a0  ; OopMap{rax=Oop off=849}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002d861d1: jmpq   0x0000000002d85f98
  0x0000000002d861d6: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002d861e0: push   %rax
  0x0000000002d861e1: push   %rbx
  0x0000000002d861e2: mov    0x48(%rax),%rbx
  0x0000000002d861e6: push   %rdi
  0x0000000002d861e7: push   %rsi
  0x0000000002d861e8: push   %rdx
  0x0000000002d861e9: push   %rcx
  0x0000000002d861ea: push   %r8
  0x0000000002d861ec: push   %r9
  0x0000000002d861ee: push   %r10
  0x0000000002d861f0: mov    %rsp,%r10
  0x0000000002d861f3: and    $0xfffffffffffffff0,%rsp
  0x0000000002d861f7: push   %r10
  0x0000000002d861f9: push   %r11
  0x0000000002d861fb: mov    $0x7,%ecx
  0x0000000002d86200: movabs $0x7ffddc7c5e40,%r10  ;   {runtime_call}
  0x0000000002d8620a: callq  *%r10
  0x0000000002d8620d: pop    %r11
  0x0000000002d8620f: pop    %rsp
  0x0000000002d86210: pop    %r10
  0x0000000002d86212: pop    %r9
  0x0000000002d86214: pop    %r8
  0x0000000002d86216: pop    %rcx
  0x0000000002d86217: pop    %rdx
  0x0000000002d86218: pop    %rsi
  0x0000000002d86219: pop    %rdi
  0x0000000002d8621a: cmp    0x118(%rbx),%rax
  0x0000000002d86221: pop    %rbx
  0x0000000002d86222: pop    %rax
  0x0000000002d86223: jne    0x0000000002d86233
  0x0000000002d86229: jmpq   0x0000000002d85fba
  0x0000000002d8622e: mov    $0xa535d00,%eax
  0x0000000002d86233: callq  0x0000000002d71d20  ; OopMap{off=952}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002d86238: jmpq   0x0000000002d85fb0
  0x0000000002d8623d: callq  0x0000000002cdff40  ; OopMap{rax=Oop off=962}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002d86242: mov    0x0(%rax),%eax
  0x0000000002d86248: mov    $0x6050b00,%eax
  0x0000000002d8624d: callq  0x0000000002d725a0  ; OopMap{rax=Oop off=978}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002d86252: jmpq   0x0000000002d85fc0
  0x0000000002d86257: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002d86261: push   %rax
  0x0000000002d86262: push   %rbx
  0x0000000002d86263: mov    0x48(%rax),%rbx
  0x0000000002d86267: push   %rdi
  0x0000000002d86268: push   %rsi
  0x0000000002d86269: push   %rdx
  0x0000000002d8626a: push   %rcx
  0x0000000002d8626b: push   %r8
  0x0000000002d8626d: push   %r9
  0x0000000002d8626f: push   %r10
  0x0000000002d86271: mov    %rsp,%r10
  0x0000000002d86274: and    $0xfffffffffffffff0,%rsp
  0x0000000002d86278: push   %r10
  0x0000000002d8627a: push   %r11
  0x0000000002d8627c: mov    $0x7,%ecx
  0x0000000002d86281: movabs $0x7ffddc7c5e40,%r10  ;   {runtime_call}
  0x0000000002d8628b: callq  *%r10
  0x0000000002d8628e: pop    %r11
  0x0000000002d86290: pop    %rsp
  0x0000000002d86291: pop    %r10
  0x0000000002d86293: pop    %r9
  0x0000000002d86295: pop    %r8
  0x0000000002d86297: pop    %rcx
  0x0000000002d86298: pop    %rdx
  0x0000000002d86299: pop    %rsi
  0x0000000002d8629a: pop    %rdi
  0x0000000002d8629b: cmp    0x118(%rbx),%rax
  0x0000000002d862a2: pop    %rbx
  0x0000000002d862a3: pop    %rax
  0x0000000002d862a4: jne    0x0000000002d862b4
  0x0000000002d862aa: jmpq   0x0000000002d85fe2
  0x0000000002d862af: mov    $0xa535d00,%eax
  0x0000000002d862b4: callq  0x0000000002d71d20  ; OopMap{off=1081}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002d862b9: jmpq   0x0000000002d85fd8
  0x0000000002d862be: callq  0x0000000002cdff40  ; OopMap{rax=Oop off=1091}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002d862c3: mov    0x0(%rax),%eax
  0x0000000002d862c9: mov    $0x6050b00,%eax
  0x0000000002d862ce: callq  0x0000000002d725a0  ; OopMap{rax=Oop off=1107}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002d862d3: jmpq   0x0000000002d85fe8
  0x0000000002d862d8: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002d862e2: push   %rax
  0x0000000002d862e3: push   %rbx
  0x0000000002d862e4: mov    0x48(%rax),%rbx
  0x0000000002d862e8: push   %rdi
  0x0000000002d862e9: push   %rsi
  0x0000000002d862ea: push   %rdx
  0x0000000002d862eb: push   %rcx
  0x0000000002d862ec: push   %r8
  0x0000000002d862ee: push   %r9
  0x0000000002d862f0: push   %r10
  0x0000000002d862f2: mov    %rsp,%r10
  0x0000000002d862f5: and    $0xfffffffffffffff0,%rsp
  0x0000000002d862f9: push   %r10
  0x0000000002d862fb: push   %r11
  0x0000000002d862fd: mov    $0x7,%ecx
  0x0000000002d86302: movabs $0x7ffddc7c5e40,%r10  ;   {runtime_call}
  0x0000000002d8630c: callq  *%r10
  0x0000000002d8630f: pop    %r11
  0x0000000002d86311: pop    %rsp
  0x0000000002d86312: pop    %r10
  0x0000000002d86314: pop    %r9
  0x0000000002d86316: pop    %r8
  0x0000000002d86318: pop    %rcx
  0x0000000002d86319: pop    %rdx
  0x0000000002d8631a: pop    %rsi
  0x0000000002d8631b: pop    %rdi
  0x0000000002d8631c: cmp    0x118(%rbx),%rax
  0x0000000002d86323: pop    %rbx
  0x0000000002d86324: pop    %rax
  0x0000000002d86325: jne    0x0000000002d86335
  0x0000000002d8632b: jmpq   0x0000000002d8600a
  0x0000000002d86330: mov    $0xa535d00,%eax
  0x0000000002d86335: callq  0x0000000002d71d20  ; OopMap{off=1210}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002d8633a: jmpq   0x0000000002d86000
  0x0000000002d8633f: callq  0x0000000002cdff40  ; OopMap{rax=Oop off=1220}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002d86344: mov    0x0(%rax),%eax
  0x0000000002d8634a: mov    $0x6050b00,%eax
  0x0000000002d8634f: callq  0x0000000002d725a0  ; OopMap{rax=Oop off=1236}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002d86354: jmpq   0x0000000002d86010
  0x0000000002d86359: nop
  0x0000000002d8635a: nop
  0x0000000002d8635b: mov    0x2a8(%r15),%rax
  0x0000000002d86362: movabs $0x0,%r10
  0x0000000002d8636c: mov    %r10,0x2a8(%r15)
  0x0000000002d86373: movabs $0x0,%r10
  0x0000000002d8637d: mov    %r10,0x2b0(%r15)
  0x0000000002d86384: add    $0x30,%rsp
  0x0000000002d86388: pop    %rbp
  0x0000000002d86389: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d8638e: hlt    
  0x0000000002d8638f: hlt    
  0x0000000002d86390: hlt    
  0x0000000002d86391: hlt    
  0x0000000002d86392: hlt    
  0x0000000002d86393: hlt    
  0x0000000002d86394: hlt    
  0x0000000002d86395: hlt    
  0x0000000002d86396: hlt    
  0x0000000002d86397: hlt    
  0x0000000002d86398: hlt    
  0x0000000002d86399: hlt    
  0x0000000002d8639a: hlt    
  0x0000000002d8639b: hlt    
  0x0000000002d8639c: hlt    
  0x0000000002d8639d: hlt    
  0x0000000002d8639e: hlt    
  0x0000000002d8639f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d863a0: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d863a5: mov    %rsp,-0x28(%rsp)
  0x0000000002d863aa: sub    $0x80,%rsp
  0x0000000002d863b1: mov    %rax,0x78(%rsp)
  0x0000000002d863b6: mov    %rcx,0x70(%rsp)
  0x0000000002d863bb: mov    %rdx,0x68(%rsp)
  0x0000000002d863c0: mov    %rbx,0x60(%rsp)
  0x0000000002d863c5: mov    %rbp,0x50(%rsp)
  0x0000000002d863ca: mov    %rsi,0x48(%rsp)
  0x0000000002d863cf: mov    %rdi,0x40(%rsp)
  0x0000000002d863d4: mov    %r8,0x38(%rsp)
  0x0000000002d863d9: mov    %r9,0x30(%rsp)
  0x0000000002d863de: mov    %r10,0x28(%rsp)
  0x0000000002d863e3: mov    %r11,0x20(%rsp)
  0x0000000002d863e8: mov    %r12,0x18(%rsp)
  0x0000000002d863ed: mov    %r13,0x10(%rsp)
  0x0000000002d863f2: mov    %r14,0x8(%rsp)
  0x0000000002d863f7: mov    %r15,(%rsp)
  0x0000000002d863fb: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d86405: movabs $0x2d863a5,%rdx    ;   {internal_word}
  0x0000000002d8640f: mov    %rsp,%r8
  0x0000000002d86412: and    $0xfffffffffffffff0,%rsp
  0x0000000002d86416: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d8641b: hlt    
[Deopt Handler Code]
  0x0000000002d8641c: movabs $0x2d8641c,%r10    ;   {section_word}
  0x0000000002d86426: push   %r10
  0x0000000002d86428: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d8642d: hlt    
  0x0000000002d8642e: hlt    
  0x0000000002d8642f: hlt    
<nmethod compile_id='24' compiler='C1' level='3' entry='0x0000000002d85e80' size='2680' address='0x0000000002d85cd0' relocation_offset='288' insts_offset='432' stub_offset='1744' scopes_data_offset='1896' scopes_pcs_offset='2040' dependencies_offset='2616' nul_chk_table_offset='2624' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='3604' iicount='3604' stamp='6.058'/>
Decoding compiled method 0x0000000002d86990:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002d86ae0: mov    %eax,-0x6000(%rsp)
  0x0000000002d86ae7: push   %rbp
  0x0000000002d86ae8: sub    $0x30,%rsp
  0x0000000002d86aec: movabs $0x195628e0,%rax   ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d86af6: mov    0xdc(%rax),%esi
  0x0000000002d86afc: add    $0x8,%esi
  0x0000000002d86aff: mov    %esi,0xdc(%rax)
  0x0000000002d86b05: movabs $0x194656c8,%rax   ;   {metadata({method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d86b0f: and    $0x1ff8,%esi
  0x0000000002d86b15: cmp    $0x0,%esi
  0x0000000002d86b18: je     0x0000000002d86b7e  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x0000000002d86b1e: cmp    %r8d,%edx
  0x0000000002d86b21: movabs $0x195628e0,%rax   ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d86b2b: movabs $0x108,%rsi
  0x0000000002d86b35: jg     0x0000000002d86b45
  0x0000000002d86b3b: movabs $0x118,%rsi
  0x0000000002d86b45: mov    (%rax,%rsi,1),%rdi
  0x0000000002d86b49: lea    0x1(%rdi),%rdi
  0x0000000002d86b4d: mov    %rdi,(%rax,%rsi,1)
  0x0000000002d86b51: jg     0x0000000002d86b6c  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x0000000002d86b57: movabs $0x195628e0,%rax   ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d86b61: incl   0x128(%rax)
  0x0000000002d86b67: jmpq   0x0000000002d86b6f  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x0000000002d86b6c: mov    %r8,%rdx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x0000000002d86b6f: mov    %rdx,%rax
  0x0000000002d86b72: add    $0x30,%rsp
  0x0000000002d86b76: pop    %rbp
  0x0000000002d86b77: test   %eax,-0x3f6a7d(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d86b7d: retq   
  0x0000000002d86b7e: mov    %rax,0x8(%rsp)
  0x0000000002d86b83: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d86b8b: callq  0x0000000002d710e0  ; OopMap{off=176}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x0000000002d86b90: jmp    0x0000000002d86b1e
  0x0000000002d86b92: nop
  0x0000000002d86b93: nop
  0x0000000002d86b94: mov    0x2a8(%r15),%rax
  0x0000000002d86b9b: movabs $0x0,%r10
  0x0000000002d86ba5: mov    %r10,0x2a8(%r15)
  0x0000000002d86bac: movabs $0x0,%r10
  0x0000000002d86bb6: mov    %r10,0x2b0(%r15)
  0x0000000002d86bbd: add    $0x30,%rsp
  0x0000000002d86bc1: pop    %rbp
  0x0000000002d86bc2: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d86bc7: hlt    
  0x0000000002d86bc8: hlt    
  0x0000000002d86bc9: hlt    
  0x0000000002d86bca: hlt    
  0x0000000002d86bcb: hlt    
  0x0000000002d86bcc: hlt    
  0x0000000002d86bcd: hlt    
  0x0000000002d86bce: hlt    
  0x0000000002d86bcf: hlt    
  0x0000000002d86bd0: hlt    
  0x0000000002d86bd1: hlt    
  0x0000000002d86bd2: hlt    
  0x0000000002d86bd3: hlt    
  0x0000000002d86bd4: hlt    
  0x0000000002d86bd5: hlt    
  0x0000000002d86bd6: hlt    
  0x0000000002d86bd7: hlt    
  0x0000000002d86bd8: hlt    
  0x0000000002d86bd9: hlt    
  0x0000000002d86bda: hlt    
  0x0000000002d86bdb: hlt    
  0x0000000002d86bdc: hlt    
  0x0000000002d86bdd: hlt    
  0x0000000002d86bde: hlt    
  0x0000000002d86bdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d86be0: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d86be5: mov    %rsp,-0x28(%rsp)
  0x0000000002d86bea: sub    $0x80,%rsp
  0x0000000002d86bf1: mov    %rax,0x78(%rsp)
  0x0000000002d86bf6: mov    %rcx,0x70(%rsp)
  0x0000000002d86bfb: mov    %rdx,0x68(%rsp)
  0x0000000002d86c00: mov    %rbx,0x60(%rsp)
  0x0000000002d86c05: mov    %rbp,0x50(%rsp)
  0x0000000002d86c0a: mov    %rsi,0x48(%rsp)
  0x0000000002d86c0f: mov    %rdi,0x40(%rsp)
  0x0000000002d86c14: mov    %r8,0x38(%rsp)
  0x0000000002d86c19: mov    %r9,0x30(%rsp)
  0x0000000002d86c1e: mov    %r10,0x28(%rsp)
  0x0000000002d86c23: mov    %r11,0x20(%rsp)
  0x0000000002d86c28: mov    %r12,0x18(%rsp)
  0x0000000002d86c2d: mov    %r13,0x10(%rsp)
  0x0000000002d86c32: mov    %r14,0x8(%rsp)
  0x0000000002d86c37: mov    %r15,(%rsp)
  0x0000000002d86c3b: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d86c45: movabs $0x2d86be5,%rdx    ;   {internal_word}
  0x0000000002d86c4f: mov    %rsp,%r8
  0x0000000002d86c52: and    $0xfffffffffffffff0,%rsp
  0x0000000002d86c56: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d86c5b: hlt    
[Deopt Handler Code]
  0x0000000002d86c5c: movabs $0x2d86c5c,%r10    ;   {section_word}
  0x0000000002d86c66: push   %r10
  0x0000000002d86c68: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d86c6d: hlt    
  0x0000000002d86c6e: hlt    
  0x0000000002d86c6f: hlt    
<nmethod compile_id='23' compiler='C1' level='3' entry='0x0000000002d86ae0' size='904' address='0x0000000002d86990' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' method='java/lang/Math min (II)I' bytes='11' count='1833' iicount='1833' stamp='6.063'/>
Decoding compiled method 0x0000000002d86f90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001948a3f0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000002d871a0: mov    %eax,-0x6000(%rsp)
  0x0000000002d871a7: push   %rbp
  0x0000000002d871a8: sub    $0xa0,%rsp
  0x0000000002d871af: mov    %rdx,%r11
  0x0000000002d871b2: movabs $0x19599388,%rbx   ;   {metadata(method data for {method} {0x000000001948a3f0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d871bc: mov    0xdc(%rbx),%edx
  0x0000000002d871c2: add    $0x8,%edx
  0x0000000002d871c5: mov    %edx,0xdc(%rbx)
  0x0000000002d871cb: movabs $0x1948a3e8,%rbx   ;   {metadata({method} {0x000000001948a3f0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d871d5: and    $0x1ff8,%edx
  0x0000000002d871db: cmp    $0x0,%edx
  0x0000000002d871de: je     0x0000000002d87a49  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x0000000002d871e4: mov    %r9,%r13
  0x0000000002d871e7: sub    %r8d,%r13d
  0x0000000002d871ea: cmp    $0x0,%r13d
  0x0000000002d871ee: movabs $0x19599388,%rbx   ;   {metadata(method data for {method} {0x000000001948a3f0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d871f8: movabs $0x108,%rdx
  0x0000000002d87202: jge    0x0000000002d87212
  0x0000000002d87208: movabs $0x118,%rdx
  0x0000000002d87212: mov    (%rbx,%rdx,1),%rsi
  0x0000000002d87216: lea    0x1(%rsi),%rsi
  0x0000000002d8721a: mov    %rsi,(%rbx,%rdx,1)
  0x0000000002d8721e: jl     0x0000000002d873e6  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000002d87224: mov    %r13,%rbx
  0x0000000002d87227: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002d87231: movslq %ebx,%rbx
  0x0000000002d87234: mov    %rbx,%rdi
  0x0000000002d87237: cmp    $0xffffff,%rbx
  0x0000000002d8723e: ja     0x0000000002d87a60
  0x0000000002d87244: movabs $0x17,%rsi
  0x0000000002d8724e: lea    (%rsi,%rbx,2),%rsi
  0x0000000002d87252: and    $0xfffffffffffffff8,%rsi
  0x0000000002d87256: mov    0x60(%r15),%rax
  0x0000000002d8725a: lea    (%rax,%rsi,1),%rsi
  0x0000000002d8725e: cmp    0x70(%r15),%rsi
  0x0000000002d87262: ja     0x0000000002d87a60
  0x0000000002d87268: mov    %rsi,0x60(%r15)
  0x0000000002d8726c: sub    %rax,%rsi
  0x0000000002d8726f: movq   $0x1,(%rax)
  0x0000000002d87276: mov    %rdx,%rcx
  0x0000000002d87279: shr    $0x3,%rcx
  0x0000000002d8727d: mov    %ecx,0x8(%rax)
  0x0000000002d87280: mov    %ebx,0xc(%rax)
  0x0000000002d87283: sub    $0x10,%rsi
  0x0000000002d87287: je     0x0000000002d8729e
  0x0000000002d8728d: xor    %rbx,%rbx
  0x0000000002d87290: shr    $0x3,%rsi
  0x0000000002d87294: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002d87299: dec    %rsi
  0x0000000002d8729c: jne    0x0000000002d87294  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000002d8729e: mov    0xc(%r11),%edx     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x0000000002d87a6a
  0x0000000002d872a2: sub    %r8d,%edx
  0x0000000002d872a5: movabs $0x19599388,%r9    ;   {metadata(method data for {method} {0x000000001948a3f0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d872af: addq   $0x1,0x208(%r9)
  0x0000000002d872b7: movabs $0x195628e0,%r9    ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d872c1: mov    0xdc(%r9),%edi
  0x0000000002d872c8: add    $0x8,%edi
  0x0000000002d872cb: mov    %edi,0xdc(%r9)
  0x0000000002d872d2: movabs $0x194656c8,%r9    ;   {metadata({method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d872dc: and    $0x7ffff8,%edi
  0x0000000002d872e2: cmp    $0x0,%edi
  0x0000000002d872e5: je     0x0000000002d87a6f
  0x0000000002d872eb: cmp    %r13d,%edx
  0x0000000002d872ee: movabs $0x195628e0,%r9    ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d872f8: movabs $0x108,%rdi
  0x0000000002d87302: jg     0x0000000002d87312
  0x0000000002d87308: movabs $0x118,%rdi
  0x0000000002d87312: mov    (%r9,%rdi,1),%rsi
  0x0000000002d87316: lea    0x1(%rsi),%rsi
  0x0000000002d8731a: mov    %rsi,(%r9,%rdi,1)
  0x0000000002d8731e: jg     0x0000000002d8733d  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002d87324: movabs $0x195628e0,%r9    ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d8732e: incl   0x128(%r9)
  0x0000000002d87335: mov    %rdx,%rsi
  0x0000000002d87338: jmpq   0x0000000002d87340  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002d8733d: mov    %r13,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002d87340: movabs $0x19599388,%rdx   ;   {metadata(method data for {method} {0x000000001948a3f0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d8734a: addq   $0x1,0x218(%rdx)
  0x0000000002d87352: mov    %r11,%rdx
  0x0000000002d87355: mov    %rax,%r9
  0x0000000002d87358: mov    $0x0,%edi
  0x0000000002d8735d: mov    %rax,0x70(%rsp)
  0x0000000002d87362: test   %r8d,%r8d
  0x0000000002d87365: jl     0x0000000002d87a86
  0x0000000002d8736b: lea    (%r8,%rsi,1),%rcx
  0x0000000002d8736f: cmp    0xc(%rdx),%ecx
  0x0000000002d87372: ja     0x0000000002d87a86
  0x0000000002d87378: lea    (%rdi,%rsi,1),%rcx
  0x0000000002d8737c: cmp    0xc(%r9),%ecx
  0x0000000002d87380: ja     0x0000000002d87a86
  0x0000000002d87386: test   %esi,%esi
  0x0000000002d87388: jl     0x0000000002d87a86
  0x0000000002d8738e: je     0x0000000002d873d2
  0x0000000002d87394: movslq %r8d,%r8
  0x0000000002d87397: movslq %edi,%rdi
  0x0000000002d8739a: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002d8739f: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002d873a4: mov    %rsi,%r8
  0x0000000002d873a7: sub    $0x20,%rsp
  0x0000000002d873ab: test   $0xf,%esp
  0x0000000002d873b1: je     0x0000000002d873c9
  0x0000000002d873b7: sub    $0x8,%rsp
  0x0000000002d873bb: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002d873c0: add    $0x8,%rsp
  0x0000000002d873c4: jmpq   0x0000000002d873ce
  0x0000000002d873c9: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002d873ce: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000002d873d2: mov    0x70(%rsp),%rax
  0x0000000002d873d7: add    $0xa0,%rsp
  0x0000000002d873de: pop    %rbp
  0x0000000002d873df: test   %eax,-0x3f72e5(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d873e5: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x0000000002d873e6: mov    %r9d,0x80(%rsp)
  0x0000000002d873ee: xchg   %ax,%ax
  0x0000000002d873f0: jmpq   0x0000000002d87aa0  ;   {no_reloc}
  0x0000000002d873f5: add    %al,(%rax)
  0x0000000002d873f7: add    %al,(%rax)
  0x0000000002d873f9: add    %cl,-0x75(%rcx)
  0x0000000002d873fc: rex.RXB (bad) 
  0x0000000002d873fe: lea    0x20(%rax),%rdi
  0x0000000002d87402: cmp    0x70(%r15),%rdi
  0x0000000002d87406: ja     0x0000000002d87aaa
  0x0000000002d8740c: mov    %rdi,0x60(%r15)
  0x0000000002d87410: mov    0xa8(%rdx),%rcx
  0x0000000002d87417: mov    %rcx,(%rax)
  0x0000000002d8741a: mov    %rdx,%rcx
  0x0000000002d8741d: shr    $0x3,%rcx
  0x0000000002d87421: mov    %ecx,0x8(%rax)
  0x0000000002d87424: xor    %rcx,%rcx
  0x0000000002d87427: mov    %ecx,0xc(%rax)
  0x0000000002d8742a: xor    %rcx,%rcx
  0x0000000002d8742d: mov    %rcx,0x10(%rax)
  0x0000000002d87431: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x0000000002d87435: data16 xchg %ax,%ax
  0x0000000002d87438: jmpq   0x0000000002d87ac6  ;   {no_reloc}
  0x0000000002d8743d: add    %al,(%rax)
  0x0000000002d8743f: add    %al,(%rax)
  0x0000000002d87441: add    %cl,-0x77(%rax)
  0x0000000002d87444: test   %ah,(%rax,%rcx,4)
  0x0000000002d87447: add    %al,(%rax)
  0x0000000002d87449: add    %cl,-0x75(%rcx)
  0x0000000002d8744c: rex.RXB (bad) 
  0x0000000002d8744e: lea    0x18(%rax),%rdi
  0x0000000002d87452: cmp    0x70(%r15),%rdi
  0x0000000002d87456: ja     0x0000000002d87ad0
  0x0000000002d8745c: mov    %rdi,0x60(%r15)
  0x0000000002d87460: mov    0xa8(%rdx),%rcx
  0x0000000002d87467: mov    %rcx,(%rax)
  0x0000000002d8746a: mov    %rdx,%rcx
  0x0000000002d8746d: shr    $0x3,%rcx
  0x0000000002d87471: mov    %ecx,0x8(%rax)
  0x0000000002d87474: xor    %rcx,%rcx
  0x0000000002d87477: mov    %ecx,0xc(%rax)
  0x0000000002d8747a: xor    %rcx,%rcx
  0x0000000002d8747d: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x0000000002d87481: mov    %rax,%rbx
  0x0000000002d87484: movabs $0x19599388,%rdx   ;   {metadata(method data for {method} {0x000000001948a3f0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d8748e: addq   $0x1,0x128(%rdx)
  0x0000000002d87496: movabs $0x196471b8,%rbx   ;   {metadata(method data for {method} {0x00000000193e8650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d874a0: mov    0xdc(%rbx),%edx
  0x0000000002d874a6: add    $0x8,%edx
  0x0000000002d874a9: mov    %edx,0xdc(%rbx)
  0x0000000002d874af: movabs $0x193e8648,%rbx   ;   {metadata({method} {0x00000000193e8650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d874b9: and    $0x7ffff8,%edx
  0x0000000002d874bf: cmp    $0x0,%edx
  0x0000000002d874c2: je     0x0000000002d87add
  0x0000000002d874c8: mov    %rax,%rbx
  0x0000000002d874cb: movabs $0x196471b8,%rdx   ;   {metadata(method data for {method} {0x00000000193e8650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d874d5: addq   $0x1,0x108(%rdx)
  0x0000000002d874dd: movabs $0x19647308,%rbx   ;   {metadata(method data for {method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d874e7: mov    0xdc(%rbx),%edx
  0x0000000002d874ed: add    $0x8,%edx
  0x0000000002d874f0: mov    %edx,0xdc(%rbx)
  0x0000000002d874f6: movabs $0x193e4978,%rbx   ;   {metadata({method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d87500: and    $0x7ffff8,%edx
  0x0000000002d87506: cmp    $0x0,%edx
  0x0000000002d87509: je     0x0000000002d87af4
  0x0000000002d8750f: mov    %rax,%rbx
  0x0000000002d87512: movabs $0x19647308,%rdx   ;   {metadata(method data for {method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8751c: addq   $0x1,0x108(%rdx)
  0x0000000002d87524: movabs $0x194a47d8,%rbx   ;   {metadata(method data for {method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d8752e: mov    0xdc(%rbx),%edx
  0x0000000002d87534: add    $0x8,%edx
  0x0000000002d87537: mov    %edx,0xdc(%rbx)
  0x0000000002d8753d: movabs $0x19370480,%rbx   ;   {metadata({method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d87547: and    $0x7ffff8,%edx
  0x0000000002d8754d: cmp    $0x0,%edx
  0x0000000002d87550: je     0x0000000002d87b0b
  0x0000000002d87556: mov    $0x10,%ebx
  0x0000000002d8755b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002d87565: mov    %rax,%r13
  0x0000000002d87568: movslq %ebx,%rbx
  0x0000000002d8756b: mov    %rbx,%rdi
  0x0000000002d8756e: cmp    $0xffffff,%rbx
  0x0000000002d87575: ja     0x0000000002d87b22
  0x0000000002d8757b: movabs $0x17,%rsi
  0x0000000002d87585: lea    (%rsi,%rbx,2),%rsi
  0x0000000002d87589: and    $0xfffffffffffffff8,%rsi
  0x0000000002d8758d: mov    0x60(%r15),%rax
  0x0000000002d87591: lea    (%rax,%rsi,1),%rsi
  0x0000000002d87595: cmp    0x70(%r15),%rsi
  0x0000000002d87599: ja     0x0000000002d87b22
  0x0000000002d8759f: mov    %rsi,0x60(%r15)
  0x0000000002d875a3: sub    %rax,%rsi
  0x0000000002d875a6: movq   $0x1,(%rax)
  0x0000000002d875ad: mov    %rdx,%rcx
  0x0000000002d875b0: shr    $0x3,%rcx
  0x0000000002d875b4: mov    %ecx,0x8(%rax)
  0x0000000002d875b7: mov    %ebx,0xc(%rax)
  0x0000000002d875ba: sub    $0x10,%rsi
  0x0000000002d875be: je     0x0000000002d875d5
  0x0000000002d875c4: xor    %rbx,%rbx
  0x0000000002d875c7: shr    $0x3,%rsi
  0x0000000002d875cb: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002d875d0: dec    %rsi
  0x0000000002d875d3: jne    0x0000000002d875cb  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002d875d5: mov    %rax,%r10
  0x0000000002d875d8: shr    $0x3,%r10
  0x0000000002d875dc: mov    %r10d,0x10(%r13)
  0x0000000002d875e0: mov    %r13,%rax
  0x0000000002d875e3: shr    $0x9,%rax
  0x0000000002d875e7: movabs $0xe824000,%rdx
  0x0000000002d875f1: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002d875f5: mov    %r13,%rax
  0x0000000002d875f8: movabs $0x19599388,%rdx   ;   {metadata(method data for {method} {0x000000001948a3f0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d87602: mov    0x8(%rax),%eax
  0x0000000002d87605: shl    $0x3,%rax
  0x0000000002d87609: cmp    0x140(%rdx),%rax
  0x0000000002d87610: jne    0x0000000002d8761f
  0x0000000002d87612: addq   $0x1,0x148(%rdx)
  0x0000000002d8761a: jmpq   0x0000000002d87685
  0x0000000002d8761f: cmp    0x150(%rdx),%rax
  0x0000000002d87626: jne    0x0000000002d87635
  0x0000000002d87628: addq   $0x1,0x158(%rdx)
  0x0000000002d87630: jmpq   0x0000000002d87685
  0x0000000002d87635: cmpq   $0x0,0x140(%rdx)
  0x0000000002d87640: jne    0x0000000002d87659
  0x0000000002d87642: mov    %rax,0x140(%rdx)
  0x0000000002d87649: movq   $0x1,0x148(%rdx)
  0x0000000002d87654: jmpq   0x0000000002d87685
  0x0000000002d87659: cmpq   $0x0,0x150(%rdx)
  0x0000000002d87664: jne    0x0000000002d8767d
  0x0000000002d87666: mov    %rax,0x150(%rdx)
  0x0000000002d8766d: movq   $0x1,0x158(%rdx)
  0x0000000002d87678: jmpq   0x0000000002d87685
  0x0000000002d8767d: addq   $0x1,0x138(%rdx)
  0x0000000002d87685: movabs $0x19647460,%rdx   ;   {metadata(method data for {method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8768f: mov    0xdc(%rdx),%esi
  0x0000000002d87695: add    $0x8,%esi
  0x0000000002d87698: mov    %esi,0xdc(%rdx)
  0x0000000002d8769e: movabs $0x193e8e20,%rdx   ;   {metadata({method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d876a8: and    $0x7ffff8,%esi
  0x0000000002d876ae: cmp    $0x0,%esi
  0x0000000002d876b1: je     0x0000000002d87b2c
  0x0000000002d876b7: mov    %r13,%rax
  0x0000000002d876ba: movabs $0x19647460,%rdx   ;   {metadata(method data for {method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d876c4: addq   $0x1,0x108(%rdx)
  0x0000000002d876cc: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x0000000002d876cf: mov    %r13,0x78(%rsp)
  0x0000000002d876d4: nop
  0x0000000002d876d5: nop
  0x0000000002d876d6: nop
  0x0000000002d876d7: callq  0x0000000002cb61a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002d876dc: mov    0x78(%rsp),%rax
  0x0000000002d876e1: movabs $0x19599388,%r8    ;   {metadata(method data for {method} {0x000000001948a3f0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d876eb: mov    0x8(%rax),%eax
  0x0000000002d876ee: shl    $0x3,%rax
  0x0000000002d876f2: cmp    0x170(%r8),%rax
  0x0000000002d876f9: jne    0x0000000002d87708
  0x0000000002d876fb: addq   $0x1,0x178(%r8)
  0x0000000002d87703: jmpq   0x0000000002d8776e
  0x0000000002d87708: cmp    0x180(%r8),%rax
  0x0000000002d8770f: jne    0x0000000002d8771e
  0x0000000002d87711: addq   $0x1,0x188(%r8)
  0x0000000002d87719: jmpq   0x0000000002d8776e
  0x0000000002d8771e: cmpq   $0x0,0x170(%r8)
  0x0000000002d87729: jne    0x0000000002d87742
  0x0000000002d8772b: mov    %rax,0x170(%r8)
  0x0000000002d87732: movq   $0x1,0x178(%r8)
  0x0000000002d8773d: jmpq   0x0000000002d8776e
  0x0000000002d87742: cmpq   $0x0,0x180(%r8)
  0x0000000002d8774d: jne    0x0000000002d87766
  0x0000000002d8774f: mov    %rax,0x180(%r8)
  0x0000000002d87756: movq   $0x1,0x188(%r8)
  0x0000000002d87761: jmpq   0x0000000002d8776e
  0x0000000002d87766: addq   $0x1,0x168(%r8)
  0x0000000002d8776e: movabs $0x195a93d8,%r8    ;   {metadata(method data for {method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d87778: mov    0xdc(%r8),%edx
  0x0000000002d8777f: add    $0x8,%edx
  0x0000000002d87782: mov    %edx,0xdc(%r8)
  0x0000000002d87789: movabs $0x193e8960,%r8    ;   {metadata({method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d87793: and    $0x7ffff8,%edx
  0x0000000002d87799: cmp    $0x0,%edx
  0x0000000002d8779c: je     0x0000000002d87b43
  0x0000000002d877a2: mov    0x78(%rsp),%rax
  0x0000000002d877a7: movabs $0x195a93d8,%r8    ;   {metadata(method data for {method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d877b1: addq   $0x1,0x108(%r8)
  0x0000000002d877b9: movabs $0x780bd98b8,%r8   ;   {oop(&quot; &gt; &quot;)}
  0x0000000002d877c3: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x0000000002d877c8: nop
  0x0000000002d877c9: nop
  0x0000000002d877ca: nop
  0x0000000002d877cb: nop
  0x0000000002d877cc: nop
  0x0000000002d877cd: nop
  0x0000000002d877ce: nop
  0x0000000002d877cf: callq  0x0000000002cb61a0  ; OopMap{[120]=Oop [136]=Oop off=1588}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002d877d4: mov    0x78(%rsp),%rax
  0x0000000002d877d9: movabs $0x19599388,%r8    ;   {metadata(method data for {method} {0x000000001948a3f0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d877e3: mov    0x8(%rax),%eax
  0x0000000002d877e6: shl    $0x3,%rax
  0x0000000002d877ea: cmp    0x1a0(%r8),%rax
  0x0000000002d877f1: jne    0x0000000002d87800
  0x0000000002d877f3: addq   $0x1,0x1a8(%r8)
  0x0000000002d877fb: jmpq   0x0000000002d87866
  0x0000000002d87800: cmp    0x1b0(%r8),%rax
  0x0000000002d87807: jne    0x0000000002d87816
  0x0000000002d87809: addq   $0x1,0x1b8(%r8)
  0x0000000002d87811: jmpq   0x0000000002d87866
  0x0000000002d87816: cmpq   $0x0,0x1a0(%r8)
  0x0000000002d87821: jne    0x0000000002d8783a
  0x0000000002d87823: mov    %rax,0x1a0(%r8)
  0x0000000002d8782a: movq   $0x1,0x1a8(%r8)
  0x0000000002d87835: jmpq   0x0000000002d87866
  0x0000000002d8783a: cmpq   $0x0,0x1b0(%r8)
  0x0000000002d87845: jne    0x0000000002d8785e
  0x0000000002d87847: mov    %rax,0x1b0(%r8)
  0x0000000002d8784e: movq   $0x1,0x1b8(%r8)
  0x0000000002d87859: jmpq   0x0000000002d87866
  0x0000000002d8785e: addq   $0x1,0x198(%r8)
  0x0000000002d87866: movabs $0x19647460,%r8    ;   {metadata(method data for {method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d87870: mov    0xdc(%r8),%edx
  0x0000000002d87877: add    $0x8,%edx
  0x0000000002d8787a: mov    %edx,0xdc(%r8)
  0x0000000002d87881: movabs $0x193e8e20,%r8    ;   {metadata({method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8788b: and    $0x7ffff8,%edx
  0x0000000002d87891: cmp    $0x0,%edx
  0x0000000002d87894: je     0x0000000002d87b5a
  0x0000000002d8789a: mov    0x78(%rsp),%rax
  0x0000000002d8789f: movabs $0x19647460,%r8    ;   {metadata(method data for {method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d878a9: addq   $0x1,0x108(%r8)
  0x0000000002d878b1: mov    0x80(%rsp),%r8d
  0x0000000002d878b9: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x0000000002d878be: nop
  0x0000000002d878bf: callq  0x0000000002cb61a0  ; OopMap{[120]=Oop [136]=Oop off=1828}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002d878c4: mov    0x78(%rsp),%rax
  0x0000000002d878c9: movabs $0x19599388,%rdx   ;   {metadata(method data for {method} {0x000000001948a3f0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d878d3: mov    0x8(%rax),%eax
  0x0000000002d878d6: shl    $0x3,%rax
  0x0000000002d878da: cmp    0x1d0(%rdx),%rax
  0x0000000002d878e1: jne    0x0000000002d878f0
  0x0000000002d878e3: addq   $0x1,0x1d8(%rdx)
  0x0000000002d878eb: jmpq   0x0000000002d87956
  0x0000000002d878f0: cmp    0x1e0(%rdx),%rax
  0x0000000002d878f7: jne    0x0000000002d87906
  0x0000000002d878f9: addq   $0x1,0x1e8(%rdx)
  0x0000000002d87901: jmpq   0x0000000002d87956
  0x0000000002d87906: cmpq   $0x0,0x1d0(%rdx)
  0x0000000002d87911: jne    0x0000000002d8792a
  0x0000000002d87913: mov    %rax,0x1d0(%rdx)
  0x0000000002d8791a: movq   $0x1,0x1d8(%rdx)
  0x0000000002d87925: jmpq   0x0000000002d87956
  0x0000000002d8792a: cmpq   $0x0,0x1e0(%rdx)
  0x0000000002d87935: jne    0x0000000002d8794e
  0x0000000002d87937: mov    %rax,0x1e0(%rdx)
  0x0000000002d8793e: movq   $0x1,0x1e8(%rdx)
  0x0000000002d87949: jmpq   0x0000000002d87956
  0x0000000002d8794e: addq   $0x1,0x1c8(%rdx)
  0x0000000002d87956: movabs $0x196477b0,%rdx   ;   {metadata(method data for {method} {0x00000000193e9d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d87960: mov    0xdc(%rdx),%esi
  0x0000000002d87966: add    $0x8,%esi
  0x0000000002d87969: mov    %esi,0xdc(%rdx)
  0x0000000002d8796f: movabs $0x193e9d10,%rdx   ;   {metadata({method} {0x00000000193e9d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d87979: and    $0x7ffff8,%esi
  0x0000000002d8797f: cmp    $0x0,%esi
  0x0000000002d87982: je     0x0000000002d87b71
  0x0000000002d87988: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002d87992: mov    0x60(%r15),%rax
  0x0000000002d87996: lea    0x18(%rax),%rdi
  0x0000000002d8799a: cmp    0x70(%r15),%rdi
  0x0000000002d8799e: ja     0x0000000002d87b88
  0x0000000002d879a4: mov    %rdi,0x60(%r15)
  0x0000000002d879a8: mov    0xa8(%rdx),%rcx
  0x0000000002d879af: mov    %rcx,(%rax)
  0x0000000002d879b2: mov    %rdx,%rcx
  0x0000000002d879b5: shr    $0x3,%rcx
  0x0000000002d879b9: mov    %ecx,0x8(%rax)
  0x0000000002d879bc: xor    %rcx,%rcx
  0x0000000002d879bf: mov    %ecx,0xc(%rax)
  0x0000000002d879c2: xor    %rcx,%rcx
  0x0000000002d879c5: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002d879c9: mov    0x78(%rsp),%r8
  0x0000000002d879ce: mov    0x10(%r8),%r9d
  0x0000000002d879d2: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002d879d6: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002d879da: mov    %rax,%r8
  0x0000000002d879dd: movabs $0x196477b0,%rdx   ;   {metadata(method data for {method} {0x00000000193e9d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d879e7: addq   $0x1,0x108(%rdx)
  0x0000000002d879ef: mov    %r9,%r8
  0x0000000002d879f2: mov    $0x0,%r9d
  0x0000000002d879f8: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002d879fb: mov    %rax,0x90(%rsp)
  0x0000000002d87a03: nop
  0x0000000002d87a04: nop
  0x0000000002d87a05: nop
  0x0000000002d87a06: nop
  0x0000000002d87a07: callq  0x0000000002cb61a0  ; OopMap{[136]=Oop [144]=Oop off=2156}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002d87a0c: mov    0x88(%rsp),%rax
  0x0000000002d87a14: movabs $0x19599388,%r8    ;   {metadata(method data for {method} {0x000000001948a3f0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d87a1e: addq   $0x1,0x1f8(%r8)
  0x0000000002d87a26: mov    0x90(%rsp),%r8
  0x0000000002d87a2e: mov    0x88(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x0000000002d87a36: nop
  0x0000000002d87a37: callq  0x0000000002cb61a0  ; OopMap{[136]=Oop off=2204}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002d87a3c: mov    0x88(%rsp),%rax
  0x0000000002d87a44: jmpq   0x0000000002d87bc0
  0x0000000002d87a49: mov    %rbx,0x8(%rsp)
  0x0000000002d87a4e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d87a56: callq  0x0000000002d710e0  ; OopMap{r11=Oop off=2235}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x0000000002d87a5b: jmpq   0x0000000002d871e4
  0x0000000002d87a60: callq  0x0000000002d6e600  ; OopMap{r11=Oop off=2245}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x0000000002d87a65: jmpq   0x0000000002d8729e
  0x0000000002d87a6a: callq  0x0000000002cdff40  ; OopMap{r11=Oop rax=Oop off=2255}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x0000000002d87a6f: mov    %r9,0x8(%rsp)
  0x0000000002d87a74: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d87a7c: callq  0x0000000002d710e0  ; OopMap{r11=Oop rax=Oop off=2273}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x0000000002d87a81: jmpq   0x0000000002d872eb
  0x0000000002d87a86: nop
  0x0000000002d87a87: callq  0x0000000002cb6620  ; OopMap{[112]=Oop off=2284}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x0000000002d87a8c: jmpq   0x0000000002d873d2
  0x0000000002d87a91: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d87a9b: mov    $0xa050f00,%eax
  0x0000000002d87aa0: callq  0x0000000002d72160  ; OopMap{off=2309}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000002d87aa5: jmpq   0x0000000002d873f0
  0x0000000002d87aaa: mov    %rdx,%rdx
  0x0000000002d87aad: callq  0x0000000002cdf600  ; OopMap{off=2322}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000002d87ab2: jmpq   0x0000000002d87435
  0x0000000002d87ab7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d87ac1: mov    $0xa050f00,%eax
  0x0000000002d87ac6: callq  0x0000000002d72160  ; OopMap{rax=Oop off=2347}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002d87acb: jmpq   0x0000000002d87438
  0x0000000002d87ad0: mov    %rdx,%rdx
  0x0000000002d87ad3: callq  0x0000000002cdf600  ; OopMap{[136]=Oop off=2360}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002d87ad8: jmpq   0x0000000002d87481
  0x0000000002d87add: mov    %rbx,0x8(%rsp)
  0x0000000002d87ae2: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d87aea: callq  0x0000000002d710e0  ; OopMap{[136]=Oop rax=Oop off=2383}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002d87aef: jmpq   0x0000000002d874c8
  0x0000000002d87af4: mov    %rbx,0x8(%rsp)
  0x0000000002d87af9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d87b01: callq  0x0000000002d710e0  ; OopMap{[136]=Oop rax=Oop off=2406}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002d87b06: jmpq   0x0000000002d8750f
  0x0000000002d87b0b: mov    %rbx,0x8(%rsp)
  0x0000000002d87b10: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d87b18: callq  0x0000000002d710e0  ; OopMap{[136]=Oop rax=Oop off=2429}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002d87b1d: jmpq   0x0000000002d87556
  0x0000000002d87b22: callq  0x0000000002d6e600  ; OopMap{[136]=Oop r13=Oop off=2439}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002d87b27: jmpq   0x0000000002d875d5
  0x0000000002d87b2c: mov    %rdx,0x8(%rsp)
  0x0000000002d87b31: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d87b39: callq  0x0000000002d710e0  ; OopMap{[136]=Oop r13=Oop off=2462}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x0000000002d87b3e: jmpq   0x0000000002d876b7
  0x0000000002d87b43: mov    %r8,0x8(%rsp)
  0x0000000002d87b48: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d87b50: callq  0x0000000002d710e0  ; OopMap{[120]=Oop [136]=Oop off=2485}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x0000000002d87b55: jmpq   0x0000000002d877a2
  0x0000000002d87b5a: mov    %r8,0x8(%rsp)
  0x0000000002d87b5f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d87b67: callq  0x0000000002d710e0  ; OopMap{[120]=Oop [136]=Oop off=2508}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x0000000002d87b6c: jmpq   0x0000000002d8789a
  0x0000000002d87b71: mov    %rdx,0x8(%rsp)
  0x0000000002d87b76: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d87b7e: callq  0x0000000002d710e0  ; OopMap{[120]=Oop [136]=Oop off=2531}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000002d87b83: jmpq   0x0000000002d87988
  0x0000000002d87b88: mov    %rdx,%rdx
  0x0000000002d87b8b: callq  0x0000000002cdf600  ; OopMap{[120]=Oop [136]=Oop off=2544}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000002d87b90: jmpq   0x0000000002d879c9
  0x0000000002d87b95: nop
  0x0000000002d87b96: nop
  0x0000000002d87b97: mov    0x2a8(%r15),%rax
  0x0000000002d87b9e: movabs $0x0,%r10
  0x0000000002d87ba8: mov    %r10,0x2a8(%r15)
  0x0000000002d87baf: movabs $0x0,%r10
  0x0000000002d87bb9: mov    %r10,0x2b0(%r15)
  0x0000000002d87bc0: add    $0xa0,%rsp
  0x0000000002d87bc7: pop    %rbp
  0x0000000002d87bc8: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d87bcd: hlt    
  0x0000000002d87bce: hlt    
  0x0000000002d87bcf: hlt    
  0x0000000002d87bd0: hlt    
  0x0000000002d87bd1: hlt    
  0x0000000002d87bd2: hlt    
  0x0000000002d87bd3: hlt    
  0x0000000002d87bd4: hlt    
  0x0000000002d87bd5: hlt    
  0x0000000002d87bd6: hlt    
  0x0000000002d87bd7: hlt    
  0x0000000002d87bd8: hlt    
  0x0000000002d87bd9: hlt    
  0x0000000002d87bda: hlt    
  0x0000000002d87bdb: hlt    
  0x0000000002d87bdc: hlt    
  0x0000000002d87bdd: hlt    
  0x0000000002d87bde: hlt    
  0x0000000002d87bdf: hlt    
[Stub Code]
  0x0000000002d87be0: nop                       ;   {no_reloc}
  0x0000000002d87be1: nop
  0x0000000002d87be2: nop
  0x0000000002d87be3: nop
  0x0000000002d87be4: nop
  0x0000000002d87be5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d87bef: jmpq   0x0000000002d87bef  ;   {runtime_call}
  0x0000000002d87bf4: nop
  0x0000000002d87bf5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d87bff: jmpq   0x0000000002d87bff  ;   {runtime_call}
  0x0000000002d87c04: nop
  0x0000000002d87c05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d87c0f: jmpq   0x0000000002d87c0f  ;   {runtime_call}
  0x0000000002d87c14: nop
  0x0000000002d87c15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d87c1f: jmpq   0x0000000002d87c1f  ;   {runtime_call}
  0x0000000002d87c24: nop
  0x0000000002d87c25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d87c2f: jmpq   0x0000000002d87c2f  ;   {runtime_call}
  0x0000000002d87c34: nop
  0x0000000002d87c35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d87c3f: jmpq   0x0000000002d87c3f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d87c44: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d87c49: mov    %rsp,-0x28(%rsp)
  0x0000000002d87c4e: sub    $0x80,%rsp
  0x0000000002d87c55: mov    %rax,0x78(%rsp)
  0x0000000002d87c5a: mov    %rcx,0x70(%rsp)
  0x0000000002d87c5f: mov    %rdx,0x68(%rsp)
  0x0000000002d87c64: mov    %rbx,0x60(%rsp)
  0x0000000002d87c69: mov    %rbp,0x50(%rsp)
  0x0000000002d87c6e: mov    %rsi,0x48(%rsp)
  0x0000000002d87c73: mov    %rdi,0x40(%rsp)
  0x0000000002d87c78: mov    %r8,0x38(%rsp)
  0x0000000002d87c7d: mov    %r9,0x30(%rsp)
  0x0000000002d87c82: mov    %r10,0x28(%rsp)
  0x0000000002d87c87: mov    %r11,0x20(%rsp)
  0x0000000002d87c8c: mov    %r12,0x18(%rsp)
  0x0000000002d87c91: mov    %r13,0x10(%rsp)
  0x0000000002d87c96: mov    %r14,0x8(%rsp)
  0x0000000002d87c9b: mov    %r15,(%rsp)
  0x0000000002d87c9f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d87ca9: movabs $0x2d87c49,%rdx    ;   {internal_word}
  0x0000000002d87cb3: mov    %rsp,%r8
  0x0000000002d87cb6: and    $0xfffffffffffffff0,%rsp
  0x0000000002d87cba: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d87cbf: hlt    
[Deopt Handler Code]
  0x0000000002d87cc0: movabs $0x2d87cc0,%r10    ;   {section_word}
  0x0000000002d87cca: push   %r10
  0x0000000002d87ccc: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d87cd1: hlt    
  0x0000000002d87cd2: hlt    
  0x0000000002d87cd3: hlt    
  0x0000000002d87cd4: hlt    
  0x0000000002d87cd5: hlt    
  0x0000000002d87cd6: hlt    
  0x0000000002d87cd7: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x0000000002d871a0' size='4856' address='0x0000000002d86f90' relocation_offset='288' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='917' iicount='917' stamp='6.175'/>
<writer thread='5912'/>
<task_queued compile_id='27' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='3968' iicount='3968' level='3' stamp='6.175' comment='tiered' hot_count='3968'/>
<task_queued compile_id='28' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='6528' iicount='6528' stamp='6.175' comment='tiered' hot_count='6528'/>
<writer thread='3656'/>
<task_queued compile_id='29' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='640' iicount='640' level='3' stamp='6.175' comment='tiered' hot_count='640'/>
<writer thread='5912'/>
<task_queued compile_id='30' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='3584' iicount='3584' level='3' stamp='6.175' comment='tiered' hot_count='3584'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d884d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000194ed378} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x0000000002d88620: mov    0x8(%rdx),%r10d
  0x0000000002d88624: shl    $0x3,%r10
  0x0000000002d88628: cmp    %rax,%r10
  0x0000000002d8862b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d88631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d8863c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d88640: mov    %eax,-0x6000(%rsp)
  0x0000000002d88647: push   %rbp
  0x0000000002d88648: sub    $0x30,%rsp
  0x0000000002d8864c: movabs $0x195767e8,%rax   ;   {metadata(method data for {method} {0x00000000194ed378} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d88656: mov    0xdc(%rax),%esi
  0x0000000002d8865c: add    $0x8,%esi
  0x0000000002d8865f: mov    %esi,0xdc(%rax)
  0x0000000002d88665: movabs $0x194ed370,%rax   ;   {metadata({method} {0x00000000194ed378} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d8866f: and    $0x1ff8,%esi
  0x0000000002d88675: cmp    $0x0,%esi
  0x0000000002d88678: je     0x0000000002d88720  ;*iload_1
                                                ; - java.io.WinNTFileSystem::isSlash@0 (line 53)

  0x0000000002d8867e: cmp    $0x5c,%r8d
  0x0000000002d88682: movabs $0x195767e8,%rax   ;   {metadata(method data for {method} {0x00000000194ed378} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d8868c: movabs $0x108,%rsi
  0x0000000002d88696: je     0x0000000002d886a6
  0x0000000002d8869c: movabs $0x118,%rsi
  0x0000000002d886a6: mov    (%rax,%rsi,1),%rdi
  0x0000000002d886aa: lea    0x1(%rdi),%rdi
  0x0000000002d886ae: mov    %rdi,(%rax,%rsi,1)
  0x0000000002d886b2: je     0x0000000002d886f2  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)

  0x0000000002d886b8: cmp    $0x2f,%r8d
  0x0000000002d886bc: movabs $0x195767e8,%rax   ;   {metadata(method data for {method} {0x00000000194ed378} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d886c6: movabs $0x128,%rsi
  0x0000000002d886d0: jne    0x0000000002d886e0
  0x0000000002d886d6: movabs $0x138,%rsi
  0x0000000002d886e0: mov    (%rax,%rsi,1),%rdi
  0x0000000002d886e4: lea    0x1(%rdi),%rdi
  0x0000000002d886e8: mov    %rdi,(%rax,%rsi,1)
  0x0000000002d886ec: jne    0x0000000002d8870c  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)

  0x0000000002d886f2: movabs $0x195767e8,%rax   ;   {metadata(method data for {method} {0x00000000194ed378} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002d886fc: incl   0x148(%rax)
  0x0000000002d88702: mov    $0x1,%eax
  0x0000000002d88707: jmpq   0x0000000002d88711  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)

  0x0000000002d8870c: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)

  0x0000000002d88711: and    $0x1,%eax
  0x0000000002d88714: add    $0x30,%rsp
  0x0000000002d88718: pop    %rbp
  0x0000000002d88719: test   %eax,-0x3f861f(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d8871f: retq   
  0x0000000002d88720: mov    %rax,0x8(%rsp)
  0x0000000002d88725: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d8872d: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=274}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ;   {runtime_call}
  0x0000000002d88732: jmpq   0x0000000002d8867e
  0x0000000002d88737: nop
  0x0000000002d88738: nop
  0x0000000002d88739: mov    0x2a8(%r15),%rax
  0x0000000002d88740: movabs $0x0,%r10
  0x0000000002d8874a: mov    %r10,0x2a8(%r15)
  0x0000000002d88751: movabs $0x0,%r10
  0x0000000002d8875b: mov    %r10,0x2b0(%r15)
  0x0000000002d88762: add    $0x30,%rsp
  0x0000000002d88766: pop    %rbp
  0x0000000002d88767: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d8876c: hlt    
  0x0000000002d8876d: hlt    
  0x0000000002d8876e: hlt    
  0x0000000002d8876f: hlt    
  0x0000000002d88770: hlt    
  0x0000000002d88771: hlt    
  0x0000000002d88772: hlt    
  0x0000000002d88773: hlt    
  0x0000000002d88774: hlt    
  0x0000000002d88775: hlt    
  0x0000000002d88776: hlt    
  0x0000000002d88777: hlt    
  0x0000000002d88778: hlt    
  0x0000000002d88779: hlt    
  0x0000000002d8877a: hlt    
  0x0000000002d8877b: hlt    
  0x0000000002d8877c: hlt    
  0x0000000002d8877d: hlt    
  0x0000000002d8877e: hlt    
  0x0000000002d8877f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d88780: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d88785: mov    %rsp,-0x28(%rsp)
  0x0000000002d8878a: sub    $0x80,%rsp
  0x0000000002d88791: mov    %rax,0x78(%rsp)
  0x0000000002d88796: mov    %rcx,0x70(%rsp)
  0x0000000002d8879b: mov    %rdx,0x68(%rsp)
  0x0000000002d887a0: mov    %rbx,0x60(%rsp)
  0x0000000002d887a5: mov    %rbp,0x50(%rsp)
  0x0000000002d887aa: mov    %rsi,0x48(%rsp)
  0x0000000002d887af: mov    %rdi,0x40(%rsp)
  0x0000000002d887b4: mov    %r8,0x38(%rsp)
  0x0000000002d887b9: mov    %r9,0x30(%rsp)
  0x0000000002d887be: mov    %r10,0x28(%rsp)
  0x0000000002d887c3: mov    %r11,0x20(%rsp)
  0x0000000002d887c8: mov    %r12,0x18(%rsp)
  0x0000000002d887cd: mov    %r13,0x10(%rsp)
  0x0000000002d887d2: mov    %r14,0x8(%rsp)
  0x0000000002d887d7: mov    %r15,(%rsp)
  0x0000000002d887db: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d887e5: movabs $0x2d88785,%rdx    ;   {internal_word}
  0x0000000002d887ef: mov    %rsp,%r8
  0x0000000002d887f2: and    $0xfffffffffffffff0,%rsp
  0x0000000002d887f6: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d887fb: hlt    
[Deopt Handler Code]
  0x0000000002d887fc: movabs $0x2d887fc,%r10    ;   {section_word}
  0x0000000002d88806: push   %r10
  0x0000000002d88808: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d8880d: hlt    
  0x0000000002d8880e: hlt    
  0x0000000002d8880f: hlt    
<nmethod compile_id='27' compiler='C1' level='3' entry='0x0000000002d88620' size='1024' address='0x0000000002d884d0' relocation_offset='288' insts_offset='336' stub_offset='688' scopes_data_offset='840' scopes_pcs_offset='888' dependencies_offset='1016' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='4060' iicount='4060' stamp='6.181'/>
Decoding compiled method 0x0000000002d88910:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000193e0f58} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0x110]  (sp of caller)
  0x0000000002d88ac0: mov    0x8(%rdx),%r10d
  0x0000000002d88ac4: shl    $0x3,%r10
  0x0000000002d88ac8: cmp    %rax,%r10
  0x0000000002d88acb: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d88ad1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d88adc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d88ae0: mov    %eax,-0x6000(%rsp)
  0x0000000002d88ae7: push   %rbp
  0x0000000002d88ae8: sub    $0x100,%rsp
  0x0000000002d88aef: lea    0xe0(%rsp),%rsi
  0x0000000002d88af7: mov    %rdx,0x8(%rsi)
  0x0000000002d88afb: mov    (%rdx),%rax
  0x0000000002d88afe: mov    %rax,%rdi
  0x0000000002d88b01: and    $0x7,%rdi
  0x0000000002d88b05: cmp    $0x5,%rdi
  0x0000000002d88b09: jne    0x0000000002d88b90
  0x0000000002d88b0f: mov    0x8(%rdx),%edi
  0x0000000002d88b12: shl    $0x3,%rdi
  0x0000000002d88b16: mov    0xa8(%rdi),%rdi
  0x0000000002d88b1d: or     %r15,%rdi
  0x0000000002d88b20: xor    %rax,%rdi
  0x0000000002d88b23: and    $0xffffffffffffff87,%rdi
  0x0000000002d88b27: je     0x0000000002d88bb8
  0x0000000002d88b2d: test   $0x7,%rdi
  0x0000000002d88b34: jne    0x0000000002d88b7d
  0x0000000002d88b36: test   $0x300,%rdi
  0x0000000002d88b3d: jne    0x0000000002d88b5c
  0x0000000002d88b3f: and    $0x37f,%rax
  0x0000000002d88b46: mov    %rax,%rdi
  0x0000000002d88b49: or     %r15,%rdi
  0x0000000002d88b4c: lock cmpxchg %rdi,(%rdx)
  0x0000000002d88b51: jne    0x0000000002d88fd5
  0x0000000002d88b57: jmpq   0x0000000002d88bb8
  0x0000000002d88b5c: mov    0x8(%rdx),%edi
  0x0000000002d88b5f: shl    $0x3,%rdi
  0x0000000002d88b63: mov    0xa8(%rdi),%rdi
  0x0000000002d88b6a: or     %r15,%rdi
  0x0000000002d88b6d: lock cmpxchg %rdi,(%rdx)
  0x0000000002d88b72: jne    0x0000000002d88fd5
  0x0000000002d88b78: jmpq   0x0000000002d88bb8
  0x0000000002d88b7d: mov    0x8(%rdx),%edi
  0x0000000002d88b80: shl    $0x3,%rdi
  0x0000000002d88b84: mov    0xa8(%rdi),%rdi
  0x0000000002d88b8b: lock cmpxchg %rdi,(%rdx)
  0x0000000002d88b90: mov    (%rdx),%rax
  0x0000000002d88b93: or     $0x1,%rax
  0x0000000002d88b97: mov    %rax,(%rsi)
  0x0000000002d88b9a: lock cmpxchg %rsi,(%rdx)
  0x0000000002d88b9f: je     0x0000000002d88bb8
  0x0000000002d88ba5: sub    %rsp,%rax
  0x0000000002d88ba8: and    $0xfffffffffffff007,%rax
  0x0000000002d88baf: mov    %rax,(%rsi)
  0x0000000002d88bb2: jne    0x0000000002d88fd5
  0x0000000002d88bb8: movabs $0x19576968,%rsi   ;   {metadata(method data for {method} {0x00000000193e0f58} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002d88bc2: mov    0xdc(%rsi),%edi
  0x0000000002d88bc8: add    $0x8,%edi
  0x0000000002d88bcb: mov    %edi,0xdc(%rsi)
  0x0000000002d88bd1: movabs $0x193e0f50,%rsi   ;   {metadata({method} {0x00000000193e0f58} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002d88bdb: and    $0x1ff8,%edi
  0x0000000002d88be1: cmp    $0x0,%edi
  0x0000000002d88be4: je     0x0000000002d88fe8  ;*aload_0
                                                ; - java.lang.StringBuffer::append@0 (line 380)

  0x0000000002d88bea: movl   $0x0,0x14(%rdx)
  0x0000000002d88bf1: mov    %rdx,%rsi
  0x0000000002d88bf4: shr    $0x9,%rsi
  0x0000000002d88bf8: movabs $0xe824000,%rdi
  0x0000000002d88c02: movb   $0x0,(%rsi,%rdi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)

  0x0000000002d88c06: mov    %rdx,%rsi
  0x0000000002d88c09: movabs $0x19576968,%rdi   ;   {metadata(method data for {method} {0x00000000193e0f58} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002d88c13: addq   $0x1,0x108(%rdi)
  0x0000000002d88c1b: movabs $0x19576578,%rsi   ;   {metadata(method data for {method} {0x00000000193e5d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d88c25: mov    0xdc(%rsi),%edi
  0x0000000002d88c2b: add    $0x8,%edi
  0x0000000002d88c2e: mov    %edi,0xdc(%rsi)
  0x0000000002d88c34: movabs $0x193e5d30,%rsi   ;   {metadata({method} {0x00000000193e5d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d88c3e: and    $0x7ffff8,%edi
  0x0000000002d88c44: cmp    $0x0,%edi
  0x0000000002d88c47: je     0x0000000002d88fff
  0x0000000002d88c4d: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88c50: inc    %esi
  0x0000000002d88c52: mov    %rdx,%rdi
  0x0000000002d88c55: movabs $0x19576578,%rbx   ;   {metadata(method data for {method} {0x00000000193e5d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d88c5f: addq   $0x1,0x108(%rbx)
  0x0000000002d88c67: movabs $0x195763e8,%rdi   ;   {metadata(method data for {method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d88c71: mov    0xdc(%rdi),%ebx
  0x0000000002d88c77: add    $0x8,%ebx
  0x0000000002d88c7a: mov    %ebx,0xdc(%rdi)
  0x0000000002d88c80: movabs $0x193e4bf8,%rdi   ;   {metadata({method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d88c8a: and    $0x7ffff8,%ebx
  0x0000000002d88c90: cmp    $0x0,%ebx
  0x0000000002d88c93: je     0x0000000002d89016
  0x0000000002d88c99: mov    0x10(%rdx),%edi
  0x0000000002d88c9c: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88ca0: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; implicit exception: dispatches to 0x0000000002d8902d
  0x0000000002d88ca3: mov    %rsi,%rax
  0x0000000002d88ca6: sub    %ebx,%eax
  0x0000000002d88ca8: cmp    $0x0,%eax
  0x0000000002d88cab: movabs $0x195763e8,%rax   ;   {metadata(method data for {method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d88cb5: movabs $0x108,%rcx
  0x0000000002d88cbf: jle    0x0000000002d88ccf
  0x0000000002d88cc5: movabs $0x118,%rcx
  0x0000000002d88ccf: mov    (%rax,%rcx,1),%r9
  0x0000000002d88cd3: lea    0x1(%r9),%r9
  0x0000000002d88cd7: mov    %r9,(%rax,%rcx,1)
  0x0000000002d88cdb: jg     0x0000000002d88cee  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88ce1: mov    %r8d,0xc4(%rsp)
  0x0000000002d88ce9: jmpq   0x0000000002d88f63  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88cee: mov    %ebx,0xc0(%rsp)
  0x0000000002d88cf5: mov    %rdi,0xc8(%rsp)
  0x0000000002d88cfd: mov    %r8d,0xc4(%rsp)
  0x0000000002d88d05: mov    %rdx,%rax
  0x0000000002d88d08: movabs $0x195763e8,%rcx   ;   {metadata(method data for {method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d88d12: addq   $0x1,0x128(%rcx)
  0x0000000002d88d1a: mov    %rsi,%r8
  0x0000000002d88d1d: mov    %rdx,%rsi
  0x0000000002d88d20: mov    %rsi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88d23: mov    %rsi,0xd0(%rsp)
  0x0000000002d88d2b: nop
  0x0000000002d88d2c: nop
  0x0000000002d88d2d: nop
  0x0000000002d88d2e: nop
  0x0000000002d88d2f: callq  0x0000000002cb61a0  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=628}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {optimized virtual_call}
  0x0000000002d88d34: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88d37: movabs $0x195763e8,%rbx   ;   {metadata(method data for {method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d88d41: addq   $0x1,0x138(%rbx)
  0x0000000002d88d49: movabs $0x195f2d88,%rbx   ;   {metadata(method data for {method} {0x0000000019489c28} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d88d53: mov    0xdc(%rbx),%edx
  0x0000000002d88d59: add    $0x8,%edx
  0x0000000002d88d5c: mov    %edx,0xdc(%rbx)
  0x0000000002d88d62: movabs $0x19489c20,%rbx   ;   {metadata({method} {0x0000000019489c28} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d88d6c: and    $0x7ffff8,%edx
  0x0000000002d88d72: cmp    $0x0,%edx
  0x0000000002d88d75: je     0x0000000002d89032
  0x0000000002d88d7b: mov    %r8,%rbx
  0x0000000002d88d7e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002d88d88: movslq %ebx,%rbx
  0x0000000002d88d8b: mov    %rbx,%rdi
  0x0000000002d88d8e: cmp    $0xffffff,%rbx
  0x0000000002d88d95: ja     0x0000000002d89049
  0x0000000002d88d9b: movabs $0x17,%rsi
  0x0000000002d88da5: lea    (%rsi,%rbx,2),%rsi
  0x0000000002d88da9: and    $0xfffffffffffffff8,%rsi
  0x0000000002d88dad: mov    0x60(%r15),%rax
  0x0000000002d88db1: lea    (%rax,%rsi,1),%rsi
  0x0000000002d88db5: cmp    0x70(%r15),%rsi
  0x0000000002d88db9: ja     0x0000000002d89049
  0x0000000002d88dbf: mov    %rsi,0x60(%r15)
  0x0000000002d88dc3: sub    %rax,%rsi
  0x0000000002d88dc6: movq   $0x1,(%rax)
  0x0000000002d88dcd: mov    %rdx,%rcx
  0x0000000002d88dd0: shr    $0x3,%rcx
  0x0000000002d88dd4: mov    %ecx,0x8(%rax)
  0x0000000002d88dd7: mov    %ebx,0xc(%rax)
  0x0000000002d88dda: sub    $0x10,%rsi
  0x0000000002d88dde: je     0x0000000002d88df5
  0x0000000002d88de4: xor    %rbx,%rbx
  0x0000000002d88de7: shr    $0x3,%rsi
  0x0000000002d88deb: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002d88df0: dec    %rsi
  0x0000000002d88df3: jne    0x0000000002d88deb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88df5: movabs $0x195f2d88,%rdx   ;   {metadata(method data for {method} {0x0000000019489c28} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d88dff: addq   $0x1,0x108(%rdx)
  0x0000000002d88e07: movabs $0x195628e0,%rdx   ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d88e11: mov    0xdc(%rdx),%r9d
  0x0000000002d88e18: add    $0x8,%r9d
  0x0000000002d88e1c: mov    %r9d,0xdc(%rdx)
  0x0000000002d88e23: movabs $0x194656c8,%rdx   ;   {metadata({method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d88e2d: and    $0x7ffff8,%r9d
  0x0000000002d88e34: cmp    $0x0,%r9d
  0x0000000002d88e38: je     0x0000000002d89053
  0x0000000002d88e3e: mov    0xc0(%rsp),%ebx
  0x0000000002d88e45: cmp    %r8d,%ebx
  0x0000000002d88e48: movabs $0x195628e0,%rdx   ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d88e52: movabs $0x108,%r9
  0x0000000002d88e5c: jg     0x0000000002d88e6c
  0x0000000002d88e62: movabs $0x118,%r9
  0x0000000002d88e6c: mov    (%rdx,%r9,1),%rdi
  0x0000000002d88e70: lea    0x1(%rdi),%rdi
  0x0000000002d88e74: mov    %rdi,(%rdx,%r9,1)
  0x0000000002d88e78: jg     0x0000000002d88e93  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88e7e: movabs $0x195628e0,%rdx   ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d88e88: incl   0x128(%rdx)
  0x0000000002d88e8e: jmpq   0x0000000002d88e96  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88e93: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88e96: mov    0xc8(%rsp),%rdi
  0x0000000002d88e9e: movabs $0x195f2d88,%rdx   ;   {metadata(method data for {method} {0x0000000019489c28} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d88ea8: addq   $0x1,0x118(%rdx)
  0x0000000002d88eb0: mov    %rdi,%rdx
  0x0000000002d88eb3: mov    $0x0,%r8d
  0x0000000002d88eb9: mov    %rax,%r9
  0x0000000002d88ebc: mov    $0x0,%edi
  0x0000000002d88ec1: mov    %rbx,%rsi
  0x0000000002d88ec4: mov    %rax,0xd8(%rsp)
  0x0000000002d88ecc: lea    (%r8,%rsi,1),%rcx
  0x0000000002d88ed0: cmp    0xc(%rdx),%ecx
  0x0000000002d88ed3: ja     0x0000000002d8906a
  0x0000000002d88ed9: lea    (%rdi,%rsi,1),%rcx
  0x0000000002d88edd: cmp    0xc(%r9),%ecx
  0x0000000002d88ee1: ja     0x0000000002d8906a
  0x0000000002d88ee7: test   %esi,%esi
  0x0000000002d88ee9: jl     0x0000000002d8906a
  0x0000000002d88eef: je     0x0000000002d88f33
  0x0000000002d88ef5: movslq %r8d,%r8
  0x0000000002d88ef8: movslq %edi,%rdi
  0x0000000002d88efb: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002d88f00: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002d88f05: mov    %rsi,%r8
  0x0000000002d88f08: sub    $0x20,%rsp
  0x0000000002d88f0c: test   $0xf,%esp
  0x0000000002d88f12: je     0x0000000002d88f2a
  0x0000000002d88f18: sub    $0x8,%rsp
  0x0000000002d88f1c: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002d88f21: add    $0x8,%rsp
  0x0000000002d88f25: jmpq   0x0000000002d88f2f
  0x0000000002d88f2a: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002d88f2f: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88f33: mov    0xd8(%rsp),%rax
  0x0000000002d88f3b: mov    0xd0(%rsp),%rdx
  0x0000000002d88f43: mov    %rax,%r10
  0x0000000002d88f46: shr    $0x3,%r10
  0x0000000002d88f4a: mov    %r10d,0x10(%rdx)
  0x0000000002d88f4e: mov    %rdx,%rax
  0x0000000002d88f51: shr    $0x9,%rax
  0x0000000002d88f55: movabs $0xe824000,%rsi
  0x0000000002d88f5f: movb   $0x0,(%rax,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88f63: mov    0xc4(%rsp),%r8d
  0x0000000002d88f6b: mov    0x10(%rdx),%eax
  0x0000000002d88f6e: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88f72: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88f75: mov    %rsi,%rdi
  0x0000000002d88f78: inc    %edi
  0x0000000002d88f7a: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88f7d: movslq %esi,%rdi
  0x0000000002d88f80: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000002d89079
  0x0000000002d88f83: jae    0x0000000002d89083
  0x0000000002d88f89: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002d88f8f: lea    0xe0(%rsp),%rax
  0x0000000002d88f97: mov    0x8(%rax),%rdi
  0x0000000002d88f9b: mov    (%rdi),%rsi
  0x0000000002d88f9e: and    $0x7,%rsi
  0x0000000002d88fa2: cmp    $0x5,%rsi
  0x0000000002d88fa6: je     0x0000000002d88fc3
  0x0000000002d88fac: mov    (%rax),%rsi
  0x0000000002d88faf: test   %rsi,%rsi
  0x0000000002d88fb2: je     0x0000000002d88fc3
  0x0000000002d88fb8: lock cmpxchg %rsi,(%rdi)
  0x0000000002d88fbd: jne    0x0000000002d8908c  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x0000000002d88fc3: mov    %rdx,%rax
  0x0000000002d88fc6: add    $0x100,%rsp
  0x0000000002d88fcd: pop    %rbp
  0x0000000002d88fce: test   %eax,-0x3f8ed4(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d88fd4: retq   
  0x0000000002d88fd5: mov    %rdx,0x8(%rsp)
  0x0000000002d88fda: mov    %rsi,(%rsp)
  0x0000000002d88fde: callq  0x0000000002d6f760  ; OopMap{rdx=Oop [232]=Oop off=1315}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x0000000002d88fe3: jmpq   0x0000000002d88bb8
  0x0000000002d88fe8: mov    %rsi,0x8(%rsp)
  0x0000000002d88fed: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d88ff5: callq  0x0000000002d710e0  ; OopMap{rdx=Oop [232]=Oop off=1338}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x0000000002d88ffa: jmpq   0x0000000002d88bea
  0x0000000002d88fff: mov    %rsi,0x8(%rsp)
  0x0000000002d89004: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d8900c: callq  0x0000000002d710e0  ; OopMap{rdx=Oop [232]=Oop off=1361}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002d89011: jmpq   0x0000000002d88c4d
  0x0000000002d89016: mov    %rdi,0x8(%rsp)
  0x0000000002d8901b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d89023: callq  0x0000000002d710e0  ; OopMap{rdx=Oop [232]=Oop off=1384}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002d89028: jmpq   0x0000000002d88c99
  0x0000000002d8902d: callq  0x0000000002cdff40  ; OopMap{rdx=Oop rdi=Oop [232]=Oop off=1394}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002d89032: mov    %rbx,0x8(%rsp)
  0x0000000002d89037: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d8903f: callq  0x0000000002d710e0  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=1412}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002d89044: jmpq   0x0000000002d88d7b
  0x0000000002d89049: callq  0x0000000002d6e600  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=1422}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002d8904e: jmpq   0x0000000002d88df5
  0x0000000002d89053: mov    %rdx,0x8(%rsp)
  0x0000000002d89058: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d89060: callq  0x0000000002d710e0  ; OopMap{[208]=Oop [200]=Oop rax=Oop [232]=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002d89065: jmpq   0x0000000002d88e3e
  0x0000000002d8906a: nop
  0x0000000002d8906b: nop
  0x0000000002d8906c: nop
  0x0000000002d8906d: nop
  0x0000000002d8906e: nop
  0x0000000002d8906f: callq  0x0000000002cb6620  ; OopMap{[208]=Oop [216]=Oop [232]=Oop off=1460}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {static_call}
  0x0000000002d89074: jmpq   0x0000000002d88f33
  0x0000000002d89079: callq  0x0000000002cdff40  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1470}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002d8907e: callq  0x0000000002cdff40  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1475}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002d89083: mov    %rsi,(%rsp)
  0x0000000002d89087: callq  0x0000000002ce0600  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1484}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002d8908c: lea    0xe0(%rsp),%rax
  0x0000000002d89094: mov    %rax,(%rsp)
  0x0000000002d89098: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d8909d: jmpq   0x0000000002d88fc3
  0x0000000002d890a2: nop
  0x0000000002d890a3: nop
  0x0000000002d890a4: mov    0x2a8(%r15),%rax
  0x0000000002d890ab: movabs $0x0,%r10
  0x0000000002d890b5: mov    %r10,0x2a8(%r15)
  0x0000000002d890bc: movabs $0x0,%r10
  0x0000000002d890c6: mov    %r10,0x2b0(%r15)
  0x0000000002d890cd: mov    %rax,%rbx
  0x0000000002d890d0: lea    0xe0(%rsp),%rax
  0x0000000002d890d8: mov    0x8(%rax),%rsi
  0x0000000002d890dc: mov    (%rsi),%rdi
  0x0000000002d890df: and    $0x7,%rdi
  0x0000000002d890e3: cmp    $0x5,%rdi
  0x0000000002d890e7: je     0x0000000002d89104
  0x0000000002d890ed: mov    (%rax),%rdi
  0x0000000002d890f0: test   %rdi,%rdi
  0x0000000002d890f3: je     0x0000000002d89104
  0x0000000002d890f9: lock cmpxchg %rdi,(%rsi)
  0x0000000002d890fe: jne    0x0000000002d89114
  0x0000000002d89104: mov    %rbx,%rax
  0x0000000002d89107: add    $0x100,%rsp
  0x0000000002d8910e: pop    %rbp
  0x0000000002d8910f: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d89114: lea    0xe0(%rsp),%rax
  0x0000000002d8911c: mov    %rax,(%rsp)
  0x0000000002d89120: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d89125: jmp    0x0000000002d89104
  0x0000000002d89127: hlt    
  0x0000000002d89128: hlt    
  0x0000000002d89129: hlt    
  0x0000000002d8912a: hlt    
  0x0000000002d8912b: hlt    
  0x0000000002d8912c: hlt    
  0x0000000002d8912d: hlt    
  0x0000000002d8912e: hlt    
  0x0000000002d8912f: hlt    
  0x0000000002d89130: hlt    
  0x0000000002d89131: hlt    
  0x0000000002d89132: hlt    
  0x0000000002d89133: hlt    
  0x0000000002d89134: hlt    
  0x0000000002d89135: hlt    
  0x0000000002d89136: hlt    
  0x0000000002d89137: hlt    
  0x0000000002d89138: hlt    
  0x0000000002d89139: hlt    
  0x0000000002d8913a: hlt    
  0x0000000002d8913b: hlt    
  0x0000000002d8913c: hlt    
  0x0000000002d8913d: hlt    
  0x0000000002d8913e: hlt    
  0x0000000002d8913f: hlt    
[Stub Code]
  0x0000000002d89140: nop                       ;   {no_reloc}
  0x0000000002d89141: nop
  0x0000000002d89142: nop
  0x0000000002d89143: nop
  0x0000000002d89144: nop
  0x0000000002d89145: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8914f: jmpq   0x0000000002d8914f  ;   {runtime_call}
  0x0000000002d89154: nop
  0x0000000002d89155: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8915f: jmpq   0x0000000002d8915f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d89164: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d89169: mov    %rsp,-0x28(%rsp)
  0x0000000002d8916e: sub    $0x80,%rsp
  0x0000000002d89175: mov    %rax,0x78(%rsp)
  0x0000000002d8917a: mov    %rcx,0x70(%rsp)
  0x0000000002d8917f: mov    %rdx,0x68(%rsp)
  0x0000000002d89184: mov    %rbx,0x60(%rsp)
  0x0000000002d89189: mov    %rbp,0x50(%rsp)
  0x0000000002d8918e: mov    %rsi,0x48(%rsp)
  0x0000000002d89193: mov    %rdi,0x40(%rsp)
  0x0000000002d89198: mov    %r8,0x38(%rsp)
  0x0000000002d8919d: mov    %r9,0x30(%rsp)
  0x0000000002d891a2: mov    %r10,0x28(%rsp)
  0x0000000002d891a7: mov    %r11,0x20(%rsp)
  0x0000000002d891ac: mov    %r12,0x18(%rsp)
  0x0000000002d891b1: mov    %r13,0x10(%rsp)
  0x0000000002d891b6: mov    %r14,0x8(%rsp)
  0x0000000002d891bb: mov    %r15,(%rsp)
  0x0000000002d891bf: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d891c9: movabs $0x2d89169,%rdx    ;   {internal_word}
  0x0000000002d891d3: mov    %rsp,%r8
  0x0000000002d891d6: and    $0xfffffffffffffff0,%rsp
  0x0000000002d891da: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d891df: hlt    
[Deopt Handler Code]
  0x0000000002d891e0: movabs $0x2d891e0,%r10    ;   {section_word}
  0x0000000002d891ea: push   %r10
  0x0000000002d891ec: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d891f1: hlt    
  0x0000000002d891f2: hlt    
  0x0000000002d891f3: hlt    
  0x0000000002d891f4: hlt    
  0x0000000002d891f5: hlt    
  0x0000000002d891f6: hlt    
  0x0000000002d891f7: hlt    
<nmethod compile_id='30' compiler='C1' level='3' entry='0x0000000002d88ac0' size='3272' address='0x0000000002d88910' relocation_offset='288' insts_offset='432' stub_offset='2096' scopes_data_offset='2320' scopes_pcs_offset='2672' dependencies_offset='3232' nul_chk_table_offset='3240' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='3645' iicount='3645' stamp='6.247'/>
Decoding compiled method 0x0000000002d89610:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d89780: mov    0x8(%rdx),%r10d
  0x0000000002d89784: shl    $0x3,%r10
  0x0000000002d89788: cmp    %rax,%r10
  0x0000000002d8978b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d89791: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d8979c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d897a0: mov    %eax,-0x6000(%rsp)
  0x0000000002d897a7: push   %rbp
  0x0000000002d897a8: sub    $0x30,%rsp
  0x0000000002d897ac: movabs $0x195a93d8,%rsi   ;   {metadata(method data for {method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d897b6: mov    0xdc(%rsi),%edi
  0x0000000002d897bc: add    $0x8,%edi
  0x0000000002d897bf: mov    %edi,0xdc(%rsi)
  0x0000000002d897c5: movabs $0x193e8960,%rsi   ;   {metadata({method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d897cf: and    $0x1ff8,%edi
  0x0000000002d897d5: cmp    $0x0,%edi
  0x0000000002d897d8: je     0x0000000002d89815  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x0000000002d897de: mov    %rdx,%rsi
  0x0000000002d897e1: movabs $0x195a93d8,%rdi   ;   {metadata(method data for {method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d897eb: addq   $0x1,0x108(%rdi)
  0x0000000002d897f3: mov    %rdx,%rsi
  0x0000000002d897f6: mov    %rsi,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x0000000002d897f9: mov    %rsi,0x20(%rsp)
  0x0000000002d897fe: nop
  0x0000000002d897ff: callq  0x0000000002cb61a0  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x0000000002d89804: mov    0x20(%rsp),%rax
  0x0000000002d89809: add    $0x30,%rsp
  0x0000000002d8980d: pop    %rbp
  0x0000000002d8980e: test   %eax,-0x3f9714(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d89814: retq   
  0x0000000002d89815: mov    %rsi,0x8(%rsp)
  0x0000000002d8981a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d89822: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x0000000002d89827: jmp    0x0000000002d897de
  0x0000000002d89829: nop
  0x0000000002d8982a: nop
  0x0000000002d8982b: mov    0x2a8(%r15),%rax
  0x0000000002d89832: movabs $0x0,%r10
  0x0000000002d8983c: mov    %r10,0x2a8(%r15)
  0x0000000002d89843: movabs $0x0,%r10
  0x0000000002d8984d: mov    %r10,0x2b0(%r15)
  0x0000000002d89854: add    $0x30,%rsp
  0x0000000002d89858: pop    %rbp
  0x0000000002d89859: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d8985e: hlt    
  0x0000000002d8985f: hlt    
[Stub Code]
  0x0000000002d89860: nop                       ;   {no_reloc}
  0x0000000002d89861: nop
  0x0000000002d89862: nop
  0x0000000002d89863: nop
  0x0000000002d89864: nop
  0x0000000002d89865: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8986f: jmpq   0x0000000002d8986f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d89874: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d89879: mov    %rsp,-0x28(%rsp)
  0x0000000002d8987e: sub    $0x80,%rsp
  0x0000000002d89885: mov    %rax,0x78(%rsp)
  0x0000000002d8988a: mov    %rcx,0x70(%rsp)
  0x0000000002d8988f: mov    %rdx,0x68(%rsp)
  0x0000000002d89894: mov    %rbx,0x60(%rsp)
  0x0000000002d89899: mov    %rbp,0x50(%rsp)
  0x0000000002d8989e: mov    %rsi,0x48(%rsp)
  0x0000000002d898a3: mov    %rdi,0x40(%rsp)
  0x0000000002d898a8: mov    %r8,0x38(%rsp)
  0x0000000002d898ad: mov    %r9,0x30(%rsp)
  0x0000000002d898b2: mov    %r10,0x28(%rsp)
  0x0000000002d898b7: mov    %r11,0x20(%rsp)
  0x0000000002d898bc: mov    %r12,0x18(%rsp)
  0x0000000002d898c1: mov    %r13,0x10(%rsp)
  0x0000000002d898c6: mov    %r14,0x8(%rsp)
  0x0000000002d898cb: mov    %r15,(%rsp)
  0x0000000002d898cf: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d898d9: movabs $0x2d89879,%rdx    ;   {internal_word}
  0x0000000002d898e3: mov    %rsp,%r8
  0x0000000002d898e6: and    $0xfffffffffffffff0,%rsp
  0x0000000002d898ea: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d898ef: hlt    
[Deopt Handler Code]
  0x0000000002d898f0: movabs $0x2d898f0,%r10    ;   {section_word}
  0x0000000002d898fa: push   %r10
  0x0000000002d898fc: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d89901: hlt    
  0x0000000002d89902: hlt    
  0x0000000002d89903: hlt    
  0x0000000002d89904: hlt    
  0x0000000002d89905: hlt    
  0x0000000002d89906: hlt    
  0x0000000002d89907: hlt    
<nmethod compile_id='29' compiler='C1' level='3' entry='0x0000000002d89780' size='912' address='0x0000000002d89610' relocation_offset='288' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='645' iicount='645' stamp='6.253'/>
<writer thread='21476'/>
<task_queued compile_id='31' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='256' iicount='256' level='3' stamp='6.253' comment='tiered' hot_count='256'/>
<task_queued compile_id='32' method='java/io/BufferedInputStream read ()I' bytes='49' count='256' iicount='256' level='3' stamp='6.253' comment='tiered' hot_count='256'/>
<task_queued compile_id='33' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='183' backedge_count='3072' iicount='183' level='3' stamp='6.253' comment='tiered' hot_count='183'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d899d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000194c2c58} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d89b40: mov    0x8(%rdx),%r10d
  0x0000000002d89b44: shl    $0x3,%r10
  0x0000000002d89b48: cmp    %rax,%r10
  0x0000000002d89b4b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d89b51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d89b5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d89b60: mov    %eax,-0x6000(%rsp)
  0x0000000002d89b67: push   %rbp
  0x0000000002d89b68: sub    $0x30,%rsp
  0x0000000002d89b6c: movabs $0x19653038,%rax   ;   {metadata(method data for {method} {0x00000000194c2c58} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002d89b76: mov    0xdc(%rax),%r8d
  0x0000000002d89b7d: add    $0x8,%r8d
  0x0000000002d89b81: mov    %r8d,0xdc(%rax)
  0x0000000002d89b88: movabs $0x194c2c50,%rax   ;   {metadata({method} {0x00000000194c2c58} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002d89b92: and    $0x1ff8,%r8d
  0x0000000002d89b99: cmp    $0x0,%r8d
  0x0000000002d89b9d: je     0x0000000002d89c36  ;*aload_0
                                                ; - java.io.BufferedInputStream::getBufIfOpen@0 (line 168)

  0x0000000002d89ba3: mov    0x20(%rdx),%eax
  0x0000000002d89ba6: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x0000000002d89baa: cmp    $0x0,%rax
  0x0000000002d89bae: movabs $0x19653038,%rdx   ;   {metadata(method data for {method} {0x00000000194c2c58} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002d89bb8: movabs $0x108,%r8
  0x0000000002d89bc2: jne    0x0000000002d89bd2
  0x0000000002d89bc8: movabs $0x118,%r8
  0x0000000002d89bd2: mov    (%rdx,%r8,1),%rsi
  0x0000000002d89bd6: lea    0x1(%rsi),%rsi
  0x0000000002d89bda: mov    %rsi,(%rdx,%r8,1)
  0x0000000002d89bde: je     0x0000000002d89bf0  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x0000000002d89be4: add    $0x30,%rsp
  0x0000000002d89be8: pop    %rbp
  0x0000000002d89be9: test   %eax,-0x3f9aef(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d89bef: retq                      ;*areturn
                                                ; - java.io.BufferedInputStream::getBufIfOpen@20 (line 171)

  0x0000000002d89bf0: jmpq   0x0000000002d89c5c  ;   {no_reloc}
  0x0000000002d89bf5: add    %al,(%rax)
  0x0000000002d89bf7: add    %al,(%rax)
  0x0000000002d89bf9: add    %ch,%cl
  0x0000000002d89bfb: add    %al,(%eax)
  0x0000000002d89bfe: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)

  0x0000000002d89c02: movabs $0x19653038,%rdx   ;   {metadata(method data for {method} {0x00000000194c2c58} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002d89c0c: addq   $0x1,0x128(%rdx)
  0x0000000002d89c14: movabs $0x780bd98e8,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x0000000002d89c1e: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)

  0x0000000002d89c21: mov    %rax,0x20(%rsp)
  0x0000000002d89c26: nop
  0x0000000002d89c27: callq  0x0000000002cb61a0  ; OopMap{[32]=Oop off=236}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ;   {optimized virtual_call}
  0x0000000002d89c2c: mov    0x20(%rsp),%rax
  0x0000000002d89c31: jmpq   0x0000000002d89c9b
  0x0000000002d89c36: mov    %rax,0x8(%rsp)
  0x0000000002d89c3b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d89c43: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=264}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ;   {runtime_call}
  0x0000000002d89c48: jmpq   0x0000000002d89ba3
  0x0000000002d89c4d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d89c57: mov    $0xa050f00,%eax
  0x0000000002d89c5c: callq  0x0000000002d72160  ; OopMap{off=289}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x0000000002d89c61: jmp    0x0000000002d89bf0
  0x0000000002d89c63: nop
  0x0000000002d89c64: nop
  0x0000000002d89c65: nop
  0x0000000002d89c66: mov    %rdx,%rdx
  0x0000000002d89c69: callq  0x0000000002cdfa20  ; OopMap{off=302}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x0000000002d89c6e: jmp    0x0000000002d89bff
  0x0000000002d89c70: nop
  0x0000000002d89c71: nop
  0x0000000002d89c72: mov    0x2a8(%r15),%rax
  0x0000000002d89c79: movabs $0x0,%r10
  0x0000000002d89c83: mov    %r10,0x2a8(%r15)
  0x0000000002d89c8a: movabs $0x0,%r10
  0x0000000002d89c94: mov    %r10,0x2b0(%r15)
  0x0000000002d89c9b: add    $0x30,%rsp
  0x0000000002d89c9f: pop    %rbp
  0x0000000002d89ca0: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d89ca5: hlt    
  0x0000000002d89ca6: hlt    
  0x0000000002d89ca7: hlt    
  0x0000000002d89ca8: hlt    
  0x0000000002d89ca9: hlt    
  0x0000000002d89caa: hlt    
  0x0000000002d89cab: hlt    
  0x0000000002d89cac: hlt    
  0x0000000002d89cad: hlt    
  0x0000000002d89cae: hlt    
  0x0000000002d89caf: hlt    
  0x0000000002d89cb0: hlt    
  0x0000000002d89cb1: hlt    
  0x0000000002d89cb2: hlt    
  0x0000000002d89cb3: hlt    
  0x0000000002d89cb4: hlt    
  0x0000000002d89cb5: hlt    
  0x0000000002d89cb6: hlt    
  0x0000000002d89cb7: hlt    
  0x0000000002d89cb8: hlt    
  0x0000000002d89cb9: hlt    
  0x0000000002d89cba: hlt    
  0x0000000002d89cbb: hlt    
  0x0000000002d89cbc: hlt    
  0x0000000002d89cbd: hlt    
  0x0000000002d89cbe: hlt    
  0x0000000002d89cbf: hlt    
[Stub Code]
  0x0000000002d89cc0: nop                       ;   {no_reloc}
  0x0000000002d89cc1: nop
  0x0000000002d89cc2: nop
  0x0000000002d89cc3: nop
  0x0000000002d89cc4: nop
  0x0000000002d89cc5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d89ccf: jmpq   0x0000000002d89ccf  ;   {runtime_call}
[Exception Handler]
  0x0000000002d89cd4: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d89cd9: mov    %rsp,-0x28(%rsp)
  0x0000000002d89cde: sub    $0x80,%rsp
  0x0000000002d89ce5: mov    %rax,0x78(%rsp)
  0x0000000002d89cea: mov    %rcx,0x70(%rsp)
  0x0000000002d89cef: mov    %rdx,0x68(%rsp)
  0x0000000002d89cf4: mov    %rbx,0x60(%rsp)
  0x0000000002d89cf9: mov    %rbp,0x50(%rsp)
  0x0000000002d89cfe: mov    %rsi,0x48(%rsp)
  0x0000000002d89d03: mov    %rdi,0x40(%rsp)
  0x0000000002d89d08: mov    %r8,0x38(%rsp)
  0x0000000002d89d0d: mov    %r9,0x30(%rsp)
  0x0000000002d89d12: mov    %r10,0x28(%rsp)
  0x0000000002d89d17: mov    %r11,0x20(%rsp)
  0x0000000002d89d1c: mov    %r12,0x18(%rsp)
  0x0000000002d89d21: mov    %r13,0x10(%rsp)
  0x0000000002d89d26: mov    %r14,0x8(%rsp)
  0x0000000002d89d2b: mov    %r15,(%rsp)
  0x0000000002d89d2f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d89d39: movabs $0x2d89cd9,%rdx    ;   {internal_word}
  0x0000000002d89d43: mov    %rsp,%r8
  0x0000000002d89d46: and    $0xfffffffffffffff0,%rsp
  0x0000000002d89d4a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d89d4f: hlt    
[Deopt Handler Code]
  0x0000000002d89d50: movabs $0x2d89d50,%r10    ;   {section_word}
  0x0000000002d89d5a: push   %r10
  0x0000000002d89d5c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d89d61: hlt    
  0x0000000002d89d62: hlt    
  0x0000000002d89d63: hlt    
  0x0000000002d89d64: hlt    
  0x0000000002d89d65: hlt    
  0x0000000002d89d66: hlt    
  0x0000000002d89d67: hlt    
<nmethod compile_id='31' compiler='C1' level='3' entry='0x0000000002d89b40' size='1200' address='0x0000000002d899d0' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='928' scopes_pcs_offset='1000' dependencies_offset='1192' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='1534' iicount='1534' stamp='6.259'/>
<writer thread='21476'/>
<task_queued compile_id='34' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='384' iicount='384' level='3' stamp='6.259' comment='tiered' hot_count='384'/>
<task_queued compile_id='35' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='384' iicount='384' level='3' stamp='6.259' comment='tiered' hot_count='384'/>
<task_queued compile_id='36' method='java/io/DataInputStream readUTF ()Ljava/lang/String;' bytes='5' count='384' iicount='384' level='3' stamp='6.260' comment='tiered' hot_count='384'/>
<task_queued compile_id='37' method='java/io/DataInputStream readUnsignedShort ()I' bytes='39' count='384' iicount='384' level='3' stamp='6.260' comment='tiered' hot_count='384'/>
<task_queued compile_id='38' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='568' backedge_count='567' iicount='568' level='3' stamp='6.261' comment='tiered' hot_count='568'/>
<writer thread='5912'/>
<task_queued compile_id='39' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='640' iicount='640' level='3' stamp='6.262' comment='tiered' hot_count='640'/>
<task_queued compile_id='40' method='java/util/ArrayList size ()I' bytes='5' count='256' iicount='256' level='1' stamp='6.262' comment='tiered' hot_count='256'/>
<task_queued compile_id='41' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='768' iicount='768' level='3' stamp='6.262' comment='tiered' hot_count='768'/>
<writer thread='21476'/>
<task_queued compile_id='42' method='java/io/DataInputStream readShort ()S' bytes='40' count='640' iicount='640' level='3' stamp='6.263' comment='tiered' hot_count='640'/>
<task_queued compile_id='43' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='5430' iicount='5430' stamp='6.264' comment='tiered' hot_count='5430'/>
<writer thread='1944'/>
Decoding compiled method 0x0000000002d8cb10:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000194c2c58} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000002d8cc40: mov    0x8(%rdx),%r10d
  0x0000000002d8cc44: shl    $0x3,%r10
  0x0000000002d8cc48: cmp    %r10,%rax
  0x0000000002d8cc4b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d8cc51: data16 xchg %ax,%ax
  0x0000000002d8cc54: nopl   0x0(%rax,%rax,1)
  0x0000000002d8cc5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d8cc60: mov    %eax,-0x6000(%rsp)
  0x0000000002d8cc67: push   %rbp
  0x0000000002d8cc68: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)

  0x0000000002d8cc6c: mov    0x20(%rdx),%r10d   ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x0000000002d8cc70: test   %r10d,%r10d
  0x0000000002d8cc73: je     0x0000000002d8cc85  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x0000000002d8cc75: lea    (%r12,%r10,8),%rax  ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x0000000002d8cc79: add    $0x20,%rsp
  0x0000000002d8cc7d: pop    %rbp
  0x0000000002d8cc7e: test   %eax,-0x3fcc84(%rip)        # 0x0000000002990000
                                                ;   {poll_return}
  0x0000000002d8cc84: retq   
  0x0000000002d8cc85: mov    $0xffffff65,%edx
  0x0000000002d8cc8a: mov    %r10d,(%rsp)
  0x0000000002d8cc8e: nop
  0x0000000002d8cc8f: callq  0x0000000002cb57a0  ; OopMap{[0]=NarrowOop off=84}
                                                ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ;   {runtime_call}
  0x0000000002d8cc94: int3                      ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x0000000002d8cc95: hlt    
  0x0000000002d8cc96: hlt    
  0x0000000002d8cc97: hlt    
  0x0000000002d8cc98: hlt    
  0x0000000002d8cc99: hlt    
  0x0000000002d8cc9a: hlt    
  0x0000000002d8cc9b: hlt    
  0x0000000002d8cc9c: hlt    
  0x0000000002d8cc9d: hlt    
  0x0000000002d8cc9e: hlt    
  0x0000000002d8cc9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d8cca0: jmpq   0x0000000002cdf4a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002d8cca5: callq  0x0000000002d8ccaa
  0x0000000002d8ccaa: subq   $0x5,(%rsp)
  0x0000000002d8ccaf: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d8ccb4: hlt    
  0x0000000002d8ccb5: hlt    
  0x0000000002d8ccb6: hlt    
  0x0000000002d8ccb7: hlt    
<nmethod compile_id='43' compiler='C2' level='4' entry='0x0000000002d8cc40' size='608' address='0x0000000002d8cb10' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='472' dependencies_offset='600' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='7223' iicount='7223' stamp='6.269'/>
<make_not_entrant thread='1944' compile_id='31' compiler='C1' level='3' stamp='6.269'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d8e290:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;
  # parm0:    rdx:rdx   = &apos;java/io/DataInput&apos;
  #           [sp+0x110]  (sp of caller)
  0x0000000002d8e660: mov    %eax,-0x6000(%rsp)
  0x0000000002d8e667: push   %rbp
  0x0000000002d8e668: sub    $0x100,%rsp
  0x0000000002d8e66f: movabs $0x19654148,%rsi   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8e679: mov    0xdc(%rsi),%edi
  0x0000000002d8e67f: add    $0x8,%edi
  0x0000000002d8e682: mov    %edi,0xdc(%rsi)
  0x0000000002d8e688: movabs $0x19651bc0,%rsi   ;   {metadata({method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8e692: and    $0x1ff8,%edi
  0x0000000002d8e698: cmp    $0x0,%edi
  0x0000000002d8e69b: je     0x0000000002d90209  ;*aload_0
                                                ; - java.io.DataInputStream::readUTF@0 (line 589)

  0x0000000002d8e6a1: cmp    $0x0,%rdx
  0x0000000002d8e6a5: je     0x0000000002d8e6cb
  0x0000000002d8e6ab: movabs $0x7c0057e88,%rax  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x0000000002d8e6b5: mov    0x8(%rdx),%ebx
  0x0000000002d8e6b8: shl    $0x3,%rbx
  0x0000000002d8e6bc: cmp    0x40(%rbx),%rax
  0x0000000002d8e6c0: jne    0x0000000002d90220
  0x0000000002d8e6c6: jmpq   0x0000000002d8e6cb
  0x0000000002d8e6cb: mov    %rdx,%rsi
  0x0000000002d8e6ce: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000000002d90225
  0x0000000002d8e6d1: mov    %rdx,%rsi
  0x0000000002d8e6d4: movabs $0x19654148,%rdi   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8e6de: addq   $0x1,0x118(%rdi)
  0x0000000002d8e6e6: mov    %rdx,%rsi
  0x0000000002d8e6e9: mov    %rsi,%rdx          ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)

  0x0000000002d8e6ec: mov    %rsi,0x68(%rsp)
  0x0000000002d8e6f1: nop
  0x0000000002d8e6f2: nop
  0x0000000002d8e6f3: nop
  0x0000000002d8e6f4: nop
  0x0000000002d8e6f5: nop
  0x0000000002d8e6f6: nop
  0x0000000002d8e6f7: callq  0x0000000002cb61a0  ; OopMap{[104]=Oop off=156}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {optimized virtual_call}
  0x0000000002d8e6fc: mov    0x68(%rsp),%r11
  0x0000000002d8e701: cmp    $0x0,%r11
  0x0000000002d8e705: jne    0x0000000002d8e720
  0x0000000002d8e707: movabs $0x19654148,%rsi   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8e711: orl    $0x100,0x130(%rsi)
  0x0000000002d8e71b: jmpq   0x0000000002d8e7e2
  0x0000000002d8e720: movabs $0x7c0057e88,%rdi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x0000000002d8e72a: mov    0x8(%r11),%edx
  0x0000000002d8e72e: shl    $0x3,%rdx
  0x0000000002d8e732: cmp    %rdx,%rdi
  0x0000000002d8e735: jne    0x0000000002d8e7c6
  0x0000000002d8e73b: movabs $0x19654148,%rsi   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8e745: mov    0x8(%r11),%edi
  0x0000000002d8e749: shl    $0x3,%rdi
  0x0000000002d8e74d: cmp    0x140(%rsi),%rdi
  0x0000000002d8e754: jne    0x0000000002d8e763
  0x0000000002d8e756: addq   $0x1,0x148(%rsi)
  0x0000000002d8e75e: jmpq   0x0000000002d8e7e7
  0x0000000002d8e763: cmp    0x150(%rsi),%rdi
  0x0000000002d8e76a: jne    0x0000000002d8e779
  0x0000000002d8e76c: addq   $0x1,0x158(%rsi)
  0x0000000002d8e774: jmpq   0x0000000002d8e7e7
  0x0000000002d8e779: cmpq   $0x0,0x140(%rsi)
  0x0000000002d8e784: jne    0x0000000002d8e79d
  0x0000000002d8e786: mov    %rdi,0x140(%rsi)
  0x0000000002d8e78d: movq   $0x1,0x148(%rsi)
  0x0000000002d8e798: jmpq   0x0000000002d8e7e7
  0x0000000002d8e79d: cmpq   $0x0,0x150(%rsi)
  0x0000000002d8e7a8: jne    0x0000000002d8e7c1
  0x0000000002d8e7aa: mov    %rdi,0x150(%rsi)
  0x0000000002d8e7b1: movq   $0x1,0x158(%rsi)
  0x0000000002d8e7bc: jmpq   0x0000000002d8e7e7
  0x0000000002d8e7c1: jmpq   0x0000000002d8e7e7
  0x0000000002d8e7c6: movabs $0x19654148,%rsi   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8e7d0: subq   $0x1,0x138(%rsi)
  0x0000000002d8e7d8: jmpq   0x0000000002d8e7e2
  0x0000000002d8e7dd: jmpq   0x0000000002d8e7e7
  0x0000000002d8e7e2: xor    %rbx,%rbx
  0x0000000002d8e7e5: jmp    0x0000000002d8e7f1
  0x0000000002d8e7e7: movabs $0x1,%rbx          ;*instanceof
                                                ; - java.io.DataInputStream::readUTF@12 (line 592)

  0x0000000002d8e7f1: cmp    $0x0,%ebx
  0x0000000002d8e7f4: movabs $0x19654148,%rbx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8e7fe: movabs $0x168,%rdx
  0x0000000002d8e808: je     0x0000000002d8e818
  0x0000000002d8e80e: movabs $0x178,%rdx
  0x0000000002d8e818: mov    (%rbx,%rdx,1),%rsi
  0x0000000002d8e81c: lea    0x1(%rsi),%rsi
  0x0000000002d8e820: mov    %rsi,(%rbx,%rdx,1)
  0x0000000002d8e824: je     0x0000000002d8eab3  ;*ifeq
                                                ; - java.io.DataInputStream::readUTF@15 (line 592)

  0x0000000002d8e82a: cmp    $0x0,%r11
  0x0000000002d8e82e: jne    0x0000000002d8e849
  0x0000000002d8e830: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8e83a: orl    $0x100,0x180(%rdx)
  0x0000000002d8e844: jmpq   0x0000000002d8e90b
  0x0000000002d8e849: movabs $0x7c0057e88,%rsi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x0000000002d8e853: mov    0x8(%r11),%ebx
  0x0000000002d8e857: shl    $0x3,%rbx
  0x0000000002d8e85b: cmp    %rbx,%rsi
  0x0000000002d8e85e: jne    0x0000000002d8e8ef
  0x0000000002d8e864: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8e86e: mov    0x8(%r11),%esi
  0x0000000002d8e872: shl    $0x3,%rsi
  0x0000000002d8e876: cmp    0x190(%rdx),%rsi
  0x0000000002d8e87d: jne    0x0000000002d8e88c
  0x0000000002d8e87f: addq   $0x1,0x198(%rdx)
  0x0000000002d8e887: jmpq   0x0000000002d8e90b
  0x0000000002d8e88c: cmp    0x1a0(%rdx),%rsi
  0x0000000002d8e893: jne    0x0000000002d8e8a2
  0x0000000002d8e895: addq   $0x1,0x1a8(%rdx)
  0x0000000002d8e89d: jmpq   0x0000000002d8e90b
  0x0000000002d8e8a2: cmpq   $0x0,0x190(%rdx)
  0x0000000002d8e8ad: jne    0x0000000002d8e8c6
  0x0000000002d8e8af: mov    %rsi,0x190(%rdx)
  0x0000000002d8e8b6: movq   $0x1,0x198(%rdx)
  0x0000000002d8e8c1: jmpq   0x0000000002d8e90b
  0x0000000002d8e8c6: cmpq   $0x0,0x1a0(%rdx)
  0x0000000002d8e8d1: jne    0x0000000002d8e8ea
  0x0000000002d8e8d3: mov    %rsi,0x1a0(%rdx)
  0x0000000002d8e8da: movq   $0x1,0x1a8(%rdx)
  0x0000000002d8e8e5: jmpq   0x0000000002d8e90b
  0x0000000002d8e8ea: jmpq   0x0000000002d8e90b
  0x0000000002d8e8ef: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8e8f9: subq   $0x1,0x188(%rdx)
  0x0000000002d8e901: jmpq   0x0000000002d9022a
  0x0000000002d8e906: jmpq   0x0000000002d8e90b
  0x0000000002d8e90b: mov    %r11,%r8           ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)

  0x0000000002d8e90e: mov    0x10(%r8),%ebx     ; implicit exception: dispatches to 0x0000000002d90233
  0x0000000002d8e912: shl    $0x3,%rbx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)

  0x0000000002d8e916: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ; implicit exception: dispatches to 0x0000000002d90238
  0x0000000002d8e919: cmp    %eax,%ebx
  0x0000000002d8e91b: movabs $0x19654148,%rbx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8e925: movabs $0x1b8,%rdx
  0x0000000002d8e92f: jge    0x0000000002d8e93f
  0x0000000002d8e935: movabs $0x1c8,%rdx
  0x0000000002d8e93f: mov    (%rbx,%rdx,1),%rsi
  0x0000000002d8e943: lea    0x1(%rsi),%rsi
  0x0000000002d8e947: mov    %rsi,(%rbx,%rdx,1)
  0x0000000002d8e94b: jl     0x0000000002d8e959  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@31 (line 594)

  0x0000000002d8e951: mov    %rax,%r13
  0x0000000002d8e954: jmpq   0x0000000002d8ea8e  ;*aload
                                                ; - java.io.DataInputStream::readUTF@54 (line 598)

  0x0000000002d8e959: mov    %rax,%r9
  0x0000000002d8e95c: shl    %r9d
  0x0000000002d8e95f: mov    %r9,%rbx
  0x0000000002d8e962: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x0000000002d8e96c: mov    %rax,%r13
  0x0000000002d8e96f: movslq %ebx,%rbx
  0x0000000002d8e972: mov    %rbx,%rdi
  0x0000000002d8e975: cmp    $0xffffff,%rbx
  0x0000000002d8e97c: ja     0x0000000002d9023d
  0x0000000002d8e982: movabs $0x17,%rsi
  0x0000000002d8e98c: lea    (%rsi,%rbx,1),%rsi
  0x0000000002d8e990: and    $0xfffffffffffffff8,%rsi
  0x0000000002d8e994: mov    0x60(%r15),%rax
  0x0000000002d8e998: lea    (%rax,%rsi,1),%rsi
  0x0000000002d8e99c: cmp    0x70(%r15),%rsi
  0x0000000002d8e9a0: ja     0x0000000002d9023d
  0x0000000002d8e9a6: mov    %rsi,0x60(%r15)
  0x0000000002d8e9aa: sub    %rax,%rsi
  0x0000000002d8e9ad: movq   $0x1,(%rax)
  0x0000000002d8e9b4: mov    %rdx,%rcx
  0x0000000002d8e9b7: shr    $0x3,%rcx
  0x0000000002d8e9bb: mov    %ecx,0x8(%rax)
  0x0000000002d8e9be: mov    %ebx,0xc(%rax)
  0x0000000002d8e9c1: sub    $0x10,%rsi
  0x0000000002d8e9c5: je     0x0000000002d8e9dc
  0x0000000002d8e9cb: xor    %rbx,%rbx
  0x0000000002d8e9ce: shr    $0x3,%rsi
  0x0000000002d8e9d2: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002d8e9d7: dec    %rsi
  0x0000000002d8e9da: jne    0x0000000002d8e9d2  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)

  0x0000000002d8e9dc: mov    %rax,%r10
  0x0000000002d8e9df: shr    $0x3,%r10
  0x0000000002d8e9e3: mov    %r10d,0x10(%r8)
  0x0000000002d8e9e7: mov    %r8,%rbx
  0x0000000002d8e9ea: shr    $0x9,%rbx
  0x0000000002d8e9ee: movabs $0xe824000,%r14
  0x0000000002d8e9f8: movb   $0x0,(%rbx,%r14,1)  ;*putfield bytearr
                                                ; - java.io.DataInputStream::readUTF@41 (line 595)

  0x0000000002d8e9fd: mov    %r9,%rbx
  0x0000000002d8ea00: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002d8ea0a: movslq %ebx,%rbx
  0x0000000002d8ea0d: mov    %rbx,%rdi
  0x0000000002d8ea10: cmp    $0xffffff,%rbx
  0x0000000002d8ea17: ja     0x0000000002d90247
  0x0000000002d8ea1d: movabs $0x17,%rsi
  0x0000000002d8ea27: lea    (%rsi,%rbx,2),%rsi
  0x0000000002d8ea2b: and    $0xfffffffffffffff8,%rsi
  0x0000000002d8ea2f: mov    0x60(%r15),%rax
  0x0000000002d8ea33: lea    (%rax,%rsi,1),%rsi
  0x0000000002d8ea37: cmp    0x70(%r15),%rsi
  0x0000000002d8ea3b: ja     0x0000000002d90247
  0x0000000002d8ea41: mov    %rsi,0x60(%r15)
  0x0000000002d8ea45: sub    %rax,%rsi
  0x0000000002d8ea48: movq   $0x1,(%rax)
  0x0000000002d8ea4f: mov    %rdx,%rcx
  0x0000000002d8ea52: shr    $0x3,%rcx
  0x0000000002d8ea56: mov    %ecx,0x8(%rax)
  0x0000000002d8ea59: mov    %ebx,0xc(%rax)
  0x0000000002d8ea5c: sub    $0x10,%rsi
  0x0000000002d8ea60: je     0x0000000002d8ea77
  0x0000000002d8ea66: xor    %rbx,%rbx
  0x0000000002d8ea69: shr    $0x3,%rsi
  0x0000000002d8ea6d: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002d8ea72: dec    %rsi
  0x0000000002d8ea75: jne    0x0000000002d8ea6d  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)

  0x0000000002d8ea77: mov    %rax,%r10
  0x0000000002d8ea7a: shr    $0x3,%r10
  0x0000000002d8ea7e: mov    %r10d,0x14(%r8)
  0x0000000002d8ea82: mov    %r8,%rbx
  0x0000000002d8ea85: shr    $0x9,%rbx
  0x0000000002d8ea89: movb   $0x0,(%rbx,%r14,1)  ;*putfield chararr
                                                ; - java.io.DataInputStream::readUTF@51 (line 596)

  0x0000000002d8ea8e: mov    0x14(%r8),%ebx
  0x0000000002d8ea92: shl    $0x3,%rbx          ;*getfield chararr
                                                ; - java.io.DataInputStream::readUTF@56 (line 598)

  0x0000000002d8ea96: mov    0x10(%r8),%edx
  0x0000000002d8ea9a: shl    $0x3,%rdx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@62 (line 599)

  0x0000000002d8ea9e: movabs $0x19654148,%rsi   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8eaa8: incl   0x1d8(%rsi)
  0x0000000002d8eaae: jmpq   0x0000000002d8ebb3  ;*goto
                                                ; - java.io.DataInputStream::readUTF@66 (line 600)

  0x0000000002d8eab3: mov    %rax,%r13
  0x0000000002d8eab6: mov    %r13,%rbx
  0x0000000002d8eab9: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x0000000002d8eac3: movslq %ebx,%rbx
  0x0000000002d8eac6: mov    %rbx,%rdi
  0x0000000002d8eac9: cmp    $0xffffff,%rbx
  0x0000000002d8ead0: ja     0x0000000002d90251
  0x0000000002d8ead6: movabs $0x17,%rsi
  0x0000000002d8eae0: lea    (%rsi,%rbx,1),%rsi
  0x0000000002d8eae4: and    $0xfffffffffffffff8,%rsi
  0x0000000002d8eae8: mov    0x60(%r15),%rax
  0x0000000002d8eaec: lea    (%rax,%rsi,1),%rsi
  0x0000000002d8eaf0: cmp    0x70(%r15),%rsi
  0x0000000002d8eaf4: ja     0x0000000002d90251
  0x0000000002d8eafa: mov    %rsi,0x60(%r15)
  0x0000000002d8eafe: sub    %rax,%rsi
  0x0000000002d8eb01: movq   $0x1,(%rax)
  0x0000000002d8eb08: mov    %rdx,%rcx
  0x0000000002d8eb0b: shr    $0x3,%rcx
  0x0000000002d8eb0f: mov    %ecx,0x8(%rax)
  0x0000000002d8eb12: mov    %ebx,0xc(%rax)
  0x0000000002d8eb15: sub    $0x10,%rsi
  0x0000000002d8eb19: je     0x0000000002d8eb30
  0x0000000002d8eb1f: xor    %rbx,%rbx
  0x0000000002d8eb22: shr    $0x3,%rsi
  0x0000000002d8eb26: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002d8eb2b: dec    %rsi
  0x0000000002d8eb2e: jne    0x0000000002d8eb26
  0x0000000002d8eb30: mov    %rax,%r8           ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)

  0x0000000002d8eb33: mov    %r13,%rbx
  0x0000000002d8eb36: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002d8eb40: movslq %ebx,%rbx
  0x0000000002d8eb43: mov    %rbx,%rdi
  0x0000000002d8eb46: cmp    $0xffffff,%rbx
  0x0000000002d8eb4d: ja     0x0000000002d9025b
  0x0000000002d8eb53: movabs $0x17,%rsi
  0x0000000002d8eb5d: lea    (%rsi,%rbx,2),%rsi
  0x0000000002d8eb61: and    $0xfffffffffffffff8,%rsi
  0x0000000002d8eb65: mov    0x60(%r15),%rax
  0x0000000002d8eb69: lea    (%rax,%rsi,1),%rsi
  0x0000000002d8eb6d: cmp    0x70(%r15),%rsi
  0x0000000002d8eb71: ja     0x0000000002d9025b
  0x0000000002d8eb77: mov    %rsi,0x60(%r15)
  0x0000000002d8eb7b: sub    %rax,%rsi
  0x0000000002d8eb7e: movq   $0x1,(%rax)
  0x0000000002d8eb85: mov    %rdx,%rcx
  0x0000000002d8eb88: shr    $0x3,%rcx
  0x0000000002d8eb8c: mov    %ecx,0x8(%rax)
  0x0000000002d8eb8f: mov    %ebx,0xc(%rax)
  0x0000000002d8eb92: sub    $0x10,%rsi
  0x0000000002d8eb96: je     0x0000000002d8ebad
  0x0000000002d8eb9c: xor    %rbx,%rbx
  0x0000000002d8eb9f: shr    $0x3,%rsi
  0x0000000002d8eba3: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002d8eba8: dec    %rsi
  0x0000000002d8ebab: jne    0x0000000002d8eba3  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)

  0x0000000002d8ebad: mov    %rax,%rbx
  0x0000000002d8ebb0: mov    %r8,%rdx           ;*iconst_0
                                                ; - java.io.DataInputStream::readUTF@77 (line 606)

  0x0000000002d8ebb3: mov    %rbx,0x80(%rsp)
  0x0000000002d8ebbb: cmp    $0x0,%r11
  0x0000000002d8ebbf: je     0x0000000002d8ebe6
  0x0000000002d8ebc5: movabs $0x7c0057e88,%rsi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x0000000002d8ebcf: mov    0x8(%r11),%edi
  0x0000000002d8ebd3: shl    $0x3,%rdi
  0x0000000002d8ebd7: cmp    0x40(%rdi),%rsi
  0x0000000002d8ebdb: jne    0x0000000002d90265
  0x0000000002d8ebe1: jmpq   0x0000000002d8ebe6
  0x0000000002d8ebe6: mov    %r11,%r8
  0x0000000002d8ebe9: mov    %r11,%r8
  0x0000000002d8ebec: movabs $0x19654148,%r9    ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8ebf6: addq   $0x1,0x200(%r9)
  0x0000000002d8ebfe: mov    %rdx,%r8
  0x0000000002d8ec01: mov    $0x0,%r9d
  0x0000000002d8ec07: mov    %r13,%rdi
  0x0000000002d8ec0a: mov    %rdx,0x78(%rsp)
  0x0000000002d8ec0f: mov    %r11,%rdx          ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)

  0x0000000002d8ec12: mov    %r13d,0x70(%rsp)
  0x0000000002d8ec17: callq  0x0000000002cb61a0  ; OopMap{[120]=Oop [128]=Oop off=1468}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {optimized virtual_call}
  0x0000000002d8ec1c: mov    $0x0,%edx
  0x0000000002d8ec21: mov    $0x0,%esi
  0x0000000002d8ec26: mov    0x80(%rsp),%rbx
  0x0000000002d8ec2e: mov    0x78(%rsp),%rdi
  0x0000000002d8ec33: mov    0x70(%rsp),%eax
  0x0000000002d8ec37: jmpq   0x0000000002d8ecf5  ;*iload
                                                ; - java.io.DataInputStream::readUTF@92 (line 611)

  0x0000000002d8ec3c: nopl   0x0(%rax)
  0x0000000002d8ec40: movslq %esi,%rcx
  0x0000000002d8ec43: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x0000000002d9026a
  0x0000000002d8ec46: jae    0x0000000002d90274
  0x0000000002d8ec4c: movsbl 0x10(%rdi,%rcx,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)

  0x0000000002d8ec51: and    $0xff,%ecx
  0x0000000002d8ec57: cmp    $0x7f,%ecx
  0x0000000002d8ec5a: movabs $0x19654148,%r8    ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8ec64: movabs $0x240,%r9
  0x0000000002d8ec6e: jle    0x0000000002d8ec7e
  0x0000000002d8ec74: movabs $0x250,%r9
  0x0000000002d8ec7e: mov    (%r8,%r9,1),%r11
  0x0000000002d8ec82: lea    0x1(%r11),%r11
  0x0000000002d8ec86: mov    %r11,(%r8,%r9,1)
  0x0000000002d8ec8a: jg     0x0000000002d8ed35  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@112 (line 613)

  0x0000000002d8ec90: inc    %esi
  0x0000000002d8ec92: mov    %rdx,%r8
  0x0000000002d8ec95: inc    %r8d
  0x0000000002d8ec98: movslq %edx,%r9
  0x0000000002d8ec9b: cmp    0xc(%rbx),%edx     ; implicit exception: dispatches to 0x0000000002d9027d
  0x0000000002d8ec9e: jae    0x0000000002d90287
  0x0000000002d8eca4: mov    %cx,0x10(%rbx,%r9,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)

  0x0000000002d8ecaa: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8ecb4: mov    0xe0(%rdx),%ecx
  0x0000000002d8ecba: add    $0x8,%ecx
  0x0000000002d8ecbd: mov    %ecx,0xe0(%rdx)
  0x0000000002d8ecc3: movabs $0x19651bc0,%rdx   ;   {metadata({method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8eccd: and    $0xfff8,%ecx
  0x0000000002d8ecd3: cmp    $0x0,%ecx
  0x0000000002d8ecd6: je     0x0000000002d90290  ; OopMap{rbx=Oop rdi=Oop off=1660}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x0000000002d8ecdc: test   %eax,-0x3febe2(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d8ece2: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8ecec: incl   0x278(%rdx)
  0x0000000002d8ecf2: mov    %r8,%rdx           ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x0000000002d8ecf5: cmp    %eax,%esi
  0x0000000002d8ecf7: movabs $0x19654148,%rcx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8ed01: movabs $0x220,%r8
  0x0000000002d8ed0b: jge    0x0000000002d8ed1b
  0x0000000002d8ed11: movabs $0x230,%r8
  0x0000000002d8ed1b: mov    (%rcx,%r8,1),%r9
  0x0000000002d8ed1f: lea    0x1(%r9),%r9
  0x0000000002d8ed23: mov    %r9,(%rcx,%r8,1)
  0x0000000002d8ed27: jl     0x0000000002d8ec40  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@95 (line 611)

  0x0000000002d8ed2d: mov    %rdx,%r11
  0x0000000002d8ed30: jmpq   0x0000000002d8ed48  ;*iload
                                                ; - java.io.DataInputStream::readUTF@134 (line 618)

  0x0000000002d8ed35: movabs $0x19654148,%rcx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8ed3f: incl   0x260(%rcx)
  0x0000000002d8ed45: mov    %rdx,%r11          ;*goto
                                                ; - java.io.DataInputStream::readUTF@115 (line 613)

  0x0000000002d8ed48: cmp    %eax,%esi
  0x0000000002d8ed4a: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8ed54: movabs $0x290,%rcx
  0x0000000002d8ed5e: jge    0x0000000002d8ed6e
  0x0000000002d8ed64: movabs $0x2a0,%rcx
  0x0000000002d8ed6e: mov    (%rdx,%rcx,1),%r8
  0x0000000002d8ed72: lea    0x1(%r8),%r8
  0x0000000002d8ed76: mov    %r8,(%rdx,%rcx,1)
  0x0000000002d8ed7a: jge    0x0000000002d8f0db  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@137 (line 618)

  0x0000000002d8ed80: movslq %esi,%rdx
  0x0000000002d8ed83: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x0000000002d902a7
  0x0000000002d8ed86: jae    0x0000000002d902b1
  0x0000000002d8ed8c: movsbl 0x10(%rdi,%rdx,1),%edx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)

  0x0000000002d8ed91: and    $0xff,%edx
  0x0000000002d8ed97: mov    %rdx,%rcx
  0x0000000002d8ed9a: sar    $0x4,%ecx
  0x0000000002d8ed9d: cmp    $0x0,%ecx
  0x0000000002d8eda0: jl     0x0000000002d8edaf
  0x0000000002d8eda6: cmp    $0x7,%ecx
  0x0000000002d8eda9: jle    0x0000000002d8f060
  0x0000000002d8edaf: cmp    $0xc,%ecx
  0x0000000002d8edb2: je     0x0000000002d8edcf
  0x0000000002d8edb8: cmp    $0xd,%ecx
  0x0000000002d8edbb: je     0x0000000002d8edcf
  0x0000000002d8edc1: cmp    $0xe,%ecx
  0x0000000002d8edc4: je     0x0000000002d8ee6d
  0x0000000002d8edca: jmpq   0x0000000002d8f0cf  ;*tableswitch
                                                ; - java.io.DataInputStream::readUTF@154 (line 620)

  0x0000000002d8edcf: add    $0x2,%esi
  0x0000000002d8edd2: cmp    %eax,%esi
  0x0000000002d8edd4: movabs $0x19654148,%rcx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8edde: movabs $0x3d8,%r8
  0x0000000002d8ede8: jle    0x0000000002d8edf8
  0x0000000002d8edee: movabs $0x3e8,%r8
  0x0000000002d8edf8: mov    (%rcx,%r8,1),%r9
  0x0000000002d8edfc: lea    0x1(%r9),%r9
  0x0000000002d8ee00: mov    %r9,(%rcx,%r8,1)
  0x0000000002d8ee04: jg     0x0000000002d901b1  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@250 (line 629)

  0x0000000002d8ee0a: mov    %rsi,%rcx
  0x0000000002d8ee0d: dec    %ecx
  0x0000000002d8ee0f: movslq %ecx,%r8
  0x0000000002d8ee12: cmp    0xc(%rdi),%ecx
  0x0000000002d8ee15: jae    0x0000000002d902ba
  0x0000000002d8ee1b: movsbl 0x10(%rdi,%r8,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)

  0x0000000002d8ee21: mov    %rcx,%r8
  0x0000000002d8ee24: and    $0xc0,%r8d
  0x0000000002d8ee2b: cmp    $0x80,%r8d
  0x0000000002d8ee32: movabs $0x19654148,%r8    ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8ee3c: movabs $0x408,%r9
  0x0000000002d8ee46: je     0x0000000002d8ee56
  0x0000000002d8ee4c: movabs $0x418,%r9
  0x0000000002d8ee56: mov    (%r8,%r9,1),%r13
  0x0000000002d8ee5a: lea    0x1(%r13),%r13
  0x0000000002d8ee5e: mov    %r13,(%r8,%r9,1)
  0x0000000002d8ee62: je     0x0000000002d8efec
  0x0000000002d8ee68: jmpq   0x0000000002d8fc61  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@280 (line 633)

  0x0000000002d8ee6d: add    $0x3,%esi
  0x0000000002d8ee70: cmp    %eax,%esi
  0x0000000002d8ee72: movabs $0x19654148,%rcx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8ee7c: movabs $0x4f0,%r8
  0x0000000002d8ee86: jle    0x0000000002d8ee96
  0x0000000002d8ee8c: movabs $0x500,%r8
  0x0000000002d8ee96: mov    (%rcx,%r8,1),%r9
  0x0000000002d8ee9a: lea    0x1(%r9),%r9
  0x0000000002d8ee9e: mov    %r9,(%rcx,%r8,1)
  0x0000000002d8eea2: jg     0x0000000002d8fc09  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@342 (line 642)

  0x0000000002d8eea8: mov    %rsi,%rcx
  0x0000000002d8eeab: sub    $0x2,%ecx
  0x0000000002d8eeae: movslq %ecx,%r8
  0x0000000002d8eeb1: cmp    0xc(%rdi),%ecx
  0x0000000002d8eeb4: jae    0x0000000002d902c3
  0x0000000002d8eeba: movsbl 0x10(%rdi,%r8,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)

  0x0000000002d8eec0: mov    %rsi,%r9
  0x0000000002d8eec3: dec    %r9d
  0x0000000002d8eec6: mov    %r9d,0x74(%rsp)
  0x0000000002d8eecb: movslq %r9d,%r8
  0x0000000002d8eece: cmp    0xc(%rdi),%r9d
  0x0000000002d8eed2: jae    0x0000000002d902cc
  0x0000000002d8eed8: movsbl 0x10(%rdi,%r8,1),%r8d  ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)

  0x0000000002d8eede: mov    %rcx,%r13
  0x0000000002d8eee1: and    $0xc0,%r13d
  0x0000000002d8eee8: cmp    $0x80,%r13d
  0x0000000002d8eeef: movabs $0x19654148,%r13   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8eef9: movabs $0x520,%r14
  0x0000000002d8ef03: jne    0x0000000002d8ef13
  0x0000000002d8ef09: movabs $0x530,%r14
  0x0000000002d8ef13: mov    0x0(%r13,%r14,1),%r9
  0x0000000002d8ef18: lea    0x1(%r9),%r9
  0x0000000002d8ef1c: mov    %r9,0x0(%r13,%r14,1)
  0x0000000002d8ef21: jne    0x0000000002d8f6b9  ;*if_icmpne
                                                ; - java.io.DataInputStream::readUTF@380 (line 647)

  0x0000000002d8ef27: mov    %r8,%r9
  0x0000000002d8ef2a: and    $0xc0,%r9d
  0x0000000002d8ef31: cmp    $0x80,%r9d
  0x0000000002d8ef38: movabs $0x19654148,%r9    ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8ef42: movabs $0x540,%r13
  0x0000000002d8ef4c: je     0x0000000002d8ef5c
  0x0000000002d8ef52: movabs $0x550,%r13
  0x0000000002d8ef5c: mov    (%r9,%r13,1),%r14
  0x0000000002d8ef60: lea    0x1(%r14),%r14
  0x0000000002d8ef64: mov    %r14,(%r9,%r13,1)
  0x0000000002d8ef68: jne    0x0000000002d8f6b9  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@392 (line 647)

  0x0000000002d8ef6e: mov    %r11,%r9
  0x0000000002d8ef71: inc    %r9d
  0x0000000002d8ef74: and    $0xf,%edx
  0x0000000002d8ef77: shl    $0xc,%edx
  0x0000000002d8ef7a: and    $0x3f,%ecx
  0x0000000002d8ef7d: shl    $0x6,%ecx
  0x0000000002d8ef80: or     %rcx,%rdx
  0x0000000002d8ef83: and    $0x3f,%r8d
  0x0000000002d8ef87: or     %r8,%rdx
  0x0000000002d8ef8a: movslq %r11d,%rcx
  0x0000000002d8ef8d: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x0000000002d902d5
  0x0000000002d8ef91: jae    0x0000000002d902df
  0x0000000002d8ef97: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)

  0x0000000002d8ef9c: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8efa6: mov    0xe0(%rdx),%ecx
  0x0000000002d8efac: add    $0x8,%ecx
  0x0000000002d8efaf: mov    %ecx,0xe0(%rdx)
  0x0000000002d8efb5: movabs $0x19651bc0,%rdx   ;   {metadata({method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8efbf: and    $0xfff8,%ecx
  0x0000000002d8efc5: cmp    $0x0,%ecx
  0x0000000002d8efc8: je     0x0000000002d902e8  ; OopMap{rbx=Oop rdi=Oop off=2414}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x0000000002d8efce: test   %eax,-0x3feed4(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d8efd4: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8efde: incl   0x610(%rdx)
  0x0000000002d8efe4: mov    %r9,%r11
  0x0000000002d8efe7: jmpq   0x0000000002d8ed48  ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x0000000002d8efec: mov    %r11,%r8
  0x0000000002d8efef: inc    %r8d
  0x0000000002d8eff2: and    $0x1f,%edx
  0x0000000002d8eff5: shl    $0x6,%edx
  0x0000000002d8eff8: and    $0x3f,%ecx
  0x0000000002d8effb: or     %rcx,%rdx
  0x0000000002d8effe: movslq %r11d,%rcx
  0x0000000002d8f001: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x0000000002d902ff
  0x0000000002d8f005: jae    0x0000000002d90309
  0x0000000002d8f00b: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)

  0x0000000002d8f010: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f01a: mov    0xe0(%rdx),%ecx
  0x0000000002d8f020: add    $0x8,%ecx
  0x0000000002d8f023: mov    %ecx,0xe0(%rdx)
  0x0000000002d8f029: movabs $0x19651bc0,%rdx   ;   {metadata({method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f033: and    $0xfff8,%ecx
  0x0000000002d8f039: cmp    $0x0,%ecx
  0x0000000002d8f03c: je     0x0000000002d90312  ; OopMap{rbx=Oop rdi=Oop off=2530}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x0000000002d8f042: test   %eax,-0x3fef48(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d8f048: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f052: incl   0x4d8(%rdx)
  0x0000000002d8f058: mov    %r8,%r11
  0x0000000002d8f05b: jmpq   0x0000000002d8ed48  ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x0000000002d8f060: inc    %esi
  0x0000000002d8f062: mov    %r11,%rcx
  0x0000000002d8f065: inc    %ecx
  0x0000000002d8f067: movslq %r11d,%r8
  0x0000000002d8f06a: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x0000000002d90329
  0x0000000002d8f06e: jae    0x0000000002d90333
  0x0000000002d8f074: mov    %dx,0x10(%rbx,%r8,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)

  0x0000000002d8f07a: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f084: mov    0xe0(%rdx),%r8d
  0x0000000002d8f08b: add    $0x8,%r8d
  0x0000000002d8f08f: mov    %r8d,0xe0(%rdx)
  0x0000000002d8f096: movabs $0x19651bc0,%rdx   ;   {metadata({method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f0a0: and    $0xfff8,%r8d
  0x0000000002d8f0a7: cmp    $0x0,%r8d
  0x0000000002d8f0ab: je     0x0000000002d9033c  ; OopMap{rbx=Oop rdi=Oop off=2641}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x0000000002d8f0b1: test   %eax,-0x3fefb7(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d8f0b7: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f0c1: incl   0x3c0(%rdx)
  0x0000000002d8f0c7: mov    %rcx,%r11
  0x0000000002d8f0ca: jmpq   0x0000000002d8ed48  ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x0000000002d8f0cf: mov    %esi,0x98(%rsp)
  0x0000000002d8f0d6: jmpq   0x0000000002d8f16b  ;*new
                                                ; - java.io.DataInputStream::readUTF@461 (line 656)

  0x0000000002d8f0db: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002d8f0e5: mov    0x60(%r15),%rax
  0x0000000002d8f0e9: lea    0x18(%rax),%rdi
  0x0000000002d8f0ed: cmp    0x70(%r15),%rdi
  0x0000000002d8f0f1: ja     0x0000000002d90353
  0x0000000002d8f0f7: mov    %rdi,0x60(%r15)
  0x0000000002d8f0fb: mov    0xa8(%rdx),%rcx
  0x0000000002d8f102: mov    %rcx,(%rax)
  0x0000000002d8f105: mov    %rdx,%rcx
  0x0000000002d8f108: shr    $0x3,%rcx
  0x0000000002d8f10c: mov    %ecx,0x8(%rax)
  0x0000000002d8f10f: xor    %rcx,%rcx
  0x0000000002d8f112: mov    %ecx,0xc(%rax)
  0x0000000002d8f115: xor    %rcx,%rcx
  0x0000000002d8f118: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)

  0x0000000002d8f11c: mov    %rax,%r8
  0x0000000002d8f11f: movabs $0x19654148,%r9    ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f129: addq   $0x1,0x6d8(%r9)
  0x0000000002d8f131: mov    %rbx,%r8
  0x0000000002d8f134: mov    $0x0,%r9d
  0x0000000002d8f13a: mov    %r11,%rdi
  0x0000000002d8f13d: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)

  0x0000000002d8f140: mov    %rax,0x88(%rsp)
  0x0000000002d8f148: nop
  0x0000000002d8f149: nop
  0x0000000002d8f14a: nop
  0x0000000002d8f14b: nop
  0x0000000002d8f14c: nop
  0x0000000002d8f14d: nop
  0x0000000002d8f14e: nop
  0x0000000002d8f14f: callq  0x0000000002cb61a0  ; OopMap{[136]=Oop off=2804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)
                                                ;   {optimized virtual_call}
  0x0000000002d8f154: mov    0x88(%rsp),%rax
  0x0000000002d8f15c: add    $0x100,%rsp
  0x0000000002d8f163: pop    %rbp
  0x0000000002d8f164: test   %eax,-0x3ff06a(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d8f16a: retq                      ;*areturn
                                                ; - java.io.DataInputStream::readUTF@500 (line 661)

  0x0000000002d8f16b: nopl   0x0(%rax,%rax,1)
  0x0000000002d8f170: jmpq   0x0000000002d9036f  ;   {no_reloc}
  0x0000000002d8f175: add    %al,(%rax)
  0x0000000002d8f177: add    %al,(%rax)
  0x0000000002d8f179: add    %ch,%cl
  0x0000000002d8f17b: cli    
  0x0000000002d8f17c: adc    %eax,(%rax)
  0x0000000002d8f17e: add    %dl,0x1210e9(%rax)  ;*new
                                                ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {no_reloc}
  0x0000000002d8f184: add    %al,(%rax)
  0x0000000002d8f186: add    %al,(%rax)
  0x0000000002d8f188: add    %al,(%rax)
  0x0000000002d8f18a: mov    %rax,0xa0(%rsp)
  0x0000000002d8f192: mov    0x60(%r15),%rax
  0x0000000002d8f196: lea    0x18(%rax),%rdi
  0x0000000002d8f19a: cmp    0x70(%r15),%rdi
  0x0000000002d8f19e: ja     0x0000000002d9039f
  0x0000000002d8f1a4: mov    %rdi,0x60(%r15)
  0x0000000002d8f1a8: mov    0xa8(%rdx),%rcx
  0x0000000002d8f1af: mov    %rcx,(%rax)
  0x0000000002d8f1b2: mov    %rdx,%rcx
  0x0000000002d8f1b5: shr    $0x3,%rcx
  0x0000000002d8f1b9: mov    %ecx,0x8(%rax)
  0x0000000002d8f1bc: xor    %rcx,%rcx
  0x0000000002d8f1bf: mov    %ecx,0xc(%rax)
  0x0000000002d8f1c2: xor    %rcx,%rcx
  0x0000000002d8f1c5: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)

  0x0000000002d8f1c9: mov    %rax,%rbx
  0x0000000002d8f1cc: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f1d6: addq   $0x1,0x628(%rdx)
  0x0000000002d8f1de: movabs $0x196471b8,%rbx   ;   {metadata(method data for {method} {0x00000000193e8650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f1e8: mov    0xdc(%rbx),%edx
  0x0000000002d8f1ee: add    $0x8,%edx
  0x0000000002d8f1f1: mov    %edx,0xdc(%rbx)
  0x0000000002d8f1f7: movabs $0x193e8648,%rbx   ;   {metadata({method} {0x00000000193e8650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f201: and    $0x7ffff8,%edx
  0x0000000002d8f207: cmp    $0x0,%edx
  0x0000000002d8f20a: je     0x0000000002d903ac
  0x0000000002d8f210: mov    %rax,%rbx
  0x0000000002d8f213: movabs $0x196471b8,%rdx   ;   {metadata(method data for {method} {0x00000000193e8650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f21d: addq   $0x1,0x108(%rdx)
  0x0000000002d8f225: movabs $0x19647308,%rbx   ;   {metadata(method data for {method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8f22f: mov    0xdc(%rbx),%edx
  0x0000000002d8f235: add    $0x8,%edx
  0x0000000002d8f238: mov    %edx,0xdc(%rbx)
  0x0000000002d8f23e: movabs $0x193e4978,%rbx   ;   {metadata({method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8f248: and    $0x7ffff8,%edx
  0x0000000002d8f24e: cmp    $0x0,%edx
  0x0000000002d8f251: je     0x0000000002d903c3
  0x0000000002d8f257: mov    %rax,%rbx
  0x0000000002d8f25a: movabs $0x19647308,%rdx   ;   {metadata(method data for {method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8f264: addq   $0x1,0x108(%rdx)
  0x0000000002d8f26c: movabs $0x194a47d8,%rbx   ;   {metadata(method data for {method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d8f276: mov    0xdc(%rbx),%edx
  0x0000000002d8f27c: add    $0x8,%edx
  0x0000000002d8f27f: mov    %edx,0xdc(%rbx)
  0x0000000002d8f285: movabs $0x19370480,%rbx   ;   {metadata({method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d8f28f: and    $0x7ffff8,%edx
  0x0000000002d8f295: cmp    $0x0,%edx
  0x0000000002d8f298: je     0x0000000002d903da
  0x0000000002d8f29e: mov    $0x10,%ebx
  0x0000000002d8f2a3: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002d8f2ad: mov    %rax,%r13
  0x0000000002d8f2b0: movslq %ebx,%rbx
  0x0000000002d8f2b3: mov    %rbx,%rdi
  0x0000000002d8f2b6: cmp    $0xffffff,%rbx
  0x0000000002d8f2bd: ja     0x0000000002d903f1
  0x0000000002d8f2c3: movabs $0x17,%rsi
  0x0000000002d8f2cd: lea    (%rsi,%rbx,2),%rsi
  0x0000000002d8f2d1: and    $0xfffffffffffffff8,%rsi
  0x0000000002d8f2d5: mov    0x60(%r15),%rax
  0x0000000002d8f2d9: lea    (%rax,%rsi,1),%rsi
  0x0000000002d8f2dd: cmp    0x70(%r15),%rsi
  0x0000000002d8f2e1: ja     0x0000000002d903f1
  0x0000000002d8f2e7: mov    %rsi,0x60(%r15)
  0x0000000002d8f2eb: sub    %rax,%rsi
  0x0000000002d8f2ee: movq   $0x1,(%rax)
  0x0000000002d8f2f5: mov    %rdx,%rcx
  0x0000000002d8f2f8: shr    $0x3,%rcx
  0x0000000002d8f2fc: mov    %ecx,0x8(%rax)
  0x0000000002d8f2ff: mov    %ebx,0xc(%rax)
  0x0000000002d8f302: sub    $0x10,%rsi
  0x0000000002d8f306: je     0x0000000002d8f31d
  0x0000000002d8f30c: xor    %rbx,%rbx
  0x0000000002d8f30f: shr    $0x3,%rsi
  0x0000000002d8f313: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002d8f318: dec    %rsi
  0x0000000002d8f31b: jne    0x0000000002d8f313  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x0000000002d8f31d: mov    %rax,%r10
  0x0000000002d8f320: shr    $0x3,%r10
  0x0000000002d8f324: mov    %r10d,0x10(%r13)
  0x0000000002d8f328: mov    %r13,%rax
  0x0000000002d8f32b: shr    $0x9,%rax
  0x0000000002d8f32f: movabs $0xe824000,%r8
  0x0000000002d8f339: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x0000000002d8f33e: mov    %r13,%rax
  0x0000000002d8f341: movabs $0x19654148,%r8    ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f34b: mov    0x8(%rax),%eax
  0x0000000002d8f34e: shl    $0x3,%rax
  0x0000000002d8f352: cmp    0x640(%r8),%rax
  0x0000000002d8f359: jne    0x0000000002d8f368
  0x0000000002d8f35b: addq   $0x1,0x648(%r8)
  0x0000000002d8f363: jmpq   0x0000000002d8f3ce
  0x0000000002d8f368: cmp    0x650(%r8),%rax
  0x0000000002d8f36f: jne    0x0000000002d8f37e
  0x0000000002d8f371: addq   $0x1,0x658(%r8)
  0x0000000002d8f379: jmpq   0x0000000002d8f3ce
  0x0000000002d8f37e: cmpq   $0x0,0x640(%r8)
  0x0000000002d8f389: jne    0x0000000002d8f3a2
  0x0000000002d8f38b: mov    %rax,0x640(%r8)
  0x0000000002d8f392: movq   $0x1,0x648(%r8)
  0x0000000002d8f39d: jmpq   0x0000000002d8f3ce
  0x0000000002d8f3a2: cmpq   $0x0,0x650(%r8)
  0x0000000002d8f3ad: jne    0x0000000002d8f3c6
  0x0000000002d8f3af: mov    %rax,0x650(%r8)
  0x0000000002d8f3b6: movq   $0x1,0x658(%r8)
  0x0000000002d8f3c1: jmpq   0x0000000002d8f3ce
  0x0000000002d8f3c6: addq   $0x1,0x638(%r8)
  0x0000000002d8f3ce: movabs $0x195a93d8,%r8    ;   {metadata(method data for {method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f3d8: mov    0xdc(%r8),%edx
  0x0000000002d8f3df: add    $0x8,%edx
  0x0000000002d8f3e2: mov    %edx,0xdc(%r8)
  0x0000000002d8f3e9: movabs $0x193e8960,%r8    ;   {metadata({method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f3f3: and    $0x7ffff8,%edx
  0x0000000002d8f3f9: cmp    $0x0,%edx
  0x0000000002d8f3fc: je     0x0000000002d903fb
  0x0000000002d8f402: mov    %r13,%rax
  0x0000000002d8f405: movabs $0x195a93d8,%r8    ;   {metadata(method data for {method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f40f: addq   $0x1,0x108(%r8)
  0x0000000002d8f417: movabs $0x780bd99b0,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x0000000002d8f421: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)

  0x0000000002d8f424: mov    %r13,0x90(%rsp)
  0x0000000002d8f42c: nop
  0x0000000002d8f42d: nop
  0x0000000002d8f42e: nop
  0x0000000002d8f42f: callq  0x0000000002cb61a0  ; OopMap{[144]=Oop [160]=Oop off=3540}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {optimized virtual_call}
  0x0000000002d8f434: mov    0x90(%rsp),%rax
  0x0000000002d8f43c: movabs $0x19654148,%r8    ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f446: mov    0x8(%rax),%eax
  0x0000000002d8f449: shl    $0x3,%rax
  0x0000000002d8f44d: cmp    0x670(%r8),%rax
  0x0000000002d8f454: jne    0x0000000002d8f463
  0x0000000002d8f456: addq   $0x1,0x678(%r8)
  0x0000000002d8f45e: jmpq   0x0000000002d8f4c9
  0x0000000002d8f463: cmp    0x680(%r8),%rax
  0x0000000002d8f46a: jne    0x0000000002d8f479
  0x0000000002d8f46c: addq   $0x1,0x688(%r8)
  0x0000000002d8f474: jmpq   0x0000000002d8f4c9
  0x0000000002d8f479: cmpq   $0x0,0x670(%r8)
  0x0000000002d8f484: jne    0x0000000002d8f49d
  0x0000000002d8f486: mov    %rax,0x670(%r8)
  0x0000000002d8f48d: movq   $0x1,0x678(%r8)
  0x0000000002d8f498: jmpq   0x0000000002d8f4c9
  0x0000000002d8f49d: cmpq   $0x0,0x680(%r8)
  0x0000000002d8f4a8: jne    0x0000000002d8f4c1
  0x0000000002d8f4aa: mov    %rax,0x680(%r8)
  0x0000000002d8f4b1: movq   $0x1,0x688(%r8)
  0x0000000002d8f4bc: jmpq   0x0000000002d8f4c9
  0x0000000002d8f4c1: addq   $0x1,0x668(%r8)
  0x0000000002d8f4c9: movabs $0x19647460,%r8    ;   {metadata(method data for {method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f4d3: mov    0xdc(%r8),%edx
  0x0000000002d8f4da: add    $0x8,%edx
  0x0000000002d8f4dd: mov    %edx,0xdc(%r8)
  0x0000000002d8f4e4: movabs $0x193e8e20,%r8    ;   {metadata({method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f4ee: and    $0x7ffff8,%edx
  0x0000000002d8f4f4: cmp    $0x0,%edx
  0x0000000002d8f4f7: je     0x0000000002d90412
  0x0000000002d8f4fd: mov    0x90(%rsp),%rax
  0x0000000002d8f505: movabs $0x19647460,%r8    ;   {metadata(method data for {method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f50f: addq   $0x1,0x108(%r8)
  0x0000000002d8f517: mov    0x98(%rsp),%r8d
  0x0000000002d8f51f: mov    0x90(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)

  0x0000000002d8f527: callq  0x0000000002cb61a0  ; OopMap{[144]=Oop [160]=Oop off=3788}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {optimized virtual_call}
  0x0000000002d8f52c: mov    0x90(%rsp),%rax
  0x0000000002d8f534: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f53e: mov    0x8(%rax),%eax
  0x0000000002d8f541: shl    $0x3,%rax
  0x0000000002d8f545: cmp    0x6a0(%rdx),%rax
  0x0000000002d8f54c: jne    0x0000000002d8f55b
  0x0000000002d8f54e: addq   $0x1,0x6a8(%rdx)
  0x0000000002d8f556: jmpq   0x0000000002d8f5c1
  0x0000000002d8f55b: cmp    0x6b0(%rdx),%rax
  0x0000000002d8f562: jne    0x0000000002d8f571
  0x0000000002d8f564: addq   $0x1,0x6b8(%rdx)
  0x0000000002d8f56c: jmpq   0x0000000002d8f5c1
  0x0000000002d8f571: cmpq   $0x0,0x6a0(%rdx)
  0x0000000002d8f57c: jne    0x0000000002d8f595
  0x0000000002d8f57e: mov    %rax,0x6a0(%rdx)
  0x0000000002d8f585: movq   $0x1,0x6a8(%rdx)
  0x0000000002d8f590: jmpq   0x0000000002d8f5c1
  0x0000000002d8f595: cmpq   $0x0,0x6b0(%rdx)
  0x0000000002d8f5a0: jne    0x0000000002d8f5b9
  0x0000000002d8f5a2: mov    %rax,0x6b0(%rdx)
  0x0000000002d8f5a9: movq   $0x1,0x6b8(%rdx)
  0x0000000002d8f5b4: jmpq   0x0000000002d8f5c1
  0x0000000002d8f5b9: addq   $0x1,0x698(%rdx)
  0x0000000002d8f5c1: movabs $0x196477b0,%rdx   ;   {metadata(method data for {method} {0x00000000193e9d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f5cb: mov    0xdc(%rdx),%esi
  0x0000000002d8f5d1: add    $0x8,%esi
  0x0000000002d8f5d4: mov    %esi,0xdc(%rdx)
  0x0000000002d8f5da: movabs $0x193e9d10,%rdx   ;   {metadata({method} {0x00000000193e9d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f5e4: and    $0x7ffff8,%esi
  0x0000000002d8f5ea: cmp    $0x0,%esi
  0x0000000002d8f5ed: je     0x0000000002d90429
  0x0000000002d8f5f3: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002d8f5fd: mov    0x60(%r15),%rax
  0x0000000002d8f601: lea    0x18(%rax),%rdi
  0x0000000002d8f605: cmp    0x70(%r15),%rdi
  0x0000000002d8f609: ja     0x0000000002d90440
  0x0000000002d8f60f: mov    %rdi,0x60(%r15)
  0x0000000002d8f613: mov    0xa8(%rdx),%rcx
  0x0000000002d8f61a: mov    %rcx,(%rax)
  0x0000000002d8f61d: mov    %rdx,%rcx
  0x0000000002d8f620: shr    $0x3,%rcx
  0x0000000002d8f624: mov    %ecx,0x8(%rax)
  0x0000000002d8f627: xor    %rcx,%rcx
  0x0000000002d8f62a: mov    %ecx,0xc(%rax)
  0x0000000002d8f62d: xor    %rcx,%rcx
  0x0000000002d8f630: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x0000000002d8f634: mov    0x90(%rsp),%r8
  0x0000000002d8f63c: mov    0x10(%r8),%r9d
  0x0000000002d8f640: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x0000000002d8f644: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x0000000002d8f648: mov    %rax,%r8
  0x0000000002d8f64b: movabs $0x196477b0,%rdx   ;   {metadata(method data for {method} {0x00000000193e9d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f655: addq   $0x1,0x108(%rdx)
  0x0000000002d8f65d: mov    %r9,%r8
  0x0000000002d8f660: mov    $0x0,%r9d
  0x0000000002d8f666: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x0000000002d8f669: mov    %rax,0xa8(%rsp)
  0x0000000002d8f671: nop
  0x0000000002d8f672: nop
  0x0000000002d8f673: nop
  0x0000000002d8f674: nop
  0x0000000002d8f675: nop
  0x0000000002d8f676: nop
  0x0000000002d8f677: callq  0x0000000002cb61a0  ; OopMap{[160]=Oop [168]=Oop off=4124}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {optimized virtual_call}
  0x0000000002d8f67c: mov    0xa0(%rsp),%rax
  0x0000000002d8f684: movabs $0x19654148,%r8    ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f68e: addq   $0x1,0x6c8(%r8)
  0x0000000002d8f696: mov    0xa8(%rsp),%r8
  0x0000000002d8f69e: mov    0xa0(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)

  0x0000000002d8f6a6: nop
  0x0000000002d8f6a7: callq  0x0000000002cb61a0  ; OopMap{[160]=Oop off=4172}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)
                                                ;   {optimized virtual_call}
  0x0000000002d8f6ac: mov    0xa0(%rsp),%rax
  0x0000000002d8f6b4: jmpq   0x0000000002d9069e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@488 (line 656)

  0x0000000002d8f6b9: mov    %esi,0x9c(%rsp)
  0x0000000002d8f6c0: jmpq   0x0000000002d9045c  ;   {no_reloc}
  0x0000000002d8f6c5: add    %al,(%rax)
  0x0000000002d8f6c7: add    %al,(%rax)
  0x0000000002d8f6c9: add    %ch,%cl
  0x0000000002d8f6cb: xchg   %eax,%edi
  0x0000000002d8f6cc: or     $0xe9900000,%eax   ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {no_reloc}
  0x0000000002d8f6d1: lods   %ds:(%rsi),%eax
  0x0000000002d8f6d2: or     $0x0,%eax
  0x0000000002d8f6d7: add    %al,(%rax)
  0x0000000002d8f6d9: add    %cl,-0x77(%rax)
  0x0000000002d8f6dc: test   %ah,(%rax,%rdi,4)
  0x0000000002d8f6df: add    %al,(%rax)
  0x0000000002d8f6e1: add    %cl,-0x75(%rcx)
  0x0000000002d8f6e4: rex.RXB (bad) 
  0x0000000002d8f6e6: lea    0x18(%rax),%rdi
  0x0000000002d8f6ea: cmp    0x70(%r15),%rdi
  0x0000000002d8f6ee: ja     0x0000000002d9048c
  0x0000000002d8f6f4: mov    %rdi,0x60(%r15)
  0x0000000002d8f6f8: mov    0xa8(%rdx),%rcx
  0x0000000002d8f6ff: mov    %rcx,(%rax)
  0x0000000002d8f702: mov    %rdx,%rcx
  0x0000000002d8f705: shr    $0x3,%rcx
  0x0000000002d8f709: mov    %ecx,0x8(%rax)
  0x0000000002d8f70c: xor    %rcx,%rcx
  0x0000000002d8f70f: mov    %ecx,0xc(%rax)
  0x0000000002d8f712: xor    %rcx,%rcx
  0x0000000002d8f715: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)

  0x0000000002d8f719: mov    %rax,%rbx
  0x0000000002d8f71c: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f726: addq   $0x1,0x560(%rdx)
  0x0000000002d8f72e: movabs $0x196471b8,%rbx   ;   {metadata(method data for {method} {0x00000000193e8650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f738: mov    0xdc(%rbx),%edx
  0x0000000002d8f73e: add    $0x8,%edx
  0x0000000002d8f741: mov    %edx,0xdc(%rbx)
  0x0000000002d8f747: movabs $0x193e8648,%rbx   ;   {metadata({method} {0x00000000193e8650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f751: and    $0x7ffff8,%edx
  0x0000000002d8f757: cmp    $0x0,%edx
  0x0000000002d8f75a: je     0x0000000002d90499
  0x0000000002d8f760: mov    %rax,%rbx
  0x0000000002d8f763: movabs $0x196471b8,%rdx   ;   {metadata(method data for {method} {0x00000000193e8650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f76d: addq   $0x1,0x108(%rdx)
  0x0000000002d8f775: movabs $0x19647308,%rbx   ;   {metadata(method data for {method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8f77f: mov    0xdc(%rbx),%edx
  0x0000000002d8f785: add    $0x8,%edx
  0x0000000002d8f788: mov    %edx,0xdc(%rbx)
  0x0000000002d8f78e: movabs $0x193e4978,%rbx   ;   {metadata({method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8f798: and    $0x7ffff8,%edx
  0x0000000002d8f79e: cmp    $0x0,%edx
  0x0000000002d8f7a1: je     0x0000000002d904b0
  0x0000000002d8f7a7: mov    %rax,%rbx
  0x0000000002d8f7aa: movabs $0x19647308,%rdx   ;   {metadata(method data for {method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8f7b4: addq   $0x1,0x108(%rdx)
  0x0000000002d8f7bc: movabs $0x194a47d8,%rbx   ;   {metadata(method data for {method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d8f7c6: mov    0xdc(%rbx),%edx
  0x0000000002d8f7cc: add    $0x8,%edx
  0x0000000002d8f7cf: mov    %edx,0xdc(%rbx)
  0x0000000002d8f7d5: movabs $0x19370480,%rbx   ;   {metadata({method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d8f7df: and    $0x7ffff8,%edx
  0x0000000002d8f7e5: cmp    $0x0,%edx
  0x0000000002d8f7e8: je     0x0000000002d904c7
  0x0000000002d8f7ee: mov    $0x10,%ebx
  0x0000000002d8f7f3: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002d8f7fd: mov    %rax,%r14
  0x0000000002d8f800: movslq %ebx,%rbx
  0x0000000002d8f803: mov    %rbx,%rdi
  0x0000000002d8f806: cmp    $0xffffff,%rbx
  0x0000000002d8f80d: ja     0x0000000002d904de
  0x0000000002d8f813: movabs $0x17,%rsi
  0x0000000002d8f81d: lea    (%rsi,%rbx,2),%rsi
  0x0000000002d8f821: and    $0xfffffffffffffff8,%rsi
  0x0000000002d8f825: mov    0x60(%r15),%rax
  0x0000000002d8f829: lea    (%rax,%rsi,1),%rsi
  0x0000000002d8f82d: cmp    0x70(%r15),%rsi
  0x0000000002d8f831: ja     0x0000000002d904de
  0x0000000002d8f837: mov    %rsi,0x60(%r15)
  0x0000000002d8f83b: sub    %rax,%rsi
  0x0000000002d8f83e: movq   $0x1,(%rax)
  0x0000000002d8f845: mov    %rdx,%rcx
  0x0000000002d8f848: shr    $0x3,%rcx
  0x0000000002d8f84c: mov    %ecx,0x8(%rax)
  0x0000000002d8f84f: mov    %ebx,0xc(%rax)
  0x0000000002d8f852: sub    $0x10,%rsi
  0x0000000002d8f856: je     0x0000000002d8f86d
  0x0000000002d8f85c: xor    %rbx,%rbx
  0x0000000002d8f85f: shr    $0x3,%rsi
  0x0000000002d8f863: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002d8f868: dec    %rsi
  0x0000000002d8f86b: jne    0x0000000002d8f863  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x0000000002d8f86d: mov    %rax,%r10
  0x0000000002d8f870: shr    $0x3,%r10
  0x0000000002d8f874: mov    %r10d,0x10(%r14)
  0x0000000002d8f878: mov    %r14,%rax
  0x0000000002d8f87b: shr    $0x9,%rax
  0x0000000002d8f87f: movabs $0xe824000,%r8
  0x0000000002d8f889: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x0000000002d8f88e: mov    %r14,%rax
  0x0000000002d8f891: movabs $0x19654148,%r8    ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f89b: mov    0x8(%rax),%eax
  0x0000000002d8f89e: shl    $0x3,%rax
  0x0000000002d8f8a2: cmp    0x578(%r8),%rax
  0x0000000002d8f8a9: jne    0x0000000002d8f8b8
  0x0000000002d8f8ab: addq   $0x1,0x580(%r8)
  0x0000000002d8f8b3: jmpq   0x0000000002d8f91e
  0x0000000002d8f8b8: cmp    0x588(%r8),%rax
  0x0000000002d8f8bf: jne    0x0000000002d8f8ce
  0x0000000002d8f8c1: addq   $0x1,0x590(%r8)
  0x0000000002d8f8c9: jmpq   0x0000000002d8f91e
  0x0000000002d8f8ce: cmpq   $0x0,0x578(%r8)
  0x0000000002d8f8d9: jne    0x0000000002d8f8f2
  0x0000000002d8f8db: mov    %rax,0x578(%r8)
  0x0000000002d8f8e2: movq   $0x1,0x580(%r8)
  0x0000000002d8f8ed: jmpq   0x0000000002d8f91e
  0x0000000002d8f8f2: cmpq   $0x0,0x588(%r8)
  0x0000000002d8f8fd: jne    0x0000000002d8f916
  0x0000000002d8f8ff: mov    %rax,0x588(%r8)
  0x0000000002d8f906: movq   $0x1,0x590(%r8)
  0x0000000002d8f911: jmpq   0x0000000002d8f91e
  0x0000000002d8f916: addq   $0x1,0x570(%r8)
  0x0000000002d8f91e: movabs $0x195a93d8,%r8    ;   {metadata(method data for {method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f928: mov    0xdc(%r8),%edx
  0x0000000002d8f92f: add    $0x8,%edx
  0x0000000002d8f932: mov    %edx,0xdc(%r8)
  0x0000000002d8f939: movabs $0x193e8960,%r8    ;   {metadata({method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f943: and    $0x7ffff8,%edx
  0x0000000002d8f949: cmp    $0x0,%edx
  0x0000000002d8f94c: je     0x0000000002d904e8
  0x0000000002d8f952: mov    %r14,%rax
  0x0000000002d8f955: movabs $0x195a93d8,%r8    ;   {metadata(method data for {method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8f95f: addq   $0x1,0x108(%r8)
  0x0000000002d8f967: movabs $0x780bd99b0,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x0000000002d8f971: mov    %r14,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)

  0x0000000002d8f974: mov    %r14,0xb0(%rsp)
  0x0000000002d8f97c: nop
  0x0000000002d8f97d: nop
  0x0000000002d8f97e: nop
  0x0000000002d8f97f: callq  0x0000000002cb61a0  ; OopMap{[176]=Oop [184]=Oop off=4900}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {optimized virtual_call}
  0x0000000002d8f984: mov    0xb0(%rsp),%rax
  0x0000000002d8f98c: movabs $0x19654148,%r8    ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8f996: mov    0x8(%rax),%eax
  0x0000000002d8f999: shl    $0x3,%rax
  0x0000000002d8f99d: cmp    0x5a8(%r8),%rax
  0x0000000002d8f9a4: jne    0x0000000002d8f9b3
  0x0000000002d8f9a6: addq   $0x1,0x5b0(%r8)
  0x0000000002d8f9ae: jmpq   0x0000000002d8fa19
  0x0000000002d8f9b3: cmp    0x5b8(%r8),%rax
  0x0000000002d8f9ba: jne    0x0000000002d8f9c9
  0x0000000002d8f9bc: addq   $0x1,0x5c0(%r8)
  0x0000000002d8f9c4: jmpq   0x0000000002d8fa19
  0x0000000002d8f9c9: cmpq   $0x0,0x5a8(%r8)
  0x0000000002d8f9d4: jne    0x0000000002d8f9ed
  0x0000000002d8f9d6: mov    %rax,0x5a8(%r8)
  0x0000000002d8f9dd: movq   $0x1,0x5b0(%r8)
  0x0000000002d8f9e8: jmpq   0x0000000002d8fa19
  0x0000000002d8f9ed: cmpq   $0x0,0x5b8(%r8)
  0x0000000002d8f9f8: jne    0x0000000002d8fa11
  0x0000000002d8f9fa: mov    %rax,0x5b8(%r8)
  0x0000000002d8fa01: movq   $0x1,0x5c0(%r8)
  0x0000000002d8fa0c: jmpq   0x0000000002d8fa19
  0x0000000002d8fa11: addq   $0x1,0x5a0(%r8)
  0x0000000002d8fa19: movabs $0x19647460,%r8    ;   {metadata(method data for {method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8fa23: mov    0xdc(%r8),%edx
  0x0000000002d8fa2a: add    $0x8,%edx
  0x0000000002d8fa2d: mov    %edx,0xdc(%r8)
  0x0000000002d8fa34: movabs $0x193e8e20,%r8    ;   {metadata({method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8fa3e: and    $0x7ffff8,%edx
  0x0000000002d8fa44: cmp    $0x0,%edx
  0x0000000002d8fa47: je     0x0000000002d904ff
  0x0000000002d8fa4d: mov    0xb0(%rsp),%rax
  0x0000000002d8fa55: movabs $0x19647460,%r8    ;   {metadata(method data for {method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8fa5f: addq   $0x1,0x108(%r8)
  0x0000000002d8fa67: mov    0x74(%rsp),%r8d
  0x0000000002d8fa6c: mov    0xb0(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)

  0x0000000002d8fa74: nop
  0x0000000002d8fa75: nop
  0x0000000002d8fa76: nop
  0x0000000002d8fa77: callq  0x0000000002cb61a0  ; OopMap{[176]=Oop [184]=Oop off=5148}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {optimized virtual_call}
  0x0000000002d8fa7c: mov    0xb0(%rsp),%rax
  0x0000000002d8fa84: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8fa8e: mov    0x8(%rax),%eax
  0x0000000002d8fa91: shl    $0x3,%rax
  0x0000000002d8fa95: cmp    0x5d8(%rdx),%rax
  0x0000000002d8fa9c: jne    0x0000000002d8faab
  0x0000000002d8fa9e: addq   $0x1,0x5e0(%rdx)
  0x0000000002d8faa6: jmpq   0x0000000002d8fb11
  0x0000000002d8faab: cmp    0x5e8(%rdx),%rax
  0x0000000002d8fab2: jne    0x0000000002d8fac1
  0x0000000002d8fab4: addq   $0x1,0x5f0(%rdx)
  0x0000000002d8fabc: jmpq   0x0000000002d8fb11
  0x0000000002d8fac1: cmpq   $0x0,0x5d8(%rdx)
  0x0000000002d8facc: jne    0x0000000002d8fae5
  0x0000000002d8face: mov    %rax,0x5d8(%rdx)
  0x0000000002d8fad5: movq   $0x1,0x5e0(%rdx)
  0x0000000002d8fae0: jmpq   0x0000000002d8fb11
  0x0000000002d8fae5: cmpq   $0x0,0x5e8(%rdx)
  0x0000000002d8faf0: jne    0x0000000002d8fb09
  0x0000000002d8faf2: mov    %rax,0x5e8(%rdx)
  0x0000000002d8faf9: movq   $0x1,0x5f0(%rdx)
  0x0000000002d8fb04: jmpq   0x0000000002d8fb11
  0x0000000002d8fb09: addq   $0x1,0x5d0(%rdx)
  0x0000000002d8fb11: movabs $0x196477b0,%rdx   ;   {metadata(method data for {method} {0x00000000193e9d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8fb1b: mov    0xdc(%rdx),%esi
  0x0000000002d8fb21: add    $0x8,%esi
  0x0000000002d8fb24: mov    %esi,0xdc(%rdx)
  0x0000000002d8fb2a: movabs $0x193e9d10,%rdx   ;   {metadata({method} {0x00000000193e9d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8fb34: and    $0x7ffff8,%esi
  0x0000000002d8fb3a: cmp    $0x0,%esi
  0x0000000002d8fb3d: je     0x0000000002d90516
  0x0000000002d8fb43: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002d8fb4d: mov    0x60(%r15),%rax
  0x0000000002d8fb51: lea    0x18(%rax),%rdi
  0x0000000002d8fb55: cmp    0x70(%r15),%rdi
  0x0000000002d8fb59: ja     0x0000000002d9052d
  0x0000000002d8fb5f: mov    %rdi,0x60(%r15)
  0x0000000002d8fb63: mov    0xa8(%rdx),%rcx
  0x0000000002d8fb6a: mov    %rcx,(%rax)
  0x0000000002d8fb6d: mov    %rdx,%rcx
  0x0000000002d8fb70: shr    $0x3,%rcx
  0x0000000002d8fb74: mov    %ecx,0x8(%rax)
  0x0000000002d8fb77: xor    %rcx,%rcx
  0x0000000002d8fb7a: mov    %ecx,0xc(%rax)
  0x0000000002d8fb7d: xor    %rcx,%rcx
  0x0000000002d8fb80: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x0000000002d8fb84: mov    0xb0(%rsp),%r8
  0x0000000002d8fb8c: mov    0x10(%r8),%r9d
  0x0000000002d8fb90: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x0000000002d8fb94: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x0000000002d8fb98: mov    %rax,%r8
  0x0000000002d8fb9b: movabs $0x196477b0,%rdx   ;   {metadata(method data for {method} {0x00000000193e9d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8fba5: addq   $0x1,0x108(%rdx)
  0x0000000002d8fbad: mov    %r9,%r8
  0x0000000002d8fbb0: mov    $0x0,%r9d
  0x0000000002d8fbb6: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x0000000002d8fbb9: mov    %rax,0xc0(%rsp)
  0x0000000002d8fbc1: nop
  0x0000000002d8fbc2: nop
  0x0000000002d8fbc3: nop
  0x0000000002d8fbc4: nop
  0x0000000002d8fbc5: nop
  0x0000000002d8fbc6: nop
  0x0000000002d8fbc7: callq  0x0000000002cb61a0  ; OopMap{[184]=Oop [192]=Oop off=5484}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {optimized virtual_call}
  0x0000000002d8fbcc: mov    0xb8(%rsp),%rax
  0x0000000002d8fbd4: movabs $0x19654148,%r8    ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8fbde: addq   $0x1,0x600(%r8)
  0x0000000002d8fbe6: mov    0xc0(%rsp),%r8
  0x0000000002d8fbee: mov    0xb8(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)

  0x0000000002d8fbf6: nop
  0x0000000002d8fbf7: callq  0x0000000002cb61a0  ; OopMap{[184]=Oop off=5532}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)
                                                ;   {optimized virtual_call}
  0x0000000002d8fbfc: mov    0xb8(%rsp),%rax
  0x0000000002d8fc04: jmpq   0x0000000002d9069e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@424 (line 648)

  0x0000000002d8fc09: nopl   0x0(%rax)
  0x0000000002d8fc10: jmpq   0x0000000002d90549  ;   {no_reloc}
  0x0000000002d8fc15: add    %al,(%rax)
  0x0000000002d8fc17: add    %al,(%rax)
  0x0000000002d8fc19: add    %ch,%cl
  0x0000000002d8fc1b: xor    $0x9,%al
  0x0000000002d8fc1d: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)

  0x0000000002d8fc1f: mov    %rax,%r8
  0x0000000002d8fc22: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8fc2c: addq   $0x1,0x510(%rdx)
  0x0000000002d8fc34: movabs $0x780bd9930,%r8   ;   {oop(&quot;malformed input: partial character at end&quot;)}
  0x0000000002d8fc3e: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)

  0x0000000002d8fc41: mov    %rax,0xc8(%rsp)
  0x0000000002d8fc49: nop
  0x0000000002d8fc4a: nop
  0x0000000002d8fc4b: nop
  0x0000000002d8fc4c: nop
  0x0000000002d8fc4d: nop
  0x0000000002d8fc4e: nop
  0x0000000002d8fc4f: callq  0x0000000002cb61a0  ; OopMap{[200]=Oop off=5620}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)
                                                ;   {optimized virtual_call}
  0x0000000002d8fc54: mov    0xc8(%rsp),%rax
  0x0000000002d8fc5c: jmpq   0x0000000002d9069e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@354 (line 643)

  0x0000000002d8fc61: mov    %esi,0xd8(%rsp)
  0x0000000002d8fc68: jmpq   0x0000000002d9056f  ;   {no_reloc}
  0x0000000002d8fc6d: add    %al,(%rax)
  0x0000000002d8fc6f: add    %al,(%rax)
  0x0000000002d8fc71: add    %ch,%cl
  0x0000000002d8fc73: add    (%rcx),%cl
  0x0000000002d8fc75: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)

  0x0000000002d8fc77: nop
  0x0000000002d8fc78: jmpq   0x0000000002d90595  ;   {no_reloc}
  0x0000000002d8fc7d: add    %al,(%rax)
  0x0000000002d8fc7f: add    %al,(%rax)
  0x0000000002d8fc81: add    %cl,-0x77(%rax)
  0x0000000002d8fc84: test   %ah,(%rax,%riz,8)
  0x0000000002d8fc87: add    %al,(%rax)
  0x0000000002d8fc89: add    %cl,-0x75(%rcx)
  0x0000000002d8fc8c: rex.RXB (bad) 
  0x0000000002d8fc8e: lea    0x18(%rax),%rdi
  0x0000000002d8fc92: cmp    0x70(%r15),%rdi
  0x0000000002d8fc96: ja     0x0000000002d9059f
  0x0000000002d8fc9c: mov    %rdi,0x60(%r15)
  0x0000000002d8fca0: mov    0xa8(%rdx),%rcx
  0x0000000002d8fca7: mov    %rcx,(%rax)
  0x0000000002d8fcaa: mov    %rdx,%rcx
  0x0000000002d8fcad: shr    $0x3,%rcx
  0x0000000002d8fcb1: mov    %ecx,0x8(%rax)
  0x0000000002d8fcb4: xor    %rcx,%rcx
  0x0000000002d8fcb7: mov    %ecx,0xc(%rax)
  0x0000000002d8fcba: xor    %rcx,%rcx
  0x0000000002d8fcbd: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)

  0x0000000002d8fcc1: mov    %rax,%rbx
  0x0000000002d8fcc4: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8fcce: addq   $0x1,0x428(%rdx)
  0x0000000002d8fcd6: movabs $0x196471b8,%rbx   ;   {metadata(method data for {method} {0x00000000193e8650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8fce0: mov    0xdc(%rbx),%edx
  0x0000000002d8fce6: add    $0x8,%edx
  0x0000000002d8fce9: mov    %edx,0xdc(%rbx)
  0x0000000002d8fcef: movabs $0x193e8648,%rbx   ;   {metadata({method} {0x00000000193e8650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8fcf9: and    $0x7ffff8,%edx
  0x0000000002d8fcff: cmp    $0x0,%edx
  0x0000000002d8fd02: je     0x0000000002d905ac
  0x0000000002d8fd08: mov    %rax,%rbx
  0x0000000002d8fd0b: movabs $0x196471b8,%rdx   ;   {metadata(method data for {method} {0x00000000193e8650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8fd15: addq   $0x1,0x108(%rdx)
  0x0000000002d8fd1d: movabs $0x19647308,%rbx   ;   {metadata(method data for {method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8fd27: mov    0xdc(%rbx),%edx
  0x0000000002d8fd2d: add    $0x8,%edx
  0x0000000002d8fd30: mov    %edx,0xdc(%rbx)
  0x0000000002d8fd36: movabs $0x193e4978,%rbx   ;   {metadata({method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8fd40: and    $0x7ffff8,%edx
  0x0000000002d8fd46: cmp    $0x0,%edx
  0x0000000002d8fd49: je     0x0000000002d905c3
  0x0000000002d8fd4f: mov    %rax,%rbx
  0x0000000002d8fd52: movabs $0x19647308,%rdx   ;   {metadata(method data for {method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8fd5c: addq   $0x1,0x108(%rdx)
  0x0000000002d8fd64: movabs $0x194a47d8,%rbx   ;   {metadata(method data for {method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d8fd6e: mov    0xdc(%rbx),%edx
  0x0000000002d8fd74: add    $0x8,%edx
  0x0000000002d8fd77: mov    %edx,0xdc(%rbx)
  0x0000000002d8fd7d: movabs $0x19370480,%rbx   ;   {metadata({method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d8fd87: and    $0x7ffff8,%edx
  0x0000000002d8fd8d: cmp    $0x0,%edx
  0x0000000002d8fd90: je     0x0000000002d905da
  0x0000000002d8fd96: mov    $0x10,%ebx
  0x0000000002d8fd9b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002d8fda5: mov    %rax,%r13
  0x0000000002d8fda8: movslq %ebx,%rbx
  0x0000000002d8fdab: mov    %rbx,%rdi
  0x0000000002d8fdae: cmp    $0xffffff,%rbx
  0x0000000002d8fdb5: ja     0x0000000002d905f1
  0x0000000002d8fdbb: movabs $0x17,%rsi
  0x0000000002d8fdc5: lea    (%rsi,%rbx,2),%rsi
  0x0000000002d8fdc9: and    $0xfffffffffffffff8,%rsi
  0x0000000002d8fdcd: mov    0x60(%r15),%rax
  0x0000000002d8fdd1: lea    (%rax,%rsi,1),%rsi
  0x0000000002d8fdd5: cmp    0x70(%r15),%rsi
  0x0000000002d8fdd9: ja     0x0000000002d905f1
  0x0000000002d8fddf: mov    %rsi,0x60(%r15)
  0x0000000002d8fde3: sub    %rax,%rsi
  0x0000000002d8fde6: movq   $0x1,(%rax)
  0x0000000002d8fded: mov    %rdx,%rcx
  0x0000000002d8fdf0: shr    $0x3,%rcx
  0x0000000002d8fdf4: mov    %ecx,0x8(%rax)
  0x0000000002d8fdf7: mov    %ebx,0xc(%rax)
  0x0000000002d8fdfa: sub    $0x10,%rsi
  0x0000000002d8fdfe: je     0x0000000002d8fe15
  0x0000000002d8fe04: xor    %rbx,%rbx
  0x0000000002d8fe07: shr    $0x3,%rsi
  0x0000000002d8fe0b: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002d8fe10: dec    %rsi
  0x0000000002d8fe13: jne    0x0000000002d8fe0b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x0000000002d8fe15: mov    %rax,%r10
  0x0000000002d8fe18: shr    $0x3,%r10
  0x0000000002d8fe1c: mov    %r10d,0x10(%r13)
  0x0000000002d8fe20: mov    %r13,%rax
  0x0000000002d8fe23: shr    $0x9,%rax
  0x0000000002d8fe27: movabs $0xe824000,%r8
  0x0000000002d8fe31: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x0000000002d8fe36: mov    %r13,%rax
  0x0000000002d8fe39: movabs $0x19654148,%r8    ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8fe43: mov    0x8(%rax),%eax
  0x0000000002d8fe46: shl    $0x3,%rax
  0x0000000002d8fe4a: cmp    0x440(%r8),%rax
  0x0000000002d8fe51: jne    0x0000000002d8fe60
  0x0000000002d8fe53: addq   $0x1,0x448(%r8)
  0x0000000002d8fe5b: jmpq   0x0000000002d8fec6
  0x0000000002d8fe60: cmp    0x450(%r8),%rax
  0x0000000002d8fe67: jne    0x0000000002d8fe76
  0x0000000002d8fe69: addq   $0x1,0x458(%r8)
  0x0000000002d8fe71: jmpq   0x0000000002d8fec6
  0x0000000002d8fe76: cmpq   $0x0,0x440(%r8)
  0x0000000002d8fe81: jne    0x0000000002d8fe9a
  0x0000000002d8fe83: mov    %rax,0x440(%r8)
  0x0000000002d8fe8a: movq   $0x1,0x448(%r8)
  0x0000000002d8fe95: jmpq   0x0000000002d8fec6
  0x0000000002d8fe9a: cmpq   $0x0,0x450(%r8)
  0x0000000002d8fea5: jne    0x0000000002d8febe
  0x0000000002d8fea7: mov    %rax,0x450(%r8)
  0x0000000002d8feae: movq   $0x1,0x458(%r8)
  0x0000000002d8feb9: jmpq   0x0000000002d8fec6
  0x0000000002d8febe: addq   $0x1,0x438(%r8)
  0x0000000002d8fec6: movabs $0x195a93d8,%r8    ;   {metadata(method data for {method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8fed0: mov    0xdc(%r8),%edx
  0x0000000002d8fed7: add    $0x8,%edx
  0x0000000002d8feda: mov    %edx,0xdc(%r8)
  0x0000000002d8fee1: movabs $0x193e8960,%r8    ;   {metadata({method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8feeb: and    $0x7ffff8,%edx
  0x0000000002d8fef1: cmp    $0x0,%edx
  0x0000000002d8fef4: je     0x0000000002d905fb
  0x0000000002d8fefa: mov    %r13,%rax
  0x0000000002d8fefd: movabs $0x195a93d8,%r8    ;   {metadata(method data for {method} {0x00000000193e8968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8ff07: addq   $0x1,0x108(%r8)
  0x0000000002d8ff0f: movabs $0x780bd99b0,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x0000000002d8ff19: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)

  0x0000000002d8ff1c: mov    %r13,0xd0(%rsp)
  0x0000000002d8ff24: nop
  0x0000000002d8ff25: nop
  0x0000000002d8ff26: nop
  0x0000000002d8ff27: callq  0x0000000002cb61a0  ; OopMap{[208]=Oop [224]=Oop off=6348}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {optimized virtual_call}
  0x0000000002d8ff2c: mov    0xd0(%rsp),%rax
  0x0000000002d8ff34: movabs $0x19654148,%r8    ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8ff3e: mov    0x8(%rax),%eax
  0x0000000002d8ff41: shl    $0x3,%rax
  0x0000000002d8ff45: cmp    0x470(%r8),%rax
  0x0000000002d8ff4c: jne    0x0000000002d8ff5b
  0x0000000002d8ff4e: addq   $0x1,0x478(%r8)
  0x0000000002d8ff56: jmpq   0x0000000002d8ffc1
  0x0000000002d8ff5b: cmp    0x480(%r8),%rax
  0x0000000002d8ff62: jne    0x0000000002d8ff71
  0x0000000002d8ff64: addq   $0x1,0x488(%r8)
  0x0000000002d8ff6c: jmpq   0x0000000002d8ffc1
  0x0000000002d8ff71: cmpq   $0x0,0x470(%r8)
  0x0000000002d8ff7c: jne    0x0000000002d8ff95
  0x0000000002d8ff7e: mov    %rax,0x470(%r8)
  0x0000000002d8ff85: movq   $0x1,0x478(%r8)
  0x0000000002d8ff90: jmpq   0x0000000002d8ffc1
  0x0000000002d8ff95: cmpq   $0x0,0x480(%r8)
  0x0000000002d8ffa0: jne    0x0000000002d8ffb9
  0x0000000002d8ffa2: mov    %rax,0x480(%r8)
  0x0000000002d8ffa9: movq   $0x1,0x488(%r8)
  0x0000000002d8ffb4: jmpq   0x0000000002d8ffc1
  0x0000000002d8ffb9: addq   $0x1,0x468(%r8)
  0x0000000002d8ffc1: movabs $0x19647460,%r8    ;   {metadata(method data for {method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8ffcb: mov    0xdc(%r8),%edx
  0x0000000002d8ffd2: add    $0x8,%edx
  0x0000000002d8ffd5: mov    %edx,0xdc(%r8)
  0x0000000002d8ffdc: movabs $0x193e8e20,%r8    ;   {metadata({method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d8ffe6: and    $0x7ffff8,%edx
  0x0000000002d8ffec: cmp    $0x0,%edx
  0x0000000002d8ffef: je     0x0000000002d90612
  0x0000000002d8fff5: mov    0xd0(%rsp),%rax
  0x0000000002d8fffd: movabs $0x19647460,%r8    ;   {metadata(method data for {method} {0x00000000193e8e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d90007: addq   $0x1,0x108(%r8)
  0x0000000002d9000f: mov    0xd8(%rsp),%r8d
  0x0000000002d90017: mov    0xd0(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)

  0x0000000002d9001f: callq  0x0000000002cb61a0  ; OopMap{[208]=Oop [224]=Oop off=6596}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {optimized virtual_call}
  0x0000000002d90024: mov    0xd0(%rsp),%rax
  0x0000000002d9002c: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d90036: mov    0x8(%rax),%eax
  0x0000000002d90039: shl    $0x3,%rax
  0x0000000002d9003d: cmp    0x4a0(%rdx),%rax
  0x0000000002d90044: jne    0x0000000002d90053
  0x0000000002d90046: addq   $0x1,0x4a8(%rdx)
  0x0000000002d9004e: jmpq   0x0000000002d900b9
  0x0000000002d90053: cmp    0x4b0(%rdx),%rax
  0x0000000002d9005a: jne    0x0000000002d90069
  0x0000000002d9005c: addq   $0x1,0x4b8(%rdx)
  0x0000000002d90064: jmpq   0x0000000002d900b9
  0x0000000002d90069: cmpq   $0x0,0x4a0(%rdx)
  0x0000000002d90074: jne    0x0000000002d9008d
  0x0000000002d90076: mov    %rax,0x4a0(%rdx)
  0x0000000002d9007d: movq   $0x1,0x4a8(%rdx)
  0x0000000002d90088: jmpq   0x0000000002d900b9
  0x0000000002d9008d: cmpq   $0x0,0x4b0(%rdx)
  0x0000000002d90098: jne    0x0000000002d900b1
  0x0000000002d9009a: mov    %rax,0x4b0(%rdx)
  0x0000000002d900a1: movq   $0x1,0x4b8(%rdx)
  0x0000000002d900ac: jmpq   0x0000000002d900b9
  0x0000000002d900b1: addq   $0x1,0x498(%rdx)
  0x0000000002d900b9: movabs $0x196477b0,%rdx   ;   {metadata(method data for {method} {0x00000000193e9d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d900c3: mov    0xdc(%rdx),%esi
  0x0000000002d900c9: add    $0x8,%esi
  0x0000000002d900cc: mov    %esi,0xdc(%rdx)
  0x0000000002d900d2: movabs $0x193e9d10,%rdx   ;   {metadata({method} {0x00000000193e9d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d900dc: and    $0x7ffff8,%esi
  0x0000000002d900e2: cmp    $0x0,%esi
  0x0000000002d900e5: je     0x0000000002d90629
  0x0000000002d900eb: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002d900f5: mov    0x60(%r15),%rax
  0x0000000002d900f9: lea    0x18(%rax),%rdi
  0x0000000002d900fd: cmp    0x70(%r15),%rdi
  0x0000000002d90101: ja     0x0000000002d90640
  0x0000000002d90107: mov    %rdi,0x60(%r15)
  0x0000000002d9010b: mov    0xa8(%rdx),%rcx
  0x0000000002d90112: mov    %rcx,(%rax)
  0x0000000002d90115: mov    %rdx,%rcx
  0x0000000002d90118: shr    $0x3,%rcx
  0x0000000002d9011c: mov    %ecx,0x8(%rax)
  0x0000000002d9011f: xor    %rcx,%rcx
  0x0000000002d90122: mov    %ecx,0xc(%rax)
  0x0000000002d90125: xor    %rcx,%rcx
  0x0000000002d90128: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x0000000002d9012c: mov    0xd0(%rsp),%r8
  0x0000000002d90134: mov    0x10(%r8),%r9d
  0x0000000002d90138: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x0000000002d9013c: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x0000000002d90140: mov    %rax,%r8
  0x0000000002d90143: movabs $0x196477b0,%rdx   ;   {metadata(method data for {method} {0x00000000193e9d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002d9014d: addq   $0x1,0x108(%rdx)
  0x0000000002d90155: mov    %r9,%r8
  0x0000000002d90158: mov    $0x0,%r9d
  0x0000000002d9015e: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x0000000002d90161: mov    %rax,0xe8(%rsp)
  0x0000000002d90169: nop
  0x0000000002d9016a: nop
  0x0000000002d9016b: nop
  0x0000000002d9016c: nop
  0x0000000002d9016d: nop
  0x0000000002d9016e: nop
  0x0000000002d9016f: callq  0x0000000002cb61a0  ; OopMap{[224]=Oop [232]=Oop off=6932}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {optimized virtual_call}
  0x0000000002d90174: mov    0xe0(%rsp),%rax
  0x0000000002d9017c: movabs $0x19654148,%r8    ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d90186: addq   $0x1,0x4c8(%r8)
  0x0000000002d9018e: mov    0xe8(%rsp),%r8
  0x0000000002d90196: mov    0xe0(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)

  0x0000000002d9019e: nop
  0x0000000002d9019f: callq  0x0000000002cb61a0  ; OopMap{[224]=Oop off=6980}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)
                                                ;   {optimized virtual_call}
  0x0000000002d901a4: mov    0xe0(%rsp),%rax
  0x0000000002d901ac: jmpq   0x0000000002d9069e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@310 (line 634)

  0x0000000002d901b1: nopl   0x0(%rax)
  0x0000000002d901b8: jmpq   0x0000000002d9065c  ;   {no_reloc}
  0x0000000002d901bd: add    %al,(%rax)
  0x0000000002d901bf: add    %al,(%rax)
  0x0000000002d901c1: add    %ch,%cl
  0x0000000002d901c3: lahf   
  0x0000000002d901c4: add    $0x0,%al
  0x0000000002d901c6: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.io.DataInputStream::readUTF@253 (line 630)

  0x0000000002d901ca: movabs $0x19654148,%rdx   ;   {metadata(method data for {method} {0x0000000019651bc8} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d901d4: addq   $0x1,0x3f8(%rdx)
  0x0000000002d901dc: movabs $0x780bd9930,%r8   ;   {oop(&quot;malformed input: partial character at end&quot;)}
  0x0000000002d901e6: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)

  0x0000000002d901e9: mov    %rax,0xf0(%rsp)
  0x0000000002d901f1: nop
  0x0000000002d901f2: nop
  0x0000000002d901f3: nop
  0x0000000002d901f4: nop
  0x0000000002d901f5: nop
  0x0000000002d901f6: nop
  0x0000000002d901f7: callq  0x0000000002cb61a0  ; OopMap{[240]=Oop off=7068}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)
                                                ;   {optimized virtual_call}
  0x0000000002d901fc: mov    0xf0(%rsp),%rax
  0x0000000002d90204: jmpq   0x0000000002d9069e
  0x0000000002d90209: mov    %rsi,0x8(%rsp)
  0x0000000002d9020e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d90216: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=7099}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readUTF@-1 (line 589)
                                                ;   {runtime_call}
  0x0000000002d9021b: jmpq   0x0000000002d8e6a1
  0x0000000002d90220: callq  0x0000000002d6f1c0  ; OopMap{rdx=Oop off=7109}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x0000000002d90225: callq  0x0000000002cdff40  ; OopMap{rdx=Oop off=7114}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x0000000002d9022a: mov    %r11,(%rsp)
  0x0000000002d9022e: callq  0x0000000002d6ef80  ; OopMap{r11=Oop off=7123}
                                                ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)
                                                ;   {runtime_call}
  0x0000000002d90233: callq  0x0000000002cdff40  ; OopMap{r11=Oop r8=Oop off=7128}
                                                ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)
                                                ;   {runtime_call}
  0x0000000002d90238: callq  0x0000000002cdff40  ; OopMap{r11=Oop r8=Oop off=7133}
                                                ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ;   {runtime_call}
  0x0000000002d9023d: callq  0x0000000002d6e600  ; OopMap{r11=Oop r8=Oop off=7138}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)
                                                ;   {runtime_call}
  0x0000000002d90242: jmpq   0x0000000002d8e9dc
  0x0000000002d90247: callq  0x0000000002d6e600  ; OopMap{r11=Oop r8=Oop off=7148}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)
                                                ;   {runtime_call}
  0x0000000002d9024c: jmpq   0x0000000002d8ea77
  0x0000000002d90251: callq  0x0000000002d6e600  ; OopMap{r11=Oop off=7158}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)
                                                ;   {runtime_call}
  0x0000000002d90256: jmpq   0x0000000002d8eb30
  0x0000000002d9025b: callq  0x0000000002d6e600  ; OopMap{r11=Oop r8=Oop off=7168}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)
                                                ;   {runtime_call}
  0x0000000002d90260: jmpq   0x0000000002d8ebad
  0x0000000002d90265: callq  0x0000000002d6f1c0  ; OopMap{r11=Oop rdx=Oop [128]=Oop off=7178}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {runtime_call}
  0x0000000002d9026a: callq  0x0000000002cdff40  ; OopMap{rbx=Oop rdi=Oop off=7183}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x0000000002d9026f: callq  0x0000000002cdff40  ; OopMap{rbx=Oop rdi=Oop off=7188}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x0000000002d90274: mov    %rsi,(%rsp)
  0x0000000002d90278: callq  0x0000000002ce0600  ; OopMap{rbx=Oop rdi=Oop off=7197}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x0000000002d9027d: callq  0x0000000002cdff40  ; OopMap{rbx=Oop rdi=Oop off=7202}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x0000000002d90282: callq  0x0000000002cdff40  ; OopMap{rbx=Oop rdi=Oop off=7207}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x0000000002d90287: mov    %rdx,(%rsp)
  0x0000000002d9028b: callq  0x0000000002ce0600  ; OopMap{rbx=Oop rdi=Oop off=7216}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x0000000002d90290: mov    %rdx,0x8(%rsp)
  0x0000000002d90295: movq   $0x83,(%rsp)
  0x0000000002d9029d: callq  0x0000000002d710e0  ; OopMap{rbx=Oop rdi=Oop off=7234}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)
                                                ;   {runtime_call}
  0x0000000002d902a2: jmpq   0x0000000002d8ecdc
  0x0000000002d902a7: callq  0x0000000002cdff40  ; OopMap{rbx=Oop rdi=Oop off=7244}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x0000000002d902ac: callq  0x0000000002cdff40  ; OopMap{rbx=Oop rdi=Oop off=7249}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x0000000002d902b1: mov    %rsi,(%rsp)
  0x0000000002d902b5: callq  0x0000000002ce0600  ; OopMap{rbx=Oop rdi=Oop off=7258}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x0000000002d902ba: mov    %rcx,(%rsp)
  0x0000000002d902be: callq  0x0000000002ce0600  ; OopMap{rbx=Oop rdi=Oop off=7267}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)
                                                ;   {runtime_call}
  0x0000000002d902c3: mov    %rcx,(%rsp)
  0x0000000002d902c7: callq  0x0000000002ce0600  ; OopMap{rbx=Oop rdi=Oop off=7276}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)
                                                ;   {runtime_call}
  0x0000000002d902cc: mov    %r9,(%rsp)
  0x0000000002d902d0: callq  0x0000000002ce0600  ; OopMap{rbx=Oop rdi=Oop off=7285}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)
                                                ;   {runtime_call}
  0x0000000002d902d5: callq  0x0000000002cdff40  ; OopMap{rbx=Oop rdi=Oop off=7290}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x0000000002d902da: callq  0x0000000002cdff40  ; OopMap{rbx=Oop rdi=Oop off=7295}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x0000000002d902df: mov    %r11,(%rsp)
  0x0000000002d902e3: callq  0x0000000002ce0600  ; OopMap{rbx=Oop rdi=Oop off=7304}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x0000000002d902e8: mov    %rdx,0x8(%rsp)
  0x0000000002d902ed: movq   $0x1ca,(%rsp)
  0x0000000002d902f5: callq  0x0000000002d710e0  ; OopMap{rbx=Oop rdi=Oop off=7322}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)
                                                ;   {runtime_call}
  0x0000000002d902fa: jmpq   0x0000000002d8efce
  0x0000000002d902ff: callq  0x0000000002cdff40  ; OopMap{rbx=Oop rdi=Oop off=7332}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x0000000002d90304: callq  0x0000000002cdff40  ; OopMap{rbx=Oop rdi=Oop off=7337}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x0000000002d90309: mov    %r11,(%rsp)
  0x0000000002d9030d: callq  0x0000000002ce0600  ; OopMap{rbx=Oop rdi=Oop off=7346}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x0000000002d90312: mov    %rdx,0x8(%rsp)
  0x0000000002d90317: movq   $0x14d,(%rsp)
  0x0000000002d9031f: callq  0x0000000002d710e0  ; OopMap{rbx=Oop rdi=Oop off=7364}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)
                                                ;   {runtime_call}
  0x0000000002d90324: jmpq   0x0000000002d8f042
  0x0000000002d90329: callq  0x0000000002cdff40  ; OopMap{rbx=Oop rdi=Oop off=7374}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x0000000002d9032e: callq  0x0000000002cdff40  ; OopMap{rbx=Oop rdi=Oop off=7379}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x0000000002d90333: mov    %r11,(%rsp)
  0x0000000002d90337: callq  0x0000000002ce0600  ; OopMap{rbx=Oop rdi=Oop off=7388}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x0000000002d9033c: mov    %rdx,0x8(%rsp)
  0x0000000002d90341: movq   $0xf1,(%rsp)
  0x0000000002d90349: callq  0x0000000002d710e0  ; OopMap{rbx=Oop rdi=Oop off=7406}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)
                                                ;   {runtime_call}
  0x0000000002d9034e: jmpq   0x0000000002d8f0b1
  0x0000000002d90353: mov    %rdx,%rdx
  0x0000000002d90356: callq  0x0000000002cdf600  ; OopMap{rbx=Oop off=7419}
                                                ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)
                                                ;   {runtime_call}
  0x0000000002d9035b: jmpq   0x0000000002d8f11c
  0x0000000002d90360: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d9036a: mov    $0xa050f00,%eax
  0x0000000002d9036f: callq  0x0000000002d72160  ; OopMap{off=7444}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x0000000002d90374: jmpq   0x0000000002d8f170
  0x0000000002d90379: mov    %rdx,%rdx
  0x0000000002d9037c: callq  0x0000000002cdfa20  ; OopMap{off=7457}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x0000000002d90381: jmpq   0x0000000002d8f17f
  0x0000000002d90386: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d90390: mov    $0xa050f00,%eax
  0x0000000002d90395: callq  0x0000000002d72160  ; OopMap{rax=Oop off=7482}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x0000000002d9039a: jmpq   0x0000000002d8f180
  0x0000000002d9039f: mov    %rdx,%rdx
  0x0000000002d903a2: callq  0x0000000002cdf600  ; OopMap{[160]=Oop off=7495}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x0000000002d903a7: jmpq   0x0000000002d8f1c9
  0x0000000002d903ac: mov    %rbx,0x8(%rsp)
  0x0000000002d903b1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d903b9: callq  0x0000000002d710e0  ; OopMap{[160]=Oop rax=Oop off=7518}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x0000000002d903be: jmpq   0x0000000002d8f210
  0x0000000002d903c3: mov    %rbx,0x8(%rsp)
  0x0000000002d903c8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d903d0: callq  0x0000000002d710e0  ; OopMap{[160]=Oop rax=Oop off=7541}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x0000000002d903d5: jmpq   0x0000000002d8f257
  0x0000000002d903da: mov    %rbx,0x8(%rsp)
  0x0000000002d903df: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d903e7: callq  0x0000000002d710e0  ; OopMap{[160]=Oop rax=Oop off=7564}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x0000000002d903ec: jmpq   0x0000000002d8f29e
  0x0000000002d903f1: callq  0x0000000002d6e600  ; OopMap{[160]=Oop r13=Oop off=7574}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x0000000002d903f6: jmpq   0x0000000002d8f31d
  0x0000000002d903fb: mov    %r8,0x8(%rsp)
  0x0000000002d90400: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d90408: callq  0x0000000002d710e0  ; OopMap{[160]=Oop r13=Oop off=7597}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {runtime_call}
  0x0000000002d9040d: jmpq   0x0000000002d8f402
  0x0000000002d90412: mov    %r8,0x8(%rsp)
  0x0000000002d90417: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9041f: callq  0x0000000002d710e0  ; OopMap{[144]=Oop [160]=Oop off=7620}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {runtime_call}
  0x0000000002d90424: jmpq   0x0000000002d8f4fd
  0x0000000002d90429: mov    %rdx,0x8(%rsp)
  0x0000000002d9042e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d90436: callq  0x0000000002d710e0  ; OopMap{[144]=Oop [160]=Oop off=7643}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x0000000002d9043b: jmpq   0x0000000002d8f5f3
  0x0000000002d90440: mov    %rdx,%rdx
  0x0000000002d90443: callq  0x0000000002cdf600  ; OopMap{[144]=Oop [160]=Oop off=7656}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x0000000002d90448: jmpq   0x0000000002d8f634
  0x0000000002d9044d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d90457: mov    $0xa050f00,%eax
  0x0000000002d9045c: callq  0x0000000002d72160  ; OopMap{off=7681}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x0000000002d90461: jmpq   0x0000000002d8f6c0
  0x0000000002d90466: mov    %rdx,%rdx
  0x0000000002d90469: callq  0x0000000002cdfa20  ; OopMap{off=7694}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x0000000002d9046e: jmpq   0x0000000002d8f6cf
  0x0000000002d90473: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d9047d: mov    $0xa050f00,%eax
  0x0000000002d90482: callq  0x0000000002d72160  ; OopMap{rax=Oop off=7719}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x0000000002d90487: jmpq   0x0000000002d8f6d0
  0x0000000002d9048c: mov    %rdx,%rdx
  0x0000000002d9048f: callq  0x0000000002cdf600  ; OopMap{[184]=Oop off=7732}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x0000000002d90494: jmpq   0x0000000002d8f719
  0x0000000002d90499: mov    %rbx,0x8(%rsp)
  0x0000000002d9049e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d904a6: callq  0x0000000002d710e0  ; OopMap{[184]=Oop rax=Oop off=7755}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x0000000002d904ab: jmpq   0x0000000002d8f760
  0x0000000002d904b0: mov    %rbx,0x8(%rsp)
  0x0000000002d904b5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d904bd: callq  0x0000000002d710e0  ; OopMap{[184]=Oop rax=Oop off=7778}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x0000000002d904c2: jmpq   0x0000000002d8f7a7
  0x0000000002d904c7: mov    %rbx,0x8(%rsp)
  0x0000000002d904cc: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d904d4: callq  0x0000000002d710e0  ; OopMap{[184]=Oop rax=Oop off=7801}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x0000000002d904d9: jmpq   0x0000000002d8f7ee
  0x0000000002d904de: callq  0x0000000002d6e600  ; OopMap{[184]=Oop r14=Oop off=7811}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x0000000002d904e3: jmpq   0x0000000002d8f86d
  0x0000000002d904e8: mov    %r8,0x8(%rsp)
  0x0000000002d904ed: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d904f5: callq  0x0000000002d710e0  ; OopMap{[184]=Oop r14=Oop off=7834}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {runtime_call}
  0x0000000002d904fa: jmpq   0x0000000002d8f952
  0x0000000002d904ff: mov    %r8,0x8(%rsp)
  0x0000000002d90504: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9050c: callq  0x0000000002d710e0  ; OopMap{[176]=Oop [184]=Oop off=7857}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {runtime_call}
  0x0000000002d90511: jmpq   0x0000000002d8fa4d
  0x0000000002d90516: mov    %rdx,0x8(%rsp)
  0x0000000002d9051b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d90523: callq  0x0000000002d710e0  ; OopMap{[176]=Oop [184]=Oop off=7880}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x0000000002d90528: jmpq   0x0000000002d8fb43
  0x0000000002d9052d: mov    %rdx,%rdx
  0x0000000002d90530: callq  0x0000000002cdf600  ; OopMap{[176]=Oop [184]=Oop off=7893}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x0000000002d90535: jmpq   0x0000000002d8fb84
  0x0000000002d9053a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d90544: mov    $0xa050f00,%eax
  0x0000000002d90549: callq  0x0000000002d72160  ; OopMap{off=7918}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x0000000002d9054e: jmpq   0x0000000002d8fc10
  0x0000000002d90553: mov    %rdx,%rdx
  0x0000000002d90556: callq  0x0000000002cdfa20  ; OopMap{off=7931}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x0000000002d9055b: jmpq   0x0000000002d8fc1f
  0x0000000002d90560: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d9056a: mov    $0xa050f00,%eax
  0x0000000002d9056f: callq  0x0000000002d72160  ; OopMap{off=7956}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x0000000002d90574: jmpq   0x0000000002d8fc68
  0x0000000002d90579: mov    %rdx,%rdx
  0x0000000002d9057c: callq  0x0000000002cdfa20  ; OopMap{off=7969}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x0000000002d90581: jmpq   0x0000000002d8fc77
  0x0000000002d90586: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d90590: mov    $0xa050f00,%eax
  0x0000000002d90595: callq  0x0000000002d72160  ; OopMap{rax=Oop off=7994}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x0000000002d9059a: jmpq   0x0000000002d8fc78
  0x0000000002d9059f: mov    %rdx,%rdx
  0x0000000002d905a2: callq  0x0000000002cdf600  ; OopMap{[224]=Oop off=8007}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x0000000002d905a7: jmpq   0x0000000002d8fcc1
  0x0000000002d905ac: mov    %rbx,0x8(%rsp)
  0x0000000002d905b1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d905b9: callq  0x0000000002d710e0  ; OopMap{[224]=Oop rax=Oop off=8030}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x0000000002d905be: jmpq   0x0000000002d8fd08
  0x0000000002d905c3: mov    %rbx,0x8(%rsp)
  0x0000000002d905c8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d905d0: callq  0x0000000002d710e0  ; OopMap{[224]=Oop rax=Oop off=8053}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x0000000002d905d5: jmpq   0x0000000002d8fd4f
  0x0000000002d905da: mov    %rbx,0x8(%rsp)
  0x0000000002d905df: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d905e7: callq  0x0000000002d710e0  ; OopMap{[224]=Oop rax=Oop off=8076}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x0000000002d905ec: jmpq   0x0000000002d8fd96
  0x0000000002d905f1: callq  0x0000000002d6e600  ; OopMap{[224]=Oop r13=Oop off=8086}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x0000000002d905f6: jmpq   0x0000000002d8fe15
  0x0000000002d905fb: mov    %r8,0x8(%rsp)
  0x0000000002d90600: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d90608: callq  0x0000000002d710e0  ; OopMap{[224]=Oop r13=Oop off=8109}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {runtime_call}
  0x0000000002d9060d: jmpq   0x0000000002d8fefa
  0x0000000002d90612: mov    %r8,0x8(%rsp)
  0x0000000002d90617: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9061f: callq  0x0000000002d710e0  ; OopMap{[208]=Oop [224]=Oop off=8132}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {runtime_call}
  0x0000000002d90624: jmpq   0x0000000002d8fff5
  0x0000000002d90629: mov    %rdx,0x8(%rsp)
  0x0000000002d9062e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d90636: callq  0x0000000002d710e0  ; OopMap{[208]=Oop [224]=Oop off=8155}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x0000000002d9063b: jmpq   0x0000000002d900eb
  0x0000000002d90640: mov    %rdx,%rdx
  0x0000000002d90643: callq  0x0000000002cdf600  ; OopMap{[208]=Oop [224]=Oop off=8168}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x0000000002d90648: jmpq   0x0000000002d9012c
  0x0000000002d9064d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d90657: mov    $0xa050f00,%eax
  0x0000000002d9065c: callq  0x0000000002d72160  ; OopMap{off=8193}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x0000000002d90661: jmpq   0x0000000002d901b8
  0x0000000002d90666: mov    %rdx,%rdx
  0x0000000002d90669: callq  0x0000000002cdfa20  ; OopMap{off=8206}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x0000000002d9066e: jmpq   0x0000000002d901c7
  0x0000000002d90673: nop
  0x0000000002d90674: nop
  0x0000000002d90675: mov    0x2a8(%r15),%rax
  0x0000000002d9067c: movabs $0x0,%r10
  0x0000000002d90686: mov    %r10,0x2a8(%r15)
  0x0000000002d9068d: movabs $0x0,%r10
  0x0000000002d90697: mov    %r10,0x2b0(%r15)
  0x0000000002d9069e: add    $0x100,%rsp
  0x0000000002d906a5: pop    %rbp
  0x0000000002d906a6: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d906ab: hlt    
  0x0000000002d906ac: hlt    
  0x0000000002d906ad: hlt    
  0x0000000002d906ae: hlt    
  0x0000000002d906af: hlt    
  0x0000000002d906b0: hlt    
  0x0000000002d906b1: hlt    
  0x0000000002d906b2: hlt    
  0x0000000002d906b3: hlt    
  0x0000000002d906b4: hlt    
  0x0000000002d906b5: hlt    
  0x0000000002d906b6: hlt    
  0x0000000002d906b7: hlt    
  0x0000000002d906b8: hlt    
  0x0000000002d906b9: hlt    
  0x0000000002d906ba: hlt    
  0x0000000002d906bb: hlt    
  0x0000000002d906bc: hlt    
  0x0000000002d906bd: hlt    
  0x0000000002d906be: hlt    
  0x0000000002d906bf: hlt    
[Stub Code]
  0x0000000002d906c0: nop                       ;   {no_reloc}
  0x0000000002d906c1: nop
  0x0000000002d906c2: nop
  0x0000000002d906c3: nop
  0x0000000002d906c4: nop
  0x0000000002d906c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d906cf: jmpq   0x0000000002d906cf  ;   {runtime_call}
  0x0000000002d906d4: nop
  0x0000000002d906d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d906df: jmpq   0x0000000002d906df  ;   {runtime_call}
  0x0000000002d906e4: nop
  0x0000000002d906e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d906ef: jmpq   0x0000000002d906ef  ;   {runtime_call}
  0x0000000002d906f4: nop
  0x0000000002d906f5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d906ff: jmpq   0x0000000002d906ff  ;   {runtime_call}
  0x0000000002d90704: nop
  0x0000000002d90705: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9070f: jmpq   0x0000000002d9070f  ;   {runtime_call}
  0x0000000002d90714: nop
  0x0000000002d90715: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9071f: jmpq   0x0000000002d9071f  ;   {runtime_call}
  0x0000000002d90724: nop
  0x0000000002d90725: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9072f: jmpq   0x0000000002d9072f  ;   {runtime_call}
  0x0000000002d90734: nop
  0x0000000002d90735: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9073f: jmpq   0x0000000002d9073f  ;   {runtime_call}
  0x0000000002d90744: nop
  0x0000000002d90745: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9074f: jmpq   0x0000000002d9074f  ;   {runtime_call}
  0x0000000002d90754: nop
  0x0000000002d90755: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9075f: jmpq   0x0000000002d9075f  ;   {runtime_call}
  0x0000000002d90764: nop
  0x0000000002d90765: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9076f: jmpq   0x0000000002d9076f  ;   {runtime_call}
  0x0000000002d90774: nop
  0x0000000002d90775: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9077f: jmpq   0x0000000002d9077f  ;   {runtime_call}
  0x0000000002d90784: nop
  0x0000000002d90785: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9078f: jmpq   0x0000000002d9078f  ;   {runtime_call}
  0x0000000002d90794: nop
  0x0000000002d90795: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9079f: jmpq   0x0000000002d9079f  ;   {runtime_call}
  0x0000000002d907a4: nop
  0x0000000002d907a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d907af: jmpq   0x0000000002d907af  ;   {runtime_call}
  0x0000000002d907b4: nop
  0x0000000002d907b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d907bf: jmpq   0x0000000002d907bf  ;   {runtime_call}
  0x0000000002d907c4: nop
  0x0000000002d907c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d907cf: jmpq   0x0000000002d907cf  ;   {runtime_call}
[Exception Handler]
  0x0000000002d907d4: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d907d9: mov    %rsp,-0x28(%rsp)
  0x0000000002d907de: sub    $0x80,%rsp
  0x0000000002d907e5: mov    %rax,0x78(%rsp)
  0x0000000002d907ea: mov    %rcx,0x70(%rsp)
  0x0000000002d907ef: mov    %rdx,0x68(%rsp)
  0x0000000002d907f4: mov    %rbx,0x60(%rsp)
  0x0000000002d907f9: mov    %rbp,0x50(%rsp)
  0x0000000002d907fe: mov    %rsi,0x48(%rsp)
  0x0000000002d90803: mov    %rdi,0x40(%rsp)
  0x0000000002d90808: mov    %r8,0x38(%rsp)
  0x0000000002d9080d: mov    %r9,0x30(%rsp)
  0x0000000002d90812: mov    %r10,0x28(%rsp)
  0x0000000002d90817: mov    %r11,0x20(%rsp)
  0x0000000002d9081c: mov    %r12,0x18(%rsp)
  0x0000000002d90821: mov    %r13,0x10(%rsp)
  0x0000000002d90826: mov    %r14,0x8(%rsp)
  0x0000000002d9082b: mov    %r15,(%rsp)
  0x0000000002d9082f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d90839: movabs $0x2d907d9,%rdx    ;   {internal_word}
  0x0000000002d90843: mov    %rsp,%r8
  0x0000000002d90846: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9084a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9084f: hlt    
[Deopt Handler Code]
  0x0000000002d90850: movabs $0x2d90850,%r10    ;   {section_word}
  0x0000000002d9085a: push   %r10
  0x0000000002d9085c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d90861: hlt    
  0x0000000002d90862: hlt    
  0x0000000002d90863: hlt    
  0x0000000002d90864: hlt    
  0x0000000002d90865: hlt    
  0x0000000002d90866: hlt    
  0x0000000002d90867: hlt    
<nmethod compile_id='33' compiler='C1' level='3' entry='0x0000000002d8e660' size='15216' address='0x0000000002d8e290' relocation_offset='288' insts_offset='976' stub_offset='9264' scopes_data_offset='9784' scopes_pcs_offset='12032' dependencies_offset='15072' nul_chk_table_offset='15088' oops_offset='9688' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='602' backedge_count='8598' iicount='602' stamp='6.443'/>
<writer thread='11160'/>
Decoding compiled method 0x0000000002d8a7d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000193e5d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x70]  (sp of caller)
  0x0000000002d8a920: mov    0x8(%rdx),%r10d
  0x0000000002d8a924: shl    $0x3,%r10
  0x0000000002d8a928: cmp    %r10,%rax
  0x0000000002d8a92b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d8a931: data16 xchg %ax,%ax
  0x0000000002d8a934: nopl   0x0(%rax,%rax,1)
  0x0000000002d8a93c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d8a940: mov    %eax,-0x6000(%rsp)
  0x0000000002d8a947: push   %rbp
  0x0000000002d8a948: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x0000000002d8a94c: mov    %r8d,0x20(%rsp)
  0x0000000002d8a951: mov    %rdx,%rbp
  0x0000000002d8a954: mov    0x10(%rdx),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8a958: mov    0xc(%r12,%r9,8),%edi  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; implicit exception: dispatches to 0x0000000002d8ac08
  0x0000000002d8a95d: mov    0xc(%rdx),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)

  0x0000000002d8a961: mov    %r11d,%ebx
  0x0000000002d8a964: sub    %edi,%ebx
  0x0000000002d8a966: mov    %r9,%rcx
  0x0000000002d8a969: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8a96d: inc    %ebx
  0x0000000002d8a96f: mov    %r11d,%r8d
  0x0000000002d8a972: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)

  0x0000000002d8a975: test   %ebx,%ebx
  0x0000000002d8a977: jg     0x0000000002d8a9ad  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x0000000002d8a979: mov    %r8d,0xc(%rbp)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)

  0x0000000002d8a97d: test   %rcx,%rcx
  0x0000000002d8a980: je     0x0000000002d8ab98
  0x0000000002d8a986: mov    0xc(%rcx),%r8d
  0x0000000002d8a98a: cmp    %r8d,%r11d
  0x0000000002d8a98d: jae    0x0000000002d8abad
  0x0000000002d8a993: mov    0x20(%rsp),%r8d
  0x0000000002d8a998: mov    %r8w,0x10(%rcx,%r11,2)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x0000000002d8a99e: mov    %rbp,%rax
  0x0000000002d8a9a1: add    $0x60,%rsp
  0x0000000002d8a9a5: pop    %rbp
  0x0000000002d8a9a6: test   %eax,-0x3fa9ac(%rip)        # 0x0000000002990000
                                                ;   {poll_return}
  0x0000000002d8a9ac: retq   
  0x0000000002d8a9ad: mov    %edi,%r10d
  0x0000000002d8a9b0: shl    %r10d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8a9b3: mov    %r10d,%ebx
  0x0000000002d8a9b6: sub    %r11d,%ebx
  0x0000000002d8a9b9: inc    %ebx
  0x0000000002d8a9bb: test   %ebx,%ebx
  0x0000000002d8a9bd: jge    0x0000000002d8aaf9  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8a9c3: mov    %r8d,%r10d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8a9c6: test   %r10d,%r10d
  0x0000000002d8a9c9: jle    0x0000000002d8a9d9  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8a9cb: mov    $0x7ffffff7,%r11d
  0x0000000002d8a9d1: sub    %r10d,%r11d
  0x0000000002d8a9d4: test   %r11d,%r11d
  0x0000000002d8a9d7: jge    0x0000000002d8a9fd  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8a9d9: mov    %edi,0x38(%rsp)
  0x0000000002d8a9dd: mov    %r9d,0x24(%rsp)
  0x0000000002d8a9e2: mov    %rcx,0x28(%rsp)
  0x0000000002d8a9e7: callq  0x0000000002cb61a0  ; OopMap{rbp=Oop [36]=NarrowOop [40]=Oop off=204}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {optimized virtual_call}
  0x0000000002d8a9ec: mov    0x28(%rsp),%rcx
  0x0000000002d8a9f1: mov    %eax,%r10d
  0x0000000002d8a9f4: mov    0x24(%rsp),%r9d
  0x0000000002d8a9f9: mov    0x38(%rsp),%edi    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8a9fd: cmp    $0x80000,%r10d
  0x0000000002d8aa04: ja     0x0000000002d8abc5
  0x0000000002d8aa0a: movslq %r10d,%r11
  0x0000000002d8aa0d: shl    %r11
  0x0000000002d8aa10: add    $0x17,%r11
  0x0000000002d8aa14: mov    %r11,%r8
  0x0000000002d8aa17: and    $0xfffffffffffffff8,%r8
  0x0000000002d8aa1b: cmp    $0x80000,%r10d
  0x0000000002d8aa22: ja     0x0000000002d8ab45
  0x0000000002d8aa28: mov    0x60(%r15),%rbx
  0x0000000002d8aa2c: mov    %rbx,%rdx
  0x0000000002d8aa2f: add    %r8,%rdx
  0x0000000002d8aa32: cmp    0x70(%r15),%rdx
  0x0000000002d8aa36: jae    0x0000000002d8ab45
  0x0000000002d8aa3c: mov    %rdx,0x60(%r15)
  0x0000000002d8aa40: prefetchw 0xc0(%rdx)
  0x0000000002d8aa47: movq   $0x1,(%rbx)
  0x0000000002d8aa4e: prefetchw 0x100(%rdx)
  0x0000000002d8aa55: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x0000000002d8aa5c: mov    %r10d,0xc(%rbx)
  0x0000000002d8aa60: prefetchw 0x140(%rdx)
  0x0000000002d8aa67: prefetchw 0x180(%rdx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8aa6e: cmp    %r10d,%edi
  0x0000000002d8aa71: mov    %r10d,%esi
  0x0000000002d8aa74: cmovl  %edi,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8aa77: mov    %rbx,%r13
  0x0000000002d8aa7a: add    $0x10,%r13         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8aa7e: lea    (%r12,%r9,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8aa82: shr    $0x3,%r11
  0x0000000002d8aa86: mov    %r11,%rcx
  0x0000000002d8aa89: add    $0xfffffffffffffffe,%rcx
  0x0000000002d8aa8d: cmp    %esi,%edi
  0x0000000002d8aa8f: jb     0x0000000002d8abcd
  0x0000000002d8aa95: cmp    %esi,%r10d
  0x0000000002d8aa98: jb     0x0000000002d8abcd
  0x0000000002d8aa9e: test   %esi,%esi
  0x0000000002d8aaa0: jle    0x0000000002d8abf6
  0x0000000002d8aaa6: lea    0x10(%r12,%r9,8),%r9
  0x0000000002d8aaab: cmp    %r10d,%esi
  0x0000000002d8aaae: jl     0x0000000002d8ab02
  0x0000000002d8aab0: add    $0xfffffffffffffff0,%r8
  0x0000000002d8aab4: shr    $0x3,%r8
  0x0000000002d8aab8: mov    %r9,%rcx
  0x0000000002d8aabb: mov    %r13,%rdx
  0x0000000002d8aabe: movabs $0x2cc2ca0,%r10
  0x0000000002d8aac8: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8aacb: mov    0xc(%rbp),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x0000000002d8aacf: mov    %rbx,%r8
  0x0000000002d8aad2: shr    $0x3,%r8
  0x0000000002d8aad6: mov    %r8d,0x10(%rbp)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8aada: mov    %r11d,%r8d
  0x0000000002d8aadd: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)

  0x0000000002d8aae0: mov    %rbp,%r10
  0x0000000002d8aae3: shr    $0x9,%r10
  0x0000000002d8aae7: mov    $0xe824000,%r9d
  0x0000000002d8aaed: mov    %r12b,(%r9,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8aaf1: mov    %rbx,%rcx
  0x0000000002d8aaf4: jmpq   0x0000000002d8a979
  0x0000000002d8aaf9: add    $0x2,%r10d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8aafd: jmpq   0x0000000002d8a9c6
  0x0000000002d8ab02: movslq %esi,%r8
  0x0000000002d8ab05: mov    %r8,%r10
  0x0000000002d8ab08: shl    %r10
  0x0000000002d8ab0b: add    $0x10,%r10
  0x0000000002d8ab0f: mov    %r10,%rcx
  0x0000000002d8ab12: and    $0xfffffffffffffff9,%rcx
  0x0000000002d8ab16: mov    %rbx,%rdi
  0x0000000002d8ab19: add    %rcx,%rdi
  0x0000000002d8ab1c: shr    $0x3,%r10
  0x0000000002d8ab20: sub    %r10,%r11
  0x0000000002d8ab23: mov    %r11,%rcx
  0x0000000002d8ab26: xor    %rax,%rax
  0x0000000002d8ab29: shl    $0x3,%rcx
  0x0000000002d8ab2d: rep rex.W stos %al,%es:(%rdi)
  0x0000000002d8ab30: mov    %r9,%rcx
  0x0000000002d8ab33: mov    %r13,%rdx
  0x0000000002d8ab36: movabs $0x2cc2980,%r10
  0x0000000002d8ab40: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8ab43: jmp    0x0000000002d8aacb
  0x0000000002d8ab45: mov    %edi,0x4c(%rsp)
  0x0000000002d8ab49: mov    %r9d,0x48(%rsp)
  0x0000000002d8ab4e: mov    %r8,0x30(%rsp)
  0x0000000002d8ab53: mov    %r11,0x28(%rsp)
  0x0000000002d8ab58: mov    %r10d,0x24(%rsp)
  0x0000000002d8ab5d: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002d8ab67: mov    0x24(%rsp),%r8d
  0x0000000002d8ab6c: mov    %rcx,0x40(%rsp)
  0x0000000002d8ab71: xchg   %ax,%ax
  0x0000000002d8ab73: callq  0x0000000002d70d60  ; OopMap{rbp=Oop [64]=Oop [72]=NarrowOop off=600}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002d8ab78: mov    0x24(%rsp),%r10d
  0x0000000002d8ab7d: mov    0x28(%rsp),%r11
  0x0000000002d8ab82: mov    0x30(%rsp),%r8
  0x0000000002d8ab87: mov    0x48(%rsp),%r9d
  0x0000000002d8ab8c: mov    0x4c(%rsp),%edi
  0x0000000002d8ab90: mov    %rax,%rbx
  0x0000000002d8ab93: jmpq   0x0000000002d8aa6e
  0x0000000002d8ab98: mov    $0xfffffff6,%edx
  0x0000000002d8ab9d: mov    0x20(%rsp),%ebp
  0x0000000002d8aba1: mov    %r11d,0x20(%rsp)
  0x0000000002d8aba6: nop
  0x0000000002d8aba7: callq  0x0000000002cb57a0  ; OopMap{off=652}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002d8abac: int3   
  0x0000000002d8abad: mov    $0xffffffe4,%edx
  0x0000000002d8abb2: mov    %rcx,0x28(%rsp)
  0x0000000002d8abb7: mov    %r11d,0x24(%rsp)
  0x0000000002d8abbc: data16 xchg %ax,%ax
  0x0000000002d8abbf: callq  0x0000000002cb57a0  ; OopMap{rbp=Oop [40]=Oop off=676}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002d8abc4: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)

  0x0000000002d8abc5: movslq %r10d,%r11         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8abc8: jmpq   0x0000000002d8aa0d
  0x0000000002d8abcd: mov    %r13,%rdi
  0x0000000002d8abd0: xor    %rax,%rax
  0x0000000002d8abd3: shl    $0x3,%rcx
  0x0000000002d8abd7: rep rex.W stos %al,%es:(%rdi)
  0x0000000002d8abda: xor    %r8d,%r8d
  0x0000000002d8abdd: mov    %rbx,%r9
  0x0000000002d8abe0: xor    %edi,%edi
  0x0000000002d8abe2: mov    %rbx,0x38(%rsp)
  0x0000000002d8abe7: callq  0x0000000002d767e0  ; OopMap{rbp=Oop [56]=Oop off=716}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002d8abec: mov    0x38(%rsp),%rbx
  0x0000000002d8abf1: jmpq   0x0000000002d8aacb
  0x0000000002d8abf6: mov    %r13,%rdi
  0x0000000002d8abf9: xor    %rax,%rax
  0x0000000002d8abfc: shl    $0x3,%rcx
  0x0000000002d8ac00: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8ac03: jmpq   0x0000000002d8aacb
  0x0000000002d8ac08: mov    $0xfffffff6,%edx
  0x0000000002d8ac0d: xchg   %ax,%ax
  0x0000000002d8ac0f: callq  0x0000000002cb57a0  ; OopMap{off=756}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002d8ac14: int3   
  0x0000000002d8ac15: jmp    0x0000000002d8ac17  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8ac17: mov    %rax,%rdx
  0x0000000002d8ac1a: jmp    0x0000000002d8ac1f  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002d8ac1c: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x0000000002d8ac1f: add    $0x60,%rsp
  0x0000000002d8ac23: pop    %rbp
  0x0000000002d8ac24: jmpq   0x0000000002d72f60  ;   {runtime_call}
  0x0000000002d8ac29: hlt    
  0x0000000002d8ac2a: hlt    
  0x0000000002d8ac2b: hlt    
  0x0000000002d8ac2c: hlt    
  0x0000000002d8ac2d: hlt    
  0x0000000002d8ac2e: hlt    
  0x0000000002d8ac2f: hlt    
  0x0000000002d8ac30: hlt    
  0x0000000002d8ac31: hlt    
  0x0000000002d8ac32: hlt    
  0x0000000002d8ac33: hlt    
  0x0000000002d8ac34: hlt    
  0x0000000002d8ac35: hlt    
  0x0000000002d8ac36: hlt    
  0x0000000002d8ac37: hlt    
  0x0000000002d8ac38: hlt    
  0x0000000002d8ac39: hlt    
  0x0000000002d8ac3a: hlt    
  0x0000000002d8ac3b: hlt    
  0x0000000002d8ac3c: hlt    
  0x0000000002d8ac3d: hlt    
  0x0000000002d8ac3e: hlt    
  0x0000000002d8ac3f: hlt    
[Stub Code]
  0x0000000002d8ac40: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002d8ac4a: jmpq   0x0000000002d8ac4a  ;   {runtime_call}
[Exception Handler]
  0x0000000002d8ac4f: jmpq   0x0000000002cdf4a0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002d8ac54: callq  0x0000000002d8ac59
  0x0000000002d8ac59: subq   $0x5,(%rsp)
  0x0000000002d8ac5e: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d8ac63: hlt    
  0x0000000002d8ac64: hlt    
  0x0000000002d8ac65: hlt    
  0x0000000002d8ac66: hlt    
  0x0000000002d8ac67: hlt    
<nmethod compile_id='28' compiler='C2' level='4' entry='0x0000000002d8a920' size='2240' address='0x0000000002d8a7d0' relocation_offset='288' insts_offset='336' stub_offset='1136' scopes_data_offset='1216' scopes_pcs_offset='1504' dependencies_offset='2144' handler_table_offset='2152' nul_chk_table_offset='2224' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='6598' iicount='6598' stamp='6.475'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d8d990:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019650e98} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;
  # this:     rdx:rdx   = &apos;java/io/DataInputStream&apos;
  # parm0:    r8:r8     = &apos;[B&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x80]  (sp of caller)
  0x0000000002d8db40: mov    0x8(%rdx),%r10d
  0x0000000002d8db44: shl    $0x3,%r10
  0x0000000002d8db48: cmp    %rax,%r10
  0x0000000002d8db4b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d8db51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d8db5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d8db60: mov    %eax,-0x6000(%rsp)
  0x0000000002d8db67: push   %rbp
  0x0000000002d8db68: sub    $0x70,%rsp
  0x0000000002d8db6c: mov    %rdx,0x38(%rsp)
  0x0000000002d8db71: mov    %r8,0x48(%rsp)
  0x0000000002d8db76: mov    %r9d,0x40(%rsp)
  0x0000000002d8db7b: mov    %edi,0x34(%rsp)
  0x0000000002d8db7f: movabs $0x19654bc8,%rsi   ;   {metadata(method data for {method} {0x0000000019650e98} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8db89: mov    0xdc(%rsi),%ebx
  0x0000000002d8db8f: add    $0x8,%ebx
  0x0000000002d8db92: mov    %ebx,0xdc(%rsi)
  0x0000000002d8db98: movabs $0x19650e90,%rsi   ;   {metadata({method} {0x0000000019650e98} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8dba2: and    $0x1ff8,%ebx
  0x0000000002d8dba8: cmp    $0x0,%ebx
  0x0000000002d8dbab: je     0x0000000002d8de26  ;*iload_3
                                                ; - java.io.DataInputStream::readFully@0 (line 191)

  0x0000000002d8dbb1: cmp    $0x0,%edi
  0x0000000002d8dbb4: movabs $0x19654bc8,%rsi   ;   {metadata(method data for {method} {0x0000000019650e98} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8dbbe: movabs $0x108,%rbx
  0x0000000002d8dbc8: jge    0x0000000002d8dbd8
  0x0000000002d8dbce: movabs $0x118,%rbx
  0x0000000002d8dbd8: mov    (%rsi,%rbx,1),%rax
  0x0000000002d8dbdc: lea    0x1(%rax),%rax
  0x0000000002d8dbe0: mov    %rax,(%rsi,%rbx,1)
  0x0000000002d8dbe4: jl     0x0000000002d8dde6  ;*ifge
                                                ; - java.io.DataInputStream::readFully@1 (line 191)

  0x0000000002d8dbea: mov    $0x0,%esi
  0x0000000002d8dbef: jmpq   0x0000000002d8dd5f  ;*iload
                                                ; - java.io.DataInputStream::readFully@15 (line 194)

  0x0000000002d8dbf4: nopl   0x0(%rax)
  0x0000000002d8dbf8: mov    0xc(%rdx),%ebx
  0x0000000002d8dbfb: shl    $0x3,%rbx          ;*getfield in
                                                ; - java.io.DataInputStream::readFully@22 (line 195)

  0x0000000002d8dbff: cmp    (%rbx),%rax        ; implicit exception: dispatches to 0x0000000002d8de3d
  0x0000000002d8dc02: mov    %rbx,%rax
  0x0000000002d8dc05: movabs $0x19654bc8,%rcx   ;   {metadata(method data for {method} {0x0000000019650e98} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8dc0f: mov    0x8(%rax),%eax
  0x0000000002d8dc12: shl    $0x3,%rax
  0x0000000002d8dc16: cmp    0x160(%rcx),%rax
  0x0000000002d8dc1d: jne    0x0000000002d8dc2c
  0x0000000002d8dc1f: addq   $0x1,0x168(%rcx)
  0x0000000002d8dc27: jmpq   0x0000000002d8dc92
  0x0000000002d8dc2c: cmp    0x170(%rcx),%rax
  0x0000000002d8dc33: jne    0x0000000002d8dc42
  0x0000000002d8dc35: addq   $0x1,0x178(%rcx)
  0x0000000002d8dc3d: jmpq   0x0000000002d8dc92
  0x0000000002d8dc42: cmpq   $0x0,0x160(%rcx)
  0x0000000002d8dc4d: jne    0x0000000002d8dc66
  0x0000000002d8dc4f: mov    %rax,0x160(%rcx)
  0x0000000002d8dc56: movq   $0x1,0x168(%rcx)
  0x0000000002d8dc61: jmpq   0x0000000002d8dc92
  0x0000000002d8dc66: cmpq   $0x0,0x170(%rcx)
  0x0000000002d8dc71: jne    0x0000000002d8dc8a
  0x0000000002d8dc73: mov    %rax,0x170(%rcx)
  0x0000000002d8dc7a: movq   $0x1,0x178(%rcx)
  0x0000000002d8dc85: jmpq   0x0000000002d8dc92
  0x0000000002d8dc8a: addq   $0x1,0x158(%rcx)
  0x0000000002d8dc92: mov    %rsi,%rax
  0x0000000002d8dc95: add    %r9d,%eax
  0x0000000002d8dc98: mov    %rdi,%rcx
  0x0000000002d8dc9b: sub    %esi,%ecx
  0x0000000002d8dc9d: mov    %r8,%r11
  0x0000000002d8dca0: mov    %r11,%r8
  0x0000000002d8dca3: mov    %rax,%r9
  0x0000000002d8dca6: mov    %rcx,%rdi
  0x0000000002d8dca9: mov    %rbx,%rdx          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)

  0x0000000002d8dcac: mov    %esi,0x30(%rsp)
  0x0000000002d8dcb0: nop
  0x0000000002d8dcb1: nop
  0x0000000002d8dcb2: nop
  0x0000000002d8dcb3: nop
  0x0000000002d8dcb4: nop
  0x0000000002d8dcb5: movabs $0xffffffffffffffff,%rax
  0x0000000002d8dcbf: callq  0x0000000002cb63e0  ; OopMap{[56]=Oop [72]=Oop off=388}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)
                                                ;   {virtual_call}
  0x0000000002d8dcc4: cmp    $0x0,%eax
  0x0000000002d8dcc7: movabs $0x19654bc8,%rdx   ;   {metadata(method data for {method} {0x0000000019650e98} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8dcd1: movabs $0x188,%rsi
  0x0000000002d8dcdb: jge    0x0000000002d8dceb
  0x0000000002d8dce1: movabs $0x198,%rsi
  0x0000000002d8dceb: mov    (%rdx,%rsi,1),%rdi
  0x0000000002d8dcef: lea    0x1(%rdi),%rdi
  0x0000000002d8dcf3: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002d8dcf7: jl     0x0000000002d8dda3  ;*ifge
                                                ; - java.io.DataInputStream::readFully@41 (line 196)

  0x0000000002d8dcfd: add    0x30(%rsp),%eax
  0x0000000002d8dd01: movabs $0x19654bc8,%rdx   ;   {metadata(method data for {method} {0x0000000019650e98} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8dd0b: mov    0xe0(%rdx),%esi
  0x0000000002d8dd11: add    $0x8,%esi
  0x0000000002d8dd14: mov    %esi,0xe0(%rdx)
  0x0000000002d8dd1a: movabs $0x19650e90,%rdx   ;   {metadata({method} {0x0000000019650e98} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8dd24: and    $0xfff8,%esi
  0x0000000002d8dd2a: cmp    $0x0,%esi
  0x0000000002d8dd2d: je     0x0000000002d8de42  ; OopMap{[56]=Oop [72]=Oop off=499}
                                                ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)

  0x0000000002d8dd33: test   %eax,-0x3fdc39(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d8dd39: movabs $0x19654bc8,%rdx   ;   {metadata(method data for {method} {0x0000000019650e98} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8dd43: incl   0x1b8(%rdx)
  0x0000000002d8dd49: mov    %rax,%rsi          ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)

  0x0000000002d8dd4c: mov    0x34(%rsp),%edi
  0x0000000002d8dd50: mov    0x40(%rsp),%r9d
  0x0000000002d8dd55: mov    0x48(%rsp),%r8
  0x0000000002d8dd5a: mov    0x38(%rsp),%rdx
  0x0000000002d8dd5f: cmp    %edi,%esi
  0x0000000002d8dd61: movabs $0x19654bc8,%rbx   ;   {metadata(method data for {method} {0x0000000019650e98} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8dd6b: movabs $0x138,%rax
  0x0000000002d8dd75: jge    0x0000000002d8dd85
  0x0000000002d8dd7b: movabs $0x148,%rax
  0x0000000002d8dd85: mov    (%rbx,%rax,1),%rcx
  0x0000000002d8dd89: lea    0x1(%rcx),%rcx
  0x0000000002d8dd8d: mov    %rcx,(%rbx,%rax,1)
  0x0000000002d8dd91: jl     0x0000000002d8dbf8  ;*if_icmpge
                                                ; - java.io.DataInputStream::readFully@18 (line 194)

  0x0000000002d8dd97: add    $0x70,%rsp
  0x0000000002d8dd9b: pop    %rbp
  0x0000000002d8dd9c: test   %eax,-0x3fdca2(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d8dda2: retq                      ;*return
                                                ; - java.io.DataInputStream::readFully@62 (line 200)

  0x0000000002d8dda3: nopl   0x0(%rax,%rax,1)
  0x0000000002d8dda8: jmpq   0x0000000002d8de68  ;   {no_reloc}
  0x0000000002d8ddad: add    %al,(%rax)
  0x0000000002d8ddaf: add    %al,(%rax)
  0x0000000002d8ddb1: add    %ch,%cl
  0x0000000002d8ddb3: mov    $0x48000000,%ebx   ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)

  0x0000000002d8ddb8: mov    %eax,%edx
  0x0000000002d8ddba: movabs $0x19654bc8,%rsi   ;   {metadata(method data for {method} {0x0000000019650e98} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8ddc4: addq   $0x1,0x1a8(%rsi)
  0x0000000002d8ddcc: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@48 (line 197)

  0x0000000002d8ddcf: mov    %rax,0x50(%rsp)
  0x0000000002d8ddd4: nop
  0x0000000002d8ddd5: nop
  0x0000000002d8ddd6: nop
  0x0000000002d8ddd7: callq  0x0000000002cb61a0  ; OopMap{[80]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@48 (line 197)
                                                ;   {optimized virtual_call}
  0x0000000002d8dddc: mov    0x50(%rsp),%rax
  0x0000000002d8dde1: jmpq   0x0000000002d8ded0  ;*athrow
                                                ; - java.io.DataInputStream::readFully@51 (line 197)

  0x0000000002d8dde6: xchg   %ax,%ax
  0x0000000002d8dde8: jmpq   0x0000000002d8de8e  ;   {no_reloc}
  0x0000000002d8dded: add    %al,(%rax)
  0x0000000002d8ddef: add    %al,(%rax)
  0x0000000002d8ddf1: add    %ch,%cl
  0x0000000002d8ddf3: movabs 0xbe48d08b48000000,%eax  ;*new
                                                ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {metadata(method data for {method} {0x0000000019650e98} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002d8ddfc: enterq $0x654b,$0x19
  0x0000000002d8de00: add    %al,(%rax)
  0x0000000002d8de02: add    %al,(%rax)
  0x0000000002d8de04: addq   $0x1,0x128(%rsi)
  0x0000000002d8de0c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@8 (line 192)

  0x0000000002d8de0f: mov    %rax,0x58(%rsp)
  0x0000000002d8de14: nop
  0x0000000002d8de15: nop
  0x0000000002d8de16: nop
  0x0000000002d8de17: callq  0x0000000002cb61a0  ; OopMap{[88]=Oop off=732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@8 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000002d8de1c: mov    0x58(%rsp),%rax
  0x0000000002d8de21: jmpq   0x0000000002d8ded0
  0x0000000002d8de26: mov    %rsi,0x8(%rsp)
  0x0000000002d8de2b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d8de33: callq  0x0000000002d710e0  ; OopMap{rdx=Oop [56]=Oop r8=Oop [72]=Oop off=760}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readFully@-1 (line 191)
                                                ;   {runtime_call}
  0x0000000002d8de38: jmpq   0x0000000002d8dbb1
  0x0000000002d8de3d: callq  0x0000000002cdff40  ; OopMap{rdx=Oop [56]=Oop r8=Oop [72]=Oop rbx=Oop off=770}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)
                                                ;   {runtime_call}
  0x0000000002d8de42: mov    %rdx,0x8(%rsp)
  0x0000000002d8de47: movq   $0x3b,(%rsp)
  0x0000000002d8de4f: callq  0x0000000002d710e0  ; OopMap{[56]=Oop [72]=Oop off=788}
                                                ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)
                                                ;   {runtime_call}
  0x0000000002d8de54: jmpq   0x0000000002d8dd33
  0x0000000002d8de59: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d8de63: mov    $0xa050f00,%eax
  0x0000000002d8de68: callq  0x0000000002d72160  ; OopMap{off=813}
                                                ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)
                                                ;   {runtime_call}
  0x0000000002d8de6d: jmpq   0x0000000002d8dda8
  0x0000000002d8de72: mov    %rdx,%rdx
  0x0000000002d8de75: callq  0x0000000002cdfa20  ; OopMap{off=826}
                                                ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)
                                                ;   {runtime_call}
  0x0000000002d8de7a: jmpq   0x0000000002d8ddb7
  0x0000000002d8de7f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d8de89: mov    $0xa050f00,%eax
  0x0000000002d8de8e: callq  0x0000000002d72160  ; OopMap{off=851}
                                                ;*new  ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {runtime_call}
  0x0000000002d8de93: jmpq   0x0000000002d8dde8
  0x0000000002d8de98: mov    %rdx,%rdx
  0x0000000002d8de9b: callq  0x0000000002cdfa20  ; OopMap{off=864}
                                                ;*new  ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {runtime_call}
  0x0000000002d8dea0: jmpq   0x0000000002d8ddf7
  0x0000000002d8dea5: nop
  0x0000000002d8dea6: nop
  0x0000000002d8dea7: mov    0x2a8(%r15),%rax
  0x0000000002d8deae: movabs $0x0,%r10
  0x0000000002d8deb8: mov    %r10,0x2a8(%r15)
  0x0000000002d8debf: movabs $0x0,%r10
  0x0000000002d8dec9: mov    %r10,0x2b0(%r15)
  0x0000000002d8ded0: add    $0x70,%rsp
  0x0000000002d8ded4: pop    %rbp
  0x0000000002d8ded5: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d8deda: hlt    
  0x0000000002d8dedb: hlt    
  0x0000000002d8dedc: hlt    
  0x0000000002d8dedd: hlt    
  0x0000000002d8dede: hlt    
  0x0000000002d8dedf: hlt    
[Stub Code]
  0x0000000002d8dee0: nop                       ;   {no_reloc}
  0x0000000002d8dee1: nop
  0x0000000002d8dee2: nop
  0x0000000002d8dee3: nop
  0x0000000002d8dee4: nop
  0x0000000002d8dee5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8deef: jmpq   0x0000000002d8deef  ;   {runtime_call}
  0x0000000002d8def4: nop
  0x0000000002d8def5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8deff: jmpq   0x0000000002d8deff  ;   {runtime_call}
  0x0000000002d8df04: nop
  0x0000000002d8df05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8df0f: jmpq   0x0000000002d8df0f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d8df14: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d8df19: mov    %rsp,-0x28(%rsp)
  0x0000000002d8df1e: sub    $0x80,%rsp
  0x0000000002d8df25: mov    %rax,0x78(%rsp)
  0x0000000002d8df2a: mov    %rcx,0x70(%rsp)
  0x0000000002d8df2f: mov    %rdx,0x68(%rsp)
  0x0000000002d8df34: mov    %rbx,0x60(%rsp)
  0x0000000002d8df39: mov    %rbp,0x50(%rsp)
  0x0000000002d8df3e: mov    %rsi,0x48(%rsp)
  0x0000000002d8df43: mov    %rdi,0x40(%rsp)
  0x0000000002d8df48: mov    %r8,0x38(%rsp)
  0x0000000002d8df4d: mov    %r9,0x30(%rsp)
  0x0000000002d8df52: mov    %r10,0x28(%rsp)
  0x0000000002d8df57: mov    %r11,0x20(%rsp)
  0x0000000002d8df5c: mov    %r12,0x18(%rsp)
  0x0000000002d8df61: mov    %r13,0x10(%rsp)
  0x0000000002d8df66: mov    %r14,0x8(%rsp)
  0x0000000002d8df6b: mov    %r15,(%rsp)
  0x0000000002d8df6f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d8df79: movabs $0x2d8df19,%rdx    ;   {internal_word}
  0x0000000002d8df83: mov    %rsp,%r8
  0x0000000002d8df86: and    $0xfffffffffffffff0,%rsp
  0x0000000002d8df8a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d8df8f: hlt    
[Deopt Handler Code]
  0x0000000002d8df90: movabs $0x2d8df90,%r10    ;   {section_word}
  0x0000000002d8df9a: push   %r10
  0x0000000002d8df9c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d8dfa1: hlt    
  0x0000000002d8dfa2: hlt    
  0x0000000002d8dfa3: hlt    
  0x0000000002d8dfa4: hlt    
  0x0000000002d8dfa5: hlt    
  0x0000000002d8dfa6: hlt    
  0x0000000002d8dfa7: hlt    
<nmethod compile_id='38' compiler='C1' level='3' entry='0x0000000002d8db40' size='2232' address='0x0000000002d8d990' relocation_offset='288' insts_offset='432' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1776' dependencies_offset='2208' nul_chk_table_offset='2216' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='992' backedge_count='992' iicount='992' stamp='6.507'/>
<writer thread='27984'/>
<task_queued compile_id='44' method='com/zju/leetcode/multiThread/testThread access$000 (Lcom/zju/leetcode/multiThread/testThread;)Z' bytes='5' count='128' iicount='128' level='1' stamp='6.507' comment='tiered' hot_count='128'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d8cfd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000194c3008} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x90]  (sp of caller)
  0x0000000002d8d160: mov    0x8(%rdx),%r10d
  0x0000000002d8d164: shl    $0x3,%r10
  0x0000000002d8d168: cmp    %rax,%r10
  0x0000000002d8d16b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d8d171: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d8d17c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d8d180: mov    %eax,-0x6000(%rsp)
  0x0000000002d8d187: push   %rbp
  0x0000000002d8d188: sub    $0x80,%rsp
  0x0000000002d8d18f: mov    %rdx,0x50(%rsp)
  0x0000000002d8d194: lea    0x60(%rsp),%rsi
  0x0000000002d8d199: mov    %rdx,0x8(%rsi)
  0x0000000002d8d19d: mov    (%rdx),%rax
  0x0000000002d8d1a0: mov    %rax,%rdi
  0x0000000002d8d1a3: and    $0x7,%rdi
  0x0000000002d8d1a7: cmp    $0x5,%rdi
  0x0000000002d8d1ab: jne    0x0000000002d8d232
  0x0000000002d8d1b1: mov    0x8(%rdx),%edi
  0x0000000002d8d1b4: shl    $0x3,%rdi
  0x0000000002d8d1b8: mov    0xa8(%rdi),%rdi
  0x0000000002d8d1bf: or     %r15,%rdi
  0x0000000002d8d1c2: xor    %rax,%rdi
  0x0000000002d8d1c5: and    $0xffffffffffffff87,%rdi
  0x0000000002d8d1c9: je     0x0000000002d8d25a
  0x0000000002d8d1cf: test   $0x7,%rdi
  0x0000000002d8d1d6: jne    0x0000000002d8d21f
  0x0000000002d8d1d8: test   $0x300,%rdi
  0x0000000002d8d1df: jne    0x0000000002d8d1fe
  0x0000000002d8d1e1: and    $0x37f,%rax
  0x0000000002d8d1e8: mov    %rax,%rdi
  0x0000000002d8d1eb: or     %r15,%rdi
  0x0000000002d8d1ee: lock cmpxchg %rdi,(%rdx)
  0x0000000002d8d1f3: jne    0x0000000002d8d4b6
  0x0000000002d8d1f9: jmpq   0x0000000002d8d25a
  0x0000000002d8d1fe: mov    0x8(%rdx),%edi
  0x0000000002d8d201: shl    $0x3,%rdi
  0x0000000002d8d205: mov    0xa8(%rdi),%rdi
  0x0000000002d8d20c: or     %r15,%rdi
  0x0000000002d8d20f: lock cmpxchg %rdi,(%rdx)
  0x0000000002d8d214: jne    0x0000000002d8d4b6
  0x0000000002d8d21a: jmpq   0x0000000002d8d25a
  0x0000000002d8d21f: mov    0x8(%rdx),%edi
  0x0000000002d8d222: shl    $0x3,%rdi
  0x0000000002d8d226: mov    0xa8(%rdi),%rdi
  0x0000000002d8d22d: lock cmpxchg %rdi,(%rdx)
  0x0000000002d8d232: mov    (%rdx),%rax
  0x0000000002d8d235: or     $0x1,%rax
  0x0000000002d8d239: mov    %rax,(%rsi)
  0x0000000002d8d23c: lock cmpxchg %rsi,(%rdx)
  0x0000000002d8d241: je     0x0000000002d8d25a
  0x0000000002d8d247: sub    %rsp,%rax
  0x0000000002d8d24a: and    $0xfffffffffffff007,%rax
  0x0000000002d8d251: mov    %rax,(%rsi)
  0x0000000002d8d254: jne    0x0000000002d8d4b6
  0x0000000002d8d25a: movabs $0x19654870,%rsi   ;   {metadata(method data for {method} {0x00000000194c3008} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002d8d264: mov    0xdc(%rsi),%edi
  0x0000000002d8d26a: add    $0x8,%edi
  0x0000000002d8d26d: mov    %edi,0xdc(%rsi)
  0x0000000002d8d273: movabs $0x194c3000,%rsi   ;   {metadata({method} {0x00000000194c3008} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002d8d27d: and    $0x1ff8,%edi
  0x0000000002d8d283: cmp    $0x0,%edi
  0x0000000002d8d286: je     0x0000000002d8d4c9  ;*aload_0
                                                ; - java.io.BufferedInputStream::read@0 (line 264)

  0x0000000002d8d28c: mov    0x14(%rdx),%esi    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@1 (line 264)

  0x0000000002d8d28f: mov    0x10(%rdx),%edi    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@5 (line 264)

  0x0000000002d8d292: cmp    %edi,%esi
  0x0000000002d8d294: movabs $0x19654870,%rsi   ;   {metadata(method data for {method} {0x00000000194c3008} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002d8d29e: movabs $0x108,%rdi
  0x0000000002d8d2a8: jl     0x0000000002d8d2b8
  0x0000000002d8d2ae: movabs $0x118,%rdi
  0x0000000002d8d2b8: mov    (%rsi,%rdi,1),%rbx
  0x0000000002d8d2bc: lea    0x1(%rbx),%rbx
  0x0000000002d8d2c0: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002d8d2c4: jl     0x0000000002d8d331  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@8 (line 264)

  0x0000000002d8d2ca: mov    %rdx,%rsi
  0x0000000002d8d2cd: movabs $0x19654870,%rdi   ;   {metadata(method data for {method} {0x00000000194c3008} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002d8d2d7: addq   $0x1,0x128(%rdi)
  0x0000000002d8d2df: mov    %rdx,%rsi
  0x0000000002d8d2e2: mov    %rsi,%rdx          ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)

  0x0000000002d8d2e5: nop
  0x0000000002d8d2e6: nop
  0x0000000002d8d2e7: callq  0x0000000002cb61a0  ; OopMap{[80]=Oop [104]=Oop off=396}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)
                                                ;   {optimized virtual_call}
  0x0000000002d8d2ec: mov    0x50(%rsp),%rdx
  0x0000000002d8d2f1: mov    0x14(%rdx),%eax    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@16 (line 266)

  0x0000000002d8d2f4: mov    0x10(%rdx),%r8d    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@20 (line 266)

  0x0000000002d8d2f8: cmp    %r8d,%eax
  0x0000000002d8d2fb: movabs $0x19654870,%rax   ;   {metadata(method data for {method} {0x00000000194c3008} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002d8d305: movabs $0x138,%r8
  0x0000000002d8d30f: jl     0x0000000002d8d31f
  0x0000000002d8d315: movabs $0x148,%r8
  0x0000000002d8d31f: mov    (%rax,%r8,1),%rsi
  0x0000000002d8d323: lea    0x1(%rsi),%rsi
  0x0000000002d8d327: mov    %rsi,(%rax,%r8,1)
  0x0000000002d8d32b: jge    0x0000000002d8d425  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@23 (line 266)

  0x0000000002d8d331: mov    %rdx,%rax
  0x0000000002d8d334: movabs $0x19654870,%r8    ;   {metadata(method data for {method} {0x00000000194c3008} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002d8d33e: addq   $0x1,0x158(%r8)
  0x0000000002d8d346: movabs $0x19653038,%rax   ;   {metadata(method data for {method} {0x00000000194c2c58} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002d8d350: mov    0xdc(%rax),%r8d
  0x0000000002d8d357: add    $0x8,%r8d
  0x0000000002d8d35b: mov    %r8d,0xdc(%rax)
  0x0000000002d8d362: movabs $0x194c2c50,%rax   ;   {metadata({method} {0x00000000194c2c58} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002d8d36c: and    $0x7ffff8,%r8d
  0x0000000002d8d373: cmp    $0x0,%r8d
  0x0000000002d8d377: je     0x0000000002d8d4e0
  0x0000000002d8d37d: mov    0x20(%rdx),%eax
  0x0000000002d8d380: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x0000000002d8d384: cmp    $0x0,%rax
  0x0000000002d8d388: movabs $0x19653038,%r8    ;   {metadata(method data for {method} {0x00000000194c2c58} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002d8d392: movabs $0x108,%rsi
  0x0000000002d8d39c: jne    0x0000000002d8d3ac
  0x0000000002d8d3a2: movabs $0x118,%rsi
  0x0000000002d8d3ac: mov    (%r8,%rsi,1),%rdi
  0x0000000002d8d3b0: lea    0x1(%rdi),%rdi
  0x0000000002d8d3b4: mov    %rdi,(%r8,%rsi,1)
  0x0000000002d8d3b8: je     0x0000000002d8d46a  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x0000000002d8d3be: mov    0x14(%rdx),%r8d    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@34 (line 269)

  0x0000000002d8d3c2: mov    %r8,%rsi
  0x0000000002d8d3c5: inc    %esi
  0x0000000002d8d3c7: mov    %esi,0x14(%rdx)    ;*putfield pos
                                                ; - java.io.BufferedInputStream::read@40 (line 269)

  0x0000000002d8d3ca: movslq %r8d,%rdx
  0x0000000002d8d3cd: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x0000000002d8d4f7
  0x0000000002d8d3d1: jae    0x0000000002d8d501
  0x0000000002d8d3d7: movsbl 0x10(%rax,%rdx,1),%edx  ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)

  0x0000000002d8d3dc: lea    0x60(%rsp),%rax
  0x0000000002d8d3e1: mov    0x8(%rax),%rsi
  0x0000000002d8d3e5: mov    (%rsi),%r8
  0x0000000002d8d3e8: and    $0x7,%r8
  0x0000000002d8d3ec: cmp    $0x5,%r8
  0x0000000002d8d3f0: je     0x0000000002d8d40d
  0x0000000002d8d3f6: mov    (%rax),%r8
  0x0000000002d8d3f9: test   %r8,%r8
  0x0000000002d8d3fc: je     0x0000000002d8d40d
  0x0000000002d8d402: lock cmpxchg %r8,(%rsi)
  0x0000000002d8d407: jne    0x0000000002d8d50a
  0x0000000002d8d40d: and    $0xff,%edx
  0x0000000002d8d413: mov    %rdx,%rax
  0x0000000002d8d416: add    $0x80,%rsp
  0x0000000002d8d41d: pop    %rbp
  0x0000000002d8d41e: test   %eax,-0x3fd324(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d8d424: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)

  0x0000000002d8d425: lea    0x60(%rsp),%rax
  0x0000000002d8d42a: mov    0x8(%rax),%r8
  0x0000000002d8d42e: mov    (%r8),%rdx
  0x0000000002d8d431: and    $0x7,%rdx
  0x0000000002d8d435: cmp    $0x5,%rdx
  0x0000000002d8d439: je     0x0000000002d8d456
  0x0000000002d8d43f: mov    (%rax),%rdx
  0x0000000002d8d442: test   %rdx,%rdx
  0x0000000002d8d445: je     0x0000000002d8d456
  0x0000000002d8d44b: lock cmpxchg %rdx,(%r8)
  0x0000000002d8d450: jne    0x0000000002d8d51d
  0x0000000002d8d456: mov    $0xffffffff,%eax
  0x0000000002d8d45b: add    $0x80,%rsp
  0x0000000002d8d462: pop    %rbp
  0x0000000002d8d463: test   %eax,-0x3fd369(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d8d469: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@27 (line 267)

  0x0000000002d8d46a: nopw   0x0(%rax,%rax,1)
  0x0000000002d8d470: jmpq   0x0000000002d8d53f  ;   {no_reloc}
  0x0000000002d8d475: add    %al,(%rax)
  0x0000000002d8d477: add    %al,(%rax)
  0x0000000002d8d479: add    %ch,%cl
  0x0000000002d8d47b: lret   $0x0
  0x0000000002d8d47e: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x0000000002d8d482: movabs $0x19653038,%rdx   ;   {metadata(method data for {method} {0x00000000194c2c58} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002d8d48c: addq   $0x1,0x128(%rdx)
  0x0000000002d8d494: movabs $0x780bd98e8,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x0000000002d8d49e: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x0000000002d8d4a1: mov    %rax,0x58(%rsp)
  0x0000000002d8d4a6: nop
  0x0000000002d8d4a7: callq  0x0000000002cb61a0  ; OopMap{[80]=Oop [88]=Oop [104]=Oop off=844}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {optimized virtual_call}
  0x0000000002d8d4ac: mov    0x58(%rsp),%rax
  0x0000000002d8d4b1: jmpq   0x0000000002d8d581
  0x0000000002d8d4b6: mov    %rdx,0x8(%rsp)
  0x0000000002d8d4bb: mov    %rsi,(%rsp)
  0x0000000002d8d4bf: callq  0x0000000002d6f760  ; OopMap{rdx=Oop [80]=Oop [104]=Oop off=868}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x0000000002d8d4c4: jmpq   0x0000000002d8d25a
  0x0000000002d8d4c9: mov    %rsi,0x8(%rsp)
  0x0000000002d8d4ce: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d8d4d6: callq  0x0000000002d710e0  ; OopMap{rdx=Oop [80]=Oop [104]=Oop off=891}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x0000000002d8d4db: jmpq   0x0000000002d8d28c
  0x0000000002d8d4e0: mov    %rax,0x8(%rsp)
  0x0000000002d8d4e5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d8d4ed: callq  0x0000000002d710e0  ; OopMap{rdx=Oop [80]=Oop [104]=Oop off=914}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x0000000002d8d4f2: jmpq   0x0000000002d8d37d
  0x0000000002d8d4f7: callq  0x0000000002cdff40  ; OopMap{rax=Oop [104]=Oop off=924}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x0000000002d8d4fc: callq  0x0000000002cdff40  ; OopMap{rax=Oop [104]=Oop off=929}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x0000000002d8d501: mov    %r8,(%rsp)
  0x0000000002d8d505: callq  0x0000000002ce0600  ; OopMap{rax=Oop [104]=Oop off=938}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x0000000002d8d50a: lea    0x60(%rsp),%rax
  0x0000000002d8d50f: mov    %rax,(%rsp)
  0x0000000002d8d513: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d8d518: jmpq   0x0000000002d8d40d
  0x0000000002d8d51d: lea    0x60(%rsp),%rax
  0x0000000002d8d522: mov    %rax,(%rsp)
  0x0000000002d8d526: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d8d52b: jmpq   0x0000000002d8d456
  0x0000000002d8d530: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d8d53a: mov    $0xa050f00,%eax
  0x0000000002d8d53f: callq  0x0000000002d72160  ; OopMap{[80]=Oop [104]=Oop off=996}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x0000000002d8d544: jmpq   0x0000000002d8d470
  0x0000000002d8d549: mov    %rdx,%rdx
  0x0000000002d8d54c: callq  0x0000000002cdfa20  ; OopMap{[80]=Oop [104]=Oop off=1009}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x0000000002d8d551: jmpq   0x0000000002d8d47f
  0x0000000002d8d556: nop
  0x0000000002d8d557: nop
  0x0000000002d8d558: mov    0x2a8(%r15),%rax
  0x0000000002d8d55f: movabs $0x0,%r10
  0x0000000002d8d569: mov    %r10,0x2a8(%r15)
  0x0000000002d8d570: movabs $0x0,%r10
  0x0000000002d8d57a: mov    %r10,0x2b0(%r15)
  0x0000000002d8d581: mov    %rax,%rbx
  0x0000000002d8d584: lea    0x60(%rsp),%rax
  0x0000000002d8d589: mov    0x8(%rax),%rsi
  0x0000000002d8d58d: mov    (%rsi),%rdi
  0x0000000002d8d590: and    $0x7,%rdi
  0x0000000002d8d594: cmp    $0x5,%rdi
  0x0000000002d8d598: je     0x0000000002d8d5b5
  0x0000000002d8d59e: mov    (%rax),%rdi
  0x0000000002d8d5a1: test   %rdi,%rdi
  0x0000000002d8d5a4: je     0x0000000002d8d5b5
  0x0000000002d8d5aa: lock cmpxchg %rdi,(%rsi)
  0x0000000002d8d5af: jne    0x0000000002d8d5c5
  0x0000000002d8d5b5: mov    %rbx,%rax
  0x0000000002d8d5b8: add    $0x80,%rsp
  0x0000000002d8d5bf: pop    %rbp
  0x0000000002d8d5c0: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d8d5c5: lea    0x60(%rsp),%rax
  0x0000000002d8d5ca: mov    %rax,(%rsp)
  0x0000000002d8d5ce: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d8d5d3: jmp    0x0000000002d8d5b5
  0x0000000002d8d5d5: hlt    
  0x0000000002d8d5d6: hlt    
  0x0000000002d8d5d7: hlt    
  0x0000000002d8d5d8: hlt    
  0x0000000002d8d5d9: hlt    
  0x0000000002d8d5da: hlt    
  0x0000000002d8d5db: hlt    
  0x0000000002d8d5dc: hlt    
  0x0000000002d8d5dd: hlt    
  0x0000000002d8d5de: hlt    
  0x0000000002d8d5df: hlt    
[Stub Code]
  0x0000000002d8d5e0: nop                       ;   {no_reloc}
  0x0000000002d8d5e1: nop
  0x0000000002d8d5e2: nop
  0x0000000002d8d5e3: nop
  0x0000000002d8d5e4: nop
  0x0000000002d8d5e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8d5ef: jmpq   0x0000000002d8d5ef  ;   {runtime_call}
  0x0000000002d8d5f4: nop
  0x0000000002d8d5f5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8d5ff: jmpq   0x0000000002d8d5ff  ;   {runtime_call}
[Exception Handler]
  0x0000000002d8d604: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d8d609: mov    %rsp,-0x28(%rsp)
  0x0000000002d8d60e: sub    $0x80,%rsp
  0x0000000002d8d615: mov    %rax,0x78(%rsp)
  0x0000000002d8d61a: mov    %rcx,0x70(%rsp)
  0x0000000002d8d61f: mov    %rdx,0x68(%rsp)
  0x0000000002d8d624: mov    %rbx,0x60(%rsp)
  0x0000000002d8d629: mov    %rbp,0x50(%rsp)
  0x0000000002d8d62e: mov    %rsi,0x48(%rsp)
  0x0000000002d8d633: mov    %rdi,0x40(%rsp)
  0x0000000002d8d638: mov    %r8,0x38(%rsp)
  0x0000000002d8d63d: mov    %r9,0x30(%rsp)
  0x0000000002d8d642: mov    %r10,0x28(%rsp)
  0x0000000002d8d647: mov    %r11,0x20(%rsp)
  0x0000000002d8d64c: mov    %r12,0x18(%rsp)
  0x0000000002d8d651: mov    %r13,0x10(%rsp)
  0x0000000002d8d656: mov    %r14,0x8(%rsp)
  0x0000000002d8d65b: mov    %r15,(%rsp)
  0x0000000002d8d65f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d8d669: movabs $0x2d8d609,%rdx    ;   {internal_word}
  0x0000000002d8d673: mov    %rsp,%r8
  0x0000000002d8d676: and    $0xfffffffffffffff0,%rsp
  0x0000000002d8d67a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d8d67f: hlt    
[Deopt Handler Code]
  0x0000000002d8d680: movabs $0x2d8d680,%r10    ;   {section_word}
  0x0000000002d8d68a: push   %r10
  0x0000000002d8d68c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d8d691: hlt    
  0x0000000002d8d692: hlt    
  0x0000000002d8d693: hlt    
  0x0000000002d8d694: hlt    
  0x0000000002d8d695: hlt    
  0x0000000002d8d696: hlt    
  0x0000000002d8d697: hlt    
<nmethod compile_id='32' compiler='C1' level='3' entry='0x0000000002d8d160' size='2448' address='0x0000000002d8cfd0' relocation_offset='288' insts_offset='400' stub_offset='1552' scopes_data_offset='1760' scopes_pcs_offset='1952' dependencies_offset='2416' nul_chk_table_offset='2424' method='java/io/BufferedInputStream read ()I' bytes='49' count='5199' iicount='5199' stamp='6.531'/>
Decoding compiled method 0x0000000002d8a0d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000019772d90} &apos;access$000&apos; &apos;(Lcom/zju/leetcode/multiThread/testThread;)Z&apos; in &apos;com/zju/leetcode/multiThread/testThread&apos;
  # parm0:    rdx:rdx   = &apos;com/zju/leetcode/multiThread/testThread&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d8a220: mov    %eax,-0x6000(%rsp)
  0x0000000002d8a227: push   %rbp
  0x0000000002d8a228: sub    $0x30,%rsp         ;*aload_0
                                                ; - com.zju.leetcode.multiThread.testThread::access$000@0 (line 5)

  0x0000000002d8a22c: movsbl 0xc(%rdx),%eax     ;*getfield a
                                                ; - com.zju.leetcode.multiThread.testThread::access$000@1 (line 5)
                                                ; implicit exception: dispatches to 0x0000000002d8a23f
  0x0000000002d8a230: and    $0x1,%eax
  0x0000000002d8a233: add    $0x30,%rsp
  0x0000000002d8a237: pop    %rbp
  0x0000000002d8a238: test   %eax,-0x3fa13e(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d8a23e: retq   
  0x0000000002d8a23f: callq  0x0000000002cdff40  ; OopMap{off=36}
                                                ;*getfield a
                                                ; - com.zju.leetcode.multiThread.testThread::access$000@1 (line 5)
                                                ;   {runtime_call}
  0x0000000002d8a244: nop
  0x0000000002d8a245: nop
  0x0000000002d8a246: mov    0x2a8(%r15),%rax
  0x0000000002d8a24d: movabs $0x0,%r10
  0x0000000002d8a257: mov    %r10,0x2a8(%r15)
  0x0000000002d8a25e: movabs $0x0,%r10
  0x0000000002d8a268: mov    %r10,0x2b0(%r15)
  0x0000000002d8a26f: add    $0x30,%rsp
  0x0000000002d8a273: pop    %rbp
  0x0000000002d8a274: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d8a279: hlt    
  0x0000000002d8a27a: hlt    
  0x0000000002d8a27b: hlt    
  0x0000000002d8a27c: hlt    
  0x0000000002d8a27d: hlt    
  0x0000000002d8a27e: hlt    
  0x0000000002d8a27f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d8a280: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d8a285: mov    %rsp,-0x28(%rsp)
  0x0000000002d8a28a: sub    $0x80,%rsp
  0x0000000002d8a291: mov    %rax,0x78(%rsp)
  0x0000000002d8a296: mov    %rcx,0x70(%rsp)
  0x0000000002d8a29b: mov    %rdx,0x68(%rsp)
  0x0000000002d8a2a0: mov    %rbx,0x60(%rsp)
  0x0000000002d8a2a5: mov    %rbp,0x50(%rsp)
  0x0000000002d8a2aa: mov    %rsi,0x48(%rsp)
  0x0000000002d8a2af: mov    %rdi,0x40(%rsp)
  0x0000000002d8a2b4: mov    %r8,0x38(%rsp)
  0x0000000002d8a2b9: mov    %r9,0x30(%rsp)
  0x0000000002d8a2be: mov    %r10,0x28(%rsp)
  0x0000000002d8a2c3: mov    %r11,0x20(%rsp)
  0x0000000002d8a2c8: mov    %r12,0x18(%rsp)
  0x0000000002d8a2cd: mov    %r13,0x10(%rsp)
  0x0000000002d8a2d2: mov    %r14,0x8(%rsp)
  0x0000000002d8a2d7: mov    %r15,(%rsp)
  0x0000000002d8a2db: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d8a2e5: movabs $0x2d8a285,%rdx    ;   {internal_word}
  0x0000000002d8a2ef: mov    %rsp,%r8
  0x0000000002d8a2f2: and    $0xfffffffffffffff0,%rsp
  0x0000000002d8a2f6: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d8a2fb: hlt    
[Deopt Handler Code]
  0x0000000002d8a2fc: movabs $0x2d8a2fc,%r10    ;   {section_word}
  0x0000000002d8a306: push   %r10
  0x0000000002d8a308: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d8a30d: hlt    
  0x0000000002d8a30e: hlt    
  0x0000000002d8a30f: hlt    
<nmethod compile_id='44' compiler='C1' level='1' entry='0x0000000002d8a220' size='720' address='0x0000000002d8a0d0' relocation_offset='288' insts_offset='336' stub_offset='432' scopes_data_offset='592' scopes_pcs_offset='616' dependencies_offset='696' nul_chk_table_offset='704' oops_offset='576' method='com/zju/leetcode/multiThread/testThread access$000 (Lcom/zju/leetcode/multiThread/testThread;)Z' bytes='5' count='84992' iicount='84992' stamp='6.538'/>
Decoding compiled method 0x0000000002d8bd50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000193e5558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x0000000002d8bf20: mov    0x8(%rdx),%r10d
  0x0000000002d8bf24: shl    $0x3,%r10
  0x0000000002d8bf28: cmp    %rax,%r10
  0x0000000002d8bf2b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d8bf31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d8bf3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d8bf40: mov    %eax,-0x6000(%rsp)
  0x0000000002d8bf47: push   %rbp
  0x0000000002d8bf48: sub    $0xe0,%rsp
  0x0000000002d8bf4f: mov    %rdx,0xb8(%rsp)
  0x0000000002d8bf57: movabs $0x1959e6c8,%rsi   ;   {metadata(method data for {method} {0x00000000193e5558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8bf61: mov    0xdc(%rsi),%edi
  0x0000000002d8bf67: add    $0x8,%edi
  0x0000000002d8bf6a: mov    %edi,0xdc(%rsi)
  0x0000000002d8bf70: movabs $0x193e5550,%rsi   ;   {metadata({method} {0x00000000193e5558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8bf7a: and    $0x1ff8,%edi
  0x0000000002d8bf80: cmp    $0x0,%edi
  0x0000000002d8bf83: je     0x0000000002d8c4c3  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x0000000002d8bf89: cmp    $0x0,%r8
  0x0000000002d8bf8d: movabs $0x1959e6c8,%rsi   ;   {metadata(method data for {method} {0x00000000193e5558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8bf97: movabs $0x108,%rdi
  0x0000000002d8bfa1: jne    0x0000000002d8bfb1
  0x0000000002d8bfa7: movabs $0x118,%rdi
  0x0000000002d8bfb1: mov    (%rsi,%rdi,1),%rbx
  0x0000000002d8bfb5: lea    0x1(%rbx),%rbx
  0x0000000002d8bfb9: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002d8bfbd: je     0x0000000002d8c493  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x0000000002d8bfc3: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x0000000002d8c4da
  0x0000000002d8bfc6: mov    %r8,%rsi
  0x0000000002d8bfc9: movabs $0x1959e6c8,%rdi   ;   {metadata(method data for {method} {0x00000000193e5558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8bfd3: mov    0x8(%rsi),%esi
  0x0000000002d8bfd6: shl    $0x3,%rsi
  0x0000000002d8bfda: cmp    0x140(%rdi),%rsi
  0x0000000002d8bfe1: jne    0x0000000002d8bff0
  0x0000000002d8bfe3: addq   $0x1,0x148(%rdi)
  0x0000000002d8bfeb: jmpq   0x0000000002d8c056
  0x0000000002d8bff0: cmp    0x150(%rdi),%rsi
  0x0000000002d8bff7: jne    0x0000000002d8c006
  0x0000000002d8bff9: addq   $0x1,0x158(%rdi)
  0x0000000002d8c001: jmpq   0x0000000002d8c056
  0x0000000002d8c006: cmpq   $0x0,0x140(%rdi)
  0x0000000002d8c011: jne    0x0000000002d8c02a
  0x0000000002d8c013: mov    %rsi,0x140(%rdi)
  0x0000000002d8c01a: movq   $0x1,0x148(%rdi)
  0x0000000002d8c025: jmpq   0x0000000002d8c056
  0x0000000002d8c02a: cmpq   $0x0,0x150(%rdi)
  0x0000000002d8c035: jne    0x0000000002d8c04e
  0x0000000002d8c037: mov    %rsi,0x150(%rdi)
  0x0000000002d8c03e: movq   $0x1,0x158(%rdi)
  0x0000000002d8c049: jmpq   0x0000000002d8c056
  0x0000000002d8c04e: addq   $0x1,0x138(%rdi)
  0x0000000002d8c056: movabs $0x194a3a98,%rsi   ;   {metadata(method data for {method} {0x0000000019373c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d8c060: mov    0xdc(%rsi),%edi
  0x0000000002d8c066: add    $0x8,%edi
  0x0000000002d8c069: mov    %edi,0xdc(%rsi)
  0x0000000002d8c06f: movabs $0x19373c18,%rsi   ;   {metadata({method} {0x0000000019373c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d8c079: and    $0x7ffff8,%edi
  0x0000000002d8c07f: cmp    $0x0,%edi
  0x0000000002d8c082: je     0x0000000002d8c4df
  0x0000000002d8c088: mov    0xc(%r8),%esi
  0x0000000002d8c08c: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x0000000002d8c090: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x0000000002d8c4f6
  0x0000000002d8c093: mov    %esi,0xac(%rsp)
  0x0000000002d8c09a: mov    0xc(%rdx),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x0000000002d8c09d: add    %esi,%edi
  0x0000000002d8c09f: mov    %rdx,%rbx
  0x0000000002d8c0a2: movabs $0x1959e6c8,%rax   ;   {metadata(method data for {method} {0x00000000193e5558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8c0ac: addq   $0x1,0x168(%rax)
  0x0000000002d8c0b4: movabs $0x195763e8,%rbx   ;   {metadata(method data for {method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8c0be: mov    0xdc(%rbx),%eax
  0x0000000002d8c0c4: add    $0x8,%eax
  0x0000000002d8c0c7: mov    %eax,0xdc(%rbx)
  0x0000000002d8c0cd: movabs $0x193e4bf8,%rbx   ;   {metadata({method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8c0d7: and    $0x7ffff8,%eax
  0x0000000002d8c0dd: cmp    $0x0,%eax
  0x0000000002d8c0e0: je     0x0000000002d8c4fb
  0x0000000002d8c0e6: mov    0x10(%rdx),%ebx
  0x0000000002d8c0e9: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002d8c0ed: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x0000000002d8c512
  0x0000000002d8c0f0: mov    %rdi,%rcx
  0x0000000002d8c0f3: sub    %eax,%ecx
  0x0000000002d8c0f5: cmp    $0x0,%ecx
  0x0000000002d8c0f8: movabs $0x195763e8,%rcx   ;   {metadata(method data for {method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8c102: movabs $0x108,%r9
  0x0000000002d8c10c: jle    0x0000000002d8c11c
  0x0000000002d8c112: movabs $0x118,%r9
  0x0000000002d8c11c: mov    (%rcx,%r9,1),%r11
  0x0000000002d8c120: lea    0x1(%r11),%r11
  0x0000000002d8c124: mov    %r11,(%rcx,%r9,1)
  0x0000000002d8c128: jg     0x0000000002d8c13b  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002d8c12e: mov    %r8,0xc0(%rsp)
  0x0000000002d8c136: jmpq   0x0000000002d8c3ad  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002d8c13b: mov    %eax,0xa8(%rsp)
  0x0000000002d8c142: mov    %rbx,0xb0(%rsp)
  0x0000000002d8c14a: mov    %r8,0xc0(%rsp)
  0x0000000002d8c152: mov    %rdx,%rcx
  0x0000000002d8c155: movabs $0x195763e8,%r9    ;   {metadata(method data for {method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8c15f: addq   $0x1,0x128(%r9)
  0x0000000002d8c167: mov    %rdi,%r8
  0x0000000002d8c16a: mov    %rdx,%rdi
  0x0000000002d8c16d: mov    %rdi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002d8c170: nop
  0x0000000002d8c171: nop
  0x0000000002d8c172: nop
  0x0000000002d8c173: nop
  0x0000000002d8c174: nop
  0x0000000002d8c175: nop
  0x0000000002d8c176: nop
  0x0000000002d8c177: callq  0x0000000002cb61a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x0000000002d8c17c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002d8c17f: movabs $0x195763e8,%rbx   ;   {metadata(method data for {method} {0x00000000193e4c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8c189: addq   $0x1,0x138(%rbx)
  0x0000000002d8c191: movabs $0x195f2d88,%rbx   ;   {metadata(method data for {method} {0x0000000019489c28} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d8c19b: mov    0xdc(%rbx),%edx
  0x0000000002d8c1a1: add    $0x8,%edx
  0x0000000002d8c1a4: mov    %edx,0xdc(%rbx)
  0x0000000002d8c1aa: movabs $0x19489c20,%rbx   ;   {metadata({method} {0x0000000019489c28} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d8c1b4: and    $0x7ffff8,%edx
  0x0000000002d8c1ba: cmp    $0x0,%edx
  0x0000000002d8c1bd: je     0x0000000002d8c517
  0x0000000002d8c1c3: mov    %r8,%rbx
  0x0000000002d8c1c6: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002d8c1d0: movslq %ebx,%rbx
  0x0000000002d8c1d3: mov    %rbx,%rdi
  0x0000000002d8c1d6: cmp    $0xffffff,%rbx
  0x0000000002d8c1dd: ja     0x0000000002d8c52e
  0x0000000002d8c1e3: movabs $0x17,%rsi
  0x0000000002d8c1ed: lea    (%rsi,%rbx,2),%rsi
  0x0000000002d8c1f1: and    $0xfffffffffffffff8,%rsi
  0x0000000002d8c1f5: mov    0x60(%r15),%rax
  0x0000000002d8c1f9: lea    (%rax,%rsi,1),%rsi
  0x0000000002d8c1fd: cmp    0x70(%r15),%rsi
  0x0000000002d8c201: ja     0x0000000002d8c52e
  0x0000000002d8c207: mov    %rsi,0x60(%r15)
  0x0000000002d8c20b: sub    %rax,%rsi
  0x0000000002d8c20e: movq   $0x1,(%rax)
  0x0000000002d8c215: mov    %rdx,%rcx
  0x0000000002d8c218: shr    $0x3,%rcx
  0x0000000002d8c21c: mov    %ecx,0x8(%rax)
  0x0000000002d8c21f: mov    %ebx,0xc(%rax)
  0x0000000002d8c222: sub    $0x10,%rsi
  0x0000000002d8c226: je     0x0000000002d8c23d
  0x0000000002d8c22c: xor    %rbx,%rbx
  0x0000000002d8c22f: shr    $0x3,%rsi
  0x0000000002d8c233: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002d8c238: dec    %rsi
  0x0000000002d8c23b: jne    0x0000000002d8c233  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002d8c23d: movabs $0x195f2d88,%rdx   ;   {metadata(method data for {method} {0x0000000019489c28} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d8c247: addq   $0x1,0x108(%rdx)
  0x0000000002d8c24f: movabs $0x195628e0,%rdx   ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d8c259: mov    0xdc(%rdx),%r9d
  0x0000000002d8c260: add    $0x8,%r9d
  0x0000000002d8c264: mov    %r9d,0xdc(%rdx)
  0x0000000002d8c26b: movabs $0x194656c8,%rdx   ;   {metadata({method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d8c275: and    $0x7ffff8,%r9d
  0x0000000002d8c27c: cmp    $0x0,%r9d
  0x0000000002d8c280: je     0x0000000002d8c538
  0x0000000002d8c286: mov    0xa8(%rsp),%edx
  0x0000000002d8c28d: cmp    %r8d,%edx
  0x0000000002d8c290: movabs $0x195628e0,%r9    ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d8c29a: movabs $0x108,%rdi
  0x0000000002d8c2a4: jg     0x0000000002d8c2b4
  0x0000000002d8c2aa: movabs $0x118,%rdi
  0x0000000002d8c2b4: mov    (%r9,%rdi,1),%rsi
  0x0000000002d8c2b8: lea    0x1(%rsi),%rsi
  0x0000000002d8c2bc: mov    %rsi,(%r9,%rdi,1)
  0x0000000002d8c2c0: jg     0x0000000002d8c2df  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002d8c2c6: movabs $0x195628e0,%r8    ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d8c2d0: incl   0x128(%r8)
  0x0000000002d8c2d7: mov    %rdx,%rsi
  0x0000000002d8c2da: jmpq   0x0000000002d8c2e2  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002d8c2df: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002d8c2e2: mov    0xb0(%rsp),%rbx
  0x0000000002d8c2ea: movabs $0x195f2d88,%rdx   ;   {metadata(method data for {method} {0x0000000019489c28} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002d8c2f4: addq   $0x1,0x118(%rdx)
  0x0000000002d8c2fc: mov    %rbx,%rdx
  0x0000000002d8c2ff: mov    $0x0,%r8d
  0x0000000002d8c305: mov    %rax,%r9
  0x0000000002d8c308: mov    $0x0,%edi
  0x0000000002d8c30d: mov    %rax,0xc8(%rsp)
  0x0000000002d8c315: lea    (%r8,%rsi,1),%rcx
  0x0000000002d8c319: cmp    0xc(%rdx),%ecx
  0x0000000002d8c31c: ja     0x0000000002d8c54f
  0x0000000002d8c322: lea    (%rdi,%rsi,1),%rcx
  0x0000000002d8c326: cmp    0xc(%r9),%ecx
  0x0000000002d8c32a: ja     0x0000000002d8c54f
  0x0000000002d8c330: test   %esi,%esi
  0x0000000002d8c332: jl     0x0000000002d8c54f
  0x0000000002d8c338: je     0x0000000002d8c37c
  0x0000000002d8c33e: movslq %r8d,%r8
  0x0000000002d8c341: movslq %edi,%rdi
  0x0000000002d8c344: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002d8c349: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002d8c34e: mov    %rsi,%r8
  0x0000000002d8c351: sub    $0x20,%rsp
  0x0000000002d8c355: test   $0xf,%esp
  0x0000000002d8c35b: je     0x0000000002d8c373
  0x0000000002d8c361: sub    $0x8,%rsp
  0x0000000002d8c365: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002d8c36a: add    $0x8,%rsp
  0x0000000002d8c36e: jmpq   0x0000000002d8c378
  0x0000000002d8c373: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002d8c378: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002d8c37c: mov    0xc8(%rsp),%rax
  0x0000000002d8c384: mov    0xb8(%rsp),%rdx
  0x0000000002d8c38c: mov    %rax,%r10
  0x0000000002d8c38f: shr    $0x3,%r10
  0x0000000002d8c393: mov    %r10d,0x10(%rdx)
  0x0000000002d8c397: mov    %rdx,%r8
  0x0000000002d8c39a: shr    $0x9,%r8
  0x0000000002d8c39e: movabs $0xe824000,%r9
  0x0000000002d8c3a8: movb   $0x0,(%r8,%r9,1)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002d8c3ad: mov    0xac(%rsp),%esi
  0x0000000002d8c3b4: mov    0xc0(%rsp),%rbx
  0x0000000002d8c3bc: mov    0x10(%rdx),%edi
  0x0000000002d8c3bf: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x0000000002d8c3c3: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x0000000002d8c3c6: mov    %rbx,%r8
  0x0000000002d8c3c9: movabs $0x1959e6c8,%r9    ;   {metadata(method data for {method} {0x00000000193e5558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8c3d3: mov    0x8(%r8),%r8d
  0x0000000002d8c3d7: shl    $0x3,%r8
  0x0000000002d8c3db: cmp    0x180(%r9),%r8
  0x0000000002d8c3e2: jne    0x0000000002d8c3f1
  0x0000000002d8c3e4: addq   $0x1,0x188(%r9)
  0x0000000002d8c3ec: jmpq   0x0000000002d8c457
  0x0000000002d8c3f1: cmp    0x190(%r9),%r8
  0x0000000002d8c3f8: jne    0x0000000002d8c407
  0x0000000002d8c3fa: addq   $0x1,0x198(%r9)
  0x0000000002d8c402: jmpq   0x0000000002d8c457
  0x0000000002d8c407: cmpq   $0x0,0x180(%r9)
  0x0000000002d8c412: jne    0x0000000002d8c42b
  0x0000000002d8c414: mov    %r8,0x180(%r9)
  0x0000000002d8c41b: movq   $0x1,0x188(%r9)
  0x0000000002d8c426: jmpq   0x0000000002d8c457
  0x0000000002d8c42b: cmpq   $0x0,0x190(%r9)
  0x0000000002d8c436: jne    0x0000000002d8c44f
  0x0000000002d8c438: mov    %r8,0x190(%r9)
  0x0000000002d8c43f: movq   $0x1,0x198(%r9)
  0x0000000002d8c44a: jmpq   0x0000000002d8c457
  0x0000000002d8c44f: addq   $0x1,0x178(%r9)
  0x0000000002d8c457: mov    $0x0,%r8d
  0x0000000002d8c45d: mov    %rsi,%r9
  0x0000000002d8c460: mov    %rax,%rsi
  0x0000000002d8c463: mov    %rbx,%rdx          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x0000000002d8c466: nop
  0x0000000002d8c467: callq  0x0000000002cb61a0  ; OopMap{[184]=Oop off=1356}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x0000000002d8c46c: mov    0xb8(%rsp),%rdx
  0x0000000002d8c474: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x0000000002d8c477: add    0xac(%rsp),%eax
  0x0000000002d8c47e: mov    %eax,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x0000000002d8c481: mov    %rdx,%rax
  0x0000000002d8c484: add    $0xe0,%rsp
  0x0000000002d8c48b: pop    %rbp
  0x0000000002d8c48c: test   %eax,-0x3fc392(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d8c492: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x0000000002d8c493: mov    %rdx,%rsi
  0x0000000002d8c496: movabs $0x1959e6c8,%rdi   ;   {metadata(method data for {method} {0x00000000193e5558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d8c4a0: addq   $0x1,0x128(%rdi)
  0x0000000002d8c4a8: nop
  0x0000000002d8c4a9: nop
  0x0000000002d8c4aa: nop
  0x0000000002d8c4ab: nop
  0x0000000002d8c4ac: nop
  0x0000000002d8c4ad: nop
  0x0000000002d8c4ae: nop
  0x0000000002d8c4af: callq  0x0000000002cb61a0  ; OopMap{off=1428}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x0000000002d8c4b4: add    $0xe0,%rsp
  0x0000000002d8c4bb: pop    %rbp
  0x0000000002d8c4bc: test   %eax,-0x3fc3c2(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d8c4c2: retq   
  0x0000000002d8c4c3: mov    %rsi,0x8(%rsp)
  0x0000000002d8c4c8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d8c4d0: callq  0x0000000002d710e0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1461}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x0000000002d8c4d5: jmpq   0x0000000002d8bf89
  0x0000000002d8c4da: callq  0x0000000002cdff40  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1471}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000002d8c4df: mov    %rsi,0x8(%rsp)
  0x0000000002d8c4e4: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d8c4ec: callq  0x0000000002d710e0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1489}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000002d8c4f1: jmpq   0x0000000002d8c088
  0x0000000002d8c4f6: callq  0x0000000002cdff40  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1499}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000002d8c4fb: mov    %rbx,0x8(%rsp)
  0x0000000002d8c500: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d8c508: callq  0x0000000002d710e0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1517}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002d8c50d: jmpq   0x0000000002d8c0e6
  0x0000000002d8c512: callq  0x0000000002cdff40  ; OopMap{rdx=Oop [184]=Oop r8=Oop rbx=Oop off=1527}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002d8c517: mov    %rbx,0x8(%rsp)
  0x0000000002d8c51c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d8c524: callq  0x0000000002d710e0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1545}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002d8c529: jmpq   0x0000000002d8c1c3
  0x0000000002d8c52e: callq  0x0000000002d6e600  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1555}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002d8c533: jmpq   0x0000000002d8c23d
  0x0000000002d8c538: mov    %rdx,0x8(%rsp)
  0x0000000002d8c53d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d8c545: callq  0x0000000002d710e0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1578}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002d8c54a: jmpq   0x0000000002d8c286
  0x0000000002d8c54f: callq  0x0000000002cb6620  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1588}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x0000000002d8c554: jmpq   0x0000000002d8c37c
  0x0000000002d8c559: nop
  0x0000000002d8c55a: nop
  0x0000000002d8c55b: mov    0x2a8(%r15),%rax
  0x0000000002d8c562: movabs $0x0,%r10
  0x0000000002d8c56c: mov    %r10,0x2a8(%r15)
  0x0000000002d8c573: movabs $0x0,%r10
  0x0000000002d8c57d: mov    %r10,0x2b0(%r15)
  0x0000000002d8c584: add    $0xe0,%rsp
  0x0000000002d8c58b: pop    %rbp
  0x0000000002d8c58c: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d8c591: hlt    
  0x0000000002d8c592: hlt    
  0x0000000002d8c593: hlt    
  0x0000000002d8c594: hlt    
  0x0000000002d8c595: hlt    
  0x0000000002d8c596: hlt    
  0x0000000002d8c597: hlt    
  0x0000000002d8c598: hlt    
  0x0000000002d8c599: hlt    
  0x0000000002d8c59a: hlt    
  0x0000000002d8c59b: hlt    
  0x0000000002d8c59c: hlt    
  0x0000000002d8c59d: hlt    
  0x0000000002d8c59e: hlt    
  0x0000000002d8c59f: hlt    
[Stub Code]
  0x0000000002d8c5a0: nop                       ;   {no_reloc}
  0x0000000002d8c5a1: nop
  0x0000000002d8c5a2: nop
  0x0000000002d8c5a3: nop
  0x0000000002d8c5a4: nop
  0x0000000002d8c5a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8c5af: jmpq   0x0000000002d8c5af  ;   {runtime_call}
  0x0000000002d8c5b4: nop
  0x0000000002d8c5b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8c5bf: jmpq   0x0000000002d8c5bf  ;   {runtime_call}
  0x0000000002d8c5c4: nop
  0x0000000002d8c5c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8c5cf: jmpq   0x0000000002d8c5cf  ;   {runtime_call}
  0x0000000002d8c5d4: nop
  0x0000000002d8c5d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8c5df: jmpq   0x0000000002d8c5df  ;   {runtime_call}
[Exception Handler]
  0x0000000002d8c5e4: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d8c5e9: mov    %rsp,-0x28(%rsp)
  0x0000000002d8c5ee: sub    $0x80,%rsp
  0x0000000002d8c5f5: mov    %rax,0x78(%rsp)
  0x0000000002d8c5fa: mov    %rcx,0x70(%rsp)
  0x0000000002d8c5ff: mov    %rdx,0x68(%rsp)
  0x0000000002d8c604: mov    %rbx,0x60(%rsp)
  0x0000000002d8c609: mov    %rbp,0x50(%rsp)
  0x0000000002d8c60e: mov    %rsi,0x48(%rsp)
  0x0000000002d8c613: mov    %rdi,0x40(%rsp)
  0x0000000002d8c618: mov    %r8,0x38(%rsp)
  0x0000000002d8c61d: mov    %r9,0x30(%rsp)
  0x0000000002d8c622: mov    %r10,0x28(%rsp)
  0x0000000002d8c627: mov    %r11,0x20(%rsp)
  0x0000000002d8c62c: mov    %r12,0x18(%rsp)
  0x0000000002d8c631: mov    %r13,0x10(%rsp)
  0x0000000002d8c636: mov    %r14,0x8(%rsp)
  0x0000000002d8c63b: mov    %r15,(%rsp)
  0x0000000002d8c63f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d8c649: movabs $0x2d8c5e9,%rdx    ;   {internal_word}
  0x0000000002d8c653: mov    %rsp,%r8
  0x0000000002d8c656: and    $0xfffffffffffffff0,%rsp
  0x0000000002d8c65a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d8c65f: hlt    
[Deopt Handler Code]
  0x0000000002d8c660: movabs $0x2d8c660,%r10    ;   {section_word}
  0x0000000002d8c66a: push   %r10
  0x0000000002d8c66c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d8c671: hlt    
  0x0000000002d8c672: hlt    
  0x0000000002d8c673: hlt    
  0x0000000002d8c674: hlt    
  0x0000000002d8c675: hlt    
  0x0000000002d8c676: hlt    
  0x0000000002d8c677: hlt    
<nmethod compile_id='41' compiler='C1' level='3' entry='0x0000000002d8bf20' size='3456' address='0x0000000002d8bd50' relocation_offset='288' insts_offset='464' stub_offset='2128' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3416' nul_chk_table_offset='3424' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='775' iicount='775' stamp='6.563'/>
<writer thread='27984'/>
<task_queued compile_id='45' compile_kind='osr' method='com/zju/leetcode/multiThread/testThread$1 run ()V' bytes='26' count='1' backedge_count='84992' iicount='1' osr_bci='2' level='3' stamp='6.564' comment='tiered' hot_count='84992'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d8b5d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;
  0x0000000002d8b760: mov    0x8(%rdx),%r10d
  0x0000000002d8b764: shl    $0x3,%r10
  0x0000000002d8b768: cmp    %rax,%r10
  0x0000000002d8b76b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d8b771: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d8b77c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d8b780: mov    %eax,-0x6000(%rsp)
  0x0000000002d8b787: push   %rbp
  0x0000000002d8b788: sub    $0x60,%rsp
  0x0000000002d8b78c: movabs $0x19773500,%rcx   ;   {metadata(method data for {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d8b796: mov    0xdc(%rcx),%esi
  0x0000000002d8b79c: add    $0x8,%esi
  0x0000000002d8b79f: mov    %esi,0xdc(%rcx)
  0x0000000002d8b7a5: movabs $0x19773368,%rcx   ;   {metadata({method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d8b7af: and    $0x1ff8,%esi
  0x0000000002d8b7b5: cmp    $0x0,%esi
  0x0000000002d8b7b8: je     0x0000000002d8b97f  ;*iconst_0
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@0 (line 12)

  0x0000000002d8b7be: mov    $0x0,%esi
  0x0000000002d8b7c3: jmpq   0x0000000002d8b815  ;*aload_0
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@2 (line 13)

  0x0000000002d8b7c8: inc    %esi
  0x0000000002d8b7ca: movabs $0x19773500,%r8    ;   {metadata(method data for {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d8b7d4: mov    0xe0(%r8),%edi
  0x0000000002d8b7db: add    $0x8,%edi
  0x0000000002d8b7de: mov    %edi,0xe0(%r8)
  0x0000000002d8b7e5: movabs $0x19773368,%r8    ;   {metadata({method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d8b7ef: and    $0xfff8,%edi
  0x0000000002d8b7f5: cmp    $0x0,%edi
  0x0000000002d8b7f8: je     0x0000000002d8b996  ; OopMap{rdx=Oop off=158}
                                                ;*goto
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@15 (line 14)

  0x0000000002d8b7fe: test   %eax,-0x3fb704(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d8b804: movabs $0x19773500,%r8    ;   {metadata(method data for {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d8b80e: incl   0x138(%r8)         ;*goto
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@15 (line 14)

  0x0000000002d8b815: mov    0xc(%rdx),%r8d     ; implicit exception: dispatches to 0x0000000002d8b9ad
  0x0000000002d8b819: shl    $0x3,%r8           ;*getfield val$demo1
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@3 (line 13)

  0x0000000002d8b81d: movabs $0x19773500,%rdi   ;   {metadata(method data for {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d8b827: addq   $0x1,0x108(%rdi)
  0x0000000002d8b82f: movsbl 0xc(%r8),%r8d      ;*getfield a
                                                ; - com.zju.leetcode.multiThread.testThread::access$000@1 (line 5)
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@6 (line 13)
                                                ; implicit exception: dispatches to 0x0000000002d8b9b2
  0x0000000002d8b834: and    $0x1,%r8d
  0x0000000002d8b838: cmp    $0x0,%r8d
  0x0000000002d8b83c: movabs $0x19773500,%r8    ;   {metadata(method data for {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d8b846: movabs $0x118,%rdi
  0x0000000002d8b850: je     0x0000000002d8b860
  0x0000000002d8b856: movabs $0x128,%rdi
  0x0000000002d8b860: mov    (%r8,%rdi,1),%rbx
  0x0000000002d8b864: lea    0x1(%rbx),%rbx
  0x0000000002d8b868: mov    %rbx,(%r8,%rdi,1)
  0x0000000002d8b86c: jne    0x0000000002d8b7c8  ;*ifeq
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@9 (line 13)

  0x0000000002d8b872: nopw   0x0(%rax,%rax,1)
  0x0000000002d8b878: jmpq   0x0000000002d8ba14  ;   {no_reloc}
  0x0000000002d8b87d: add    %al,(%rax)
  0x0000000002d8b87f: add    %al,(%rax)
  0x0000000002d8b881: add    %ah,0xf(%rsi)
  0x0000000002d8b884: (bad)  
  0x0000000002d8b885: add    %r8b,(%rax)
  0x0000000002d8b888: jmpq   0x0000000002d8ba2f  ; implicit exception: dispatches to 0x0000000002d8ba1e
  0x0000000002d8b88d: nop
  0x0000000002d8b88e: nop
  0x0000000002d8b88f: shl    $0x3,%rdx          ;*getstatic out
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@18 (line 16)

  0x0000000002d8b893: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000000002d8ba39
  0x0000000002d8b896: mov    %rdx,%r8
  0x0000000002d8b899: movabs $0x19773500,%rdi   ;   {metadata(method data for {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d8b8a3: mov    0x8(%r8),%r8d
  0x0000000002d8b8a7: shl    $0x3,%r8
  0x0000000002d8b8ab: cmp    0x158(%rdi),%r8
  0x0000000002d8b8b2: jne    0x0000000002d8b8c1
  0x0000000002d8b8b4: addq   $0x1,0x160(%rdi)
  0x0000000002d8b8bc: jmpq   0x0000000002d8b927
  0x0000000002d8b8c1: cmp    0x168(%rdi),%r8
  0x0000000002d8b8c8: jne    0x0000000002d8b8d7
  0x0000000002d8b8ca: addq   $0x1,0x170(%rdi)
  0x0000000002d8b8d2: jmpq   0x0000000002d8b927
  0x0000000002d8b8d7: cmpq   $0x0,0x158(%rdi)
  0x0000000002d8b8e2: jne    0x0000000002d8b8fb
  0x0000000002d8b8e4: mov    %r8,0x158(%rdi)
  0x0000000002d8b8eb: movq   $0x1,0x160(%rdi)
  0x0000000002d8b8f6: jmpq   0x0000000002d8b927
  0x0000000002d8b8fb: cmpq   $0x0,0x168(%rdi)
  0x0000000002d8b906: jne    0x0000000002d8b91f
  0x0000000002d8b908: mov    %r8,0x168(%rdi)
  0x0000000002d8b90f: movq   $0x1,0x170(%rdi)
  0x0000000002d8b91a: jmpq   0x0000000002d8b927
  0x0000000002d8b91f: addq   $0x1,0x150(%rdi)
  0x0000000002d8b927: mov    %rsi,%r8           ;*invokevirtual println
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@22 (line 16)

  0x0000000002d8b92a: nop
  0x0000000002d8b92b: nop
  0x0000000002d8b92c: nop
  0x0000000002d8b92d: movabs $0xffffffffffffffff,%rax
  0x0000000002d8b937: callq  0x0000000002cb63e0  ; OopMap{off=476}
                                                ;*invokevirtual println
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@22 (line 16)
                                                ;   {virtual_call}
  0x0000000002d8b93c: add    $0x60,%rsp
  0x0000000002d8b940: pop    %rbp
  0x0000000002d8b941: test   %eax,-0x3fb847(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d8b947: retq                      ;*return
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@25 (line 17)

  0x0000000002d8b948: mov    %eax,-0x6000(%rsp)
  0x0000000002d8b94f: push   %rbp
  0x0000000002d8b950: sub    $0x60,%rsp
  0x0000000002d8b954: mov    0x8(%rdx),%rsi
  0x0000000002d8b958: mov    (%rdx),%edi
  0x0000000002d8b95a: mov    %rdx,%rcx
  0x0000000002d8b95d: mov    %rsi,0x48(%rsp)
  0x0000000002d8b962: mov    %edi,0x40(%rsp)
  0x0000000002d8b966: callq  0x000000005e0cd790  ;   {runtime_call}
  0x0000000002d8b96b: mov    0x40(%rsp),%edi
  0x0000000002d8b96f: mov    %rdi,%rsi
  0x0000000002d8b972: mov    0x48(%rsp),%r8
  0x0000000002d8b977: mov    %r8,%rdx
  0x0000000002d8b97a: jmpq   0x0000000002d8b815
  0x0000000002d8b97f: mov    %rcx,0x8(%rsp)
  0x0000000002d8b984: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d8b98c: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=561}
                                                ;*synchronization entry
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@-1 (line 12)
                                                ;   {runtime_call}
  0x0000000002d8b991: jmpq   0x0000000002d8b7be
  0x0000000002d8b996: mov    %r8,0x8(%rsp)
  0x0000000002d8b99b: movq   $0xf,(%rsp)
  0x0000000002d8b9a3: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=584}
                                                ;*goto
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@15 (line 14)
                                                ;   {runtime_call}
  0x0000000002d8b9a8: jmpq   0x0000000002d8b7fe
  0x0000000002d8b9ad: callq  0x0000000002cdff40  ; OopMap{rdx=Oop off=594}
                                                ;*getfield val$demo1
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@3 (line 13)
                                                ;   {runtime_call}
  0x0000000002d8b9b2: callq  0x0000000002cdff40  ; OopMap{rdx=Oop off=599}
                                                ;*getfield a
                                                ; - com.zju.leetcode.multiThread.testThread::access$000@1 (line 5)
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@6 (line 13)
                                                ;   {runtime_call}
  0x0000000002d8b9b7: movabs $0x0,%r8           ;   {oop(NULL)}
  0x0000000002d8b9c1: push   %rax
  0x0000000002d8b9c2: push   %rbx
  0x0000000002d8b9c3: mov    0x48(%r8),%rbx
  0x0000000002d8b9c7: push   %rdi
  0x0000000002d8b9c8: push   %rsi
  0x0000000002d8b9c9: push   %rdx
  0x0000000002d8b9ca: push   %rcx
  0x0000000002d8b9cb: push   %r8
  0x0000000002d8b9cd: push   %r9
  0x0000000002d8b9cf: push   %r10
  0x0000000002d8b9d1: mov    %rsp,%r10
  0x0000000002d8b9d4: and    $0xfffffffffffffff0,%rsp
  0x0000000002d8b9d8: push   %r10
  0x0000000002d8b9da: push   %r11
  0x0000000002d8b9dc: mov    $0x7,%ecx
  0x0000000002d8b9e1: movabs $0x7ffddc7c5e40,%r10  ;   {runtime_call}
  0x0000000002d8b9eb: callq  *%r10
  0x0000000002d8b9ee: pop    %r11
  0x0000000002d8b9f0: pop    %rsp
  0x0000000002d8b9f1: pop    %r10
  0x0000000002d8b9f3: pop    %r9
  0x0000000002d8b9f5: pop    %r8
  0x0000000002d8b9f7: pop    %rcx
  0x0000000002d8b9f8: pop    %rdx
  0x0000000002d8b9f9: pop    %rsi
  0x0000000002d8b9fa: pop    %rdi
  0x0000000002d8b9fb: cmp    0x118(%rbx),%rax
  0x0000000002d8ba02: pop    %rbx
  0x0000000002d8ba03: pop    %rax
  0x0000000002d8ba04: jne    0x0000000002d8ba14
  0x0000000002d8ba0a: jmpq   0x0000000002d8b882
  0x0000000002d8ba0f: mov    $0xa535d00,%eax
  0x0000000002d8ba14: callq  0x0000000002d71d20  ; OopMap{off=697}
                                                ;*getstatic out
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@18 (line 16)
                                                ;   {runtime_call}
  0x0000000002d8ba19: jmpq   0x0000000002d8b878
  0x0000000002d8ba1e: callq  0x0000000002cdff40  ; OopMap{r8=Oop off=707}
                                                ;*getstatic out
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@18 (line 16)
                                                ;   {runtime_call}
  0x0000000002d8ba23: mov    0x0(%r8),%edx
  0x0000000002d8ba2a: mov    $0x7050c00,%eax
  0x0000000002d8ba2f: callq  0x0000000002d725a0  ; OopMap{r8=Oop off=724}
                                                ;*getstatic out
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@18 (line 16)
                                                ;   {runtime_call}
  0x0000000002d8ba34: jmpq   0x0000000002d8b888
  0x0000000002d8ba39: callq  0x0000000002cdff40  ; OopMap{rdx=Oop off=734}
                                                ;*invokevirtual println
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@22 (line 16)
                                                ;   {runtime_call}
  0x0000000002d8ba3e: nop
  0x0000000002d8ba3f: nop
  0x0000000002d8ba40: mov    0x2a8(%r15),%rax
  0x0000000002d8ba47: movabs $0x0,%r10
  0x0000000002d8ba51: mov    %r10,0x2a8(%r15)
  0x0000000002d8ba58: movabs $0x0,%r10
  0x0000000002d8ba62: mov    %r10,0x2b0(%r15)
  0x0000000002d8ba69: add    $0x60,%rsp
  0x0000000002d8ba6d: pop    %rbp
  0x0000000002d8ba6e: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d8ba73: hlt    
  0x0000000002d8ba74: hlt    
  0x0000000002d8ba75: hlt    
  0x0000000002d8ba76: hlt    
  0x0000000002d8ba77: hlt    
  0x0000000002d8ba78: hlt    
  0x0000000002d8ba79: hlt    
  0x0000000002d8ba7a: hlt    
  0x0000000002d8ba7b: hlt    
  0x0000000002d8ba7c: hlt    
  0x0000000002d8ba7d: hlt    
  0x0000000002d8ba7e: hlt    
  0x0000000002d8ba7f: hlt    
[Stub Code]
  0x0000000002d8ba80: nop                       ;   {no_reloc}
  0x0000000002d8ba81: nop
  0x0000000002d8ba82: nop
  0x0000000002d8ba83: nop
  0x0000000002d8ba84: nop
  0x0000000002d8ba85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d8ba8f: jmpq   0x0000000002d8ba8f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d8ba94: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d8ba99: mov    %rsp,-0x28(%rsp)
  0x0000000002d8ba9e: sub    $0x80,%rsp
  0x0000000002d8baa5: mov    %rax,0x78(%rsp)
  0x0000000002d8baaa: mov    %rcx,0x70(%rsp)
  0x0000000002d8baaf: mov    %rdx,0x68(%rsp)
  0x0000000002d8bab4: mov    %rbx,0x60(%rsp)
  0x0000000002d8bab9: mov    %rbp,0x50(%rsp)
  0x0000000002d8babe: mov    %rsi,0x48(%rsp)
  0x0000000002d8bac3: mov    %rdi,0x40(%rsp)
  0x0000000002d8bac8: mov    %r8,0x38(%rsp)
  0x0000000002d8bacd: mov    %r9,0x30(%rsp)
  0x0000000002d8bad2: mov    %r10,0x28(%rsp)
  0x0000000002d8bad7: mov    %r11,0x20(%rsp)
  0x0000000002d8badc: mov    %r12,0x18(%rsp)
  0x0000000002d8bae1: mov    %r13,0x10(%rsp)
  0x0000000002d8bae6: mov    %r14,0x8(%rsp)
  0x0000000002d8baeb: mov    %r15,(%rsp)
  0x0000000002d8baef: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d8baf9: movabs $0x2d8ba99,%rdx    ;   {internal_word}
  0x0000000002d8bb03: mov    %rsp,%r8
  0x0000000002d8bb06: and    $0xfffffffffffffff0,%rsp
  0x0000000002d8bb0a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d8bb0f: hlt    
[Deopt Handler Code]
  0x0000000002d8bb10: movabs $0x2d8bb10,%r10    ;   {section_word}
  0x0000000002d8bb1a: push   %r10
  0x0000000002d8bb1c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d8bb21: hlt    
  0x0000000002d8bb22: hlt    
  0x0000000002d8bb23: hlt    
  0x0000000002d8bb24: hlt    
  0x0000000002d8bb25: hlt    
  0x0000000002d8bb26: hlt    
  0x0000000002d8bb27: hlt    
<nmethod compile_id='45' compile_kind='osr' compiler='C1' level='3' entry='0x0000000002d8b760' size='1904' address='0x0000000002d8b5d0' relocation_offset='288' insts_offset='400' stub_offset='1200' scopes_data_offset='1392' scopes_pcs_offset='1520' dependencies_offset='1856' nul_chk_table_offset='1864' oops_offset='1368' method='com/zju/leetcode/multiThread/testThread$1 run ()V' bytes='26' count='1' backedge_count='1473431' iicount='1' stamp='6.726'/>
<writer thread='27984'/>
<task_queued compile_id='46' method='com/zju/leetcode/multiThread/testThread$1 run ()V' bytes='26' count='1' backedge_count='1473536' iicount='1' level='3' stamp='6.727' comment='tiered' hot_count='1'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d91e10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d91fa0: mov    0x8(%rdx),%r10d
  0x0000000002d91fa4: shl    $0x3,%r10
  0x0000000002d91fa8: cmp    %rax,%r10
  0x0000000002d91fab: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d91fb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d91fbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d91fc0: mov    %eax,-0x6000(%rsp)
  0x0000000002d91fc7: push   %rbp
  0x0000000002d91fc8: sub    $0x30,%rsp
  0x0000000002d91fcc: movabs $0x19773500,%r8    ;   {metadata(method data for {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d91fd6: mov    0xdc(%r8),%esi
  0x0000000002d91fdd: add    $0x8,%esi
  0x0000000002d91fe0: mov    %esi,0xdc(%r8)
  0x0000000002d91fe7: movabs $0x19773368,%r8    ;   {metadata({method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d91ff1: and    $0x1ff8,%esi
  0x0000000002d91ff7: cmp    $0x0,%esi
  0x0000000002d91ffa: je     0x0000000002d92180  ;*iconst_0
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@0 (line 12)

  0x0000000002d92000: mov    $0x0,%r8d
  0x0000000002d92006: jmpq   0x0000000002d9205b  ;*aload_0
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@2 (line 13)

  0x0000000002d9200b: nopl   0x0(%rax,%rax,1)
  0x0000000002d92010: inc    %r8d
  0x0000000002d92013: movabs $0x19773500,%rsi   ;   {metadata(method data for {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d9201d: mov    0xe0(%rsi),%edi
  0x0000000002d92023: add    $0x8,%edi
  0x0000000002d92026: mov    %edi,0xe0(%rsi)
  0x0000000002d9202c: movabs $0x19773368,%rsi   ;   {metadata({method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d92036: and    $0xfff8,%edi
  0x0000000002d9203c: cmp    $0x0,%edi
  0x0000000002d9203f: je     0x0000000002d92197  ; OopMap{rdx=Oop off=165}
                                                ;*goto
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@15 (line 14)

  0x0000000002d92045: test   %eax,-0x401f4b(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d9204b: movabs $0x19773500,%rsi   ;   {metadata(method data for {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d92055: incl   0x138(%rsi)        ;*goto
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@15 (line 14)

  0x0000000002d9205b: mov    0xc(%rdx),%esi
  0x0000000002d9205e: shl    $0x3,%rsi          ;*getfield val$demo1
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@3 (line 13)

  0x0000000002d92062: movabs $0x19773500,%rdi   ;   {metadata(method data for {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d9206c: addq   $0x1,0x108(%rdi)
  0x0000000002d92074: movsbl 0xc(%rsi),%esi     ;*getfield a
                                                ; - com.zju.leetcode.multiThread.testThread::access$000@1 (line 5)
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@6 (line 13)
                                                ; implicit exception: dispatches to 0x0000000002d921ae
  0x0000000002d92078: and    $0x1,%esi
  0x0000000002d9207b: cmp    $0x0,%esi
  0x0000000002d9207e: movabs $0x19773500,%rsi   ;   {metadata(method data for {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d92088: movabs $0x118,%rdi
  0x0000000002d92092: je     0x0000000002d920a2
  0x0000000002d92098: movabs $0x128,%rdi
  0x0000000002d920a2: mov    (%rsi,%rdi,1),%rbx
  0x0000000002d920a6: lea    0x1(%rbx),%rbx
  0x0000000002d920aa: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002d920ae: jne    0x0000000002d92010  ;*ifeq
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@9 (line 13)

  0x0000000002d920b4: nopl   0x0(%rax)
  0x0000000002d920b8: jmpq   0x0000000002d92210  ;   {no_reloc}
  0x0000000002d920bd: add    %al,(%rax)
  0x0000000002d920bf: add    %al,(%rax)
  0x0000000002d920c1: add    %ah,0xf(%rsi)
  0x0000000002d920c4: (bad)  
  0x0000000002d920c5: add    %r8b,(%rax)
  0x0000000002d920c8: jmpq   0x0000000002d9222a  ; implicit exception: dispatches to 0x0000000002d9221a
  0x0000000002d920cd: nop
  0x0000000002d920ce: shl    $0x3,%rdx          ;*getstatic out
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@18 (line 16)

  0x0000000002d920d2: cmp    (%rdx),%rax        ;*invokevirtual println
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@22 (line 16)
                                                ; implicit exception: dispatches to 0x0000000002d92234
  0x0000000002d920d5: mov    %rdx,%rsi
  0x0000000002d920d8: movabs $0x19773500,%rdi   ;   {metadata(method data for {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d920e2: mov    0x8(%rsi),%esi
  0x0000000002d920e5: shl    $0x3,%rsi
  0x0000000002d920e9: cmp    0x158(%rdi),%rsi
  0x0000000002d920f0: jne    0x0000000002d920ff
  0x0000000002d920f2: addq   $0x1,0x160(%rdi)
  0x0000000002d920fa: jmpq   0x0000000002d92165
  0x0000000002d920ff: cmp    0x168(%rdi),%rsi
  0x0000000002d92106: jne    0x0000000002d92115
  0x0000000002d92108: addq   $0x1,0x170(%rdi)
  0x0000000002d92110: jmpq   0x0000000002d92165
  0x0000000002d92115: cmpq   $0x0,0x158(%rdi)
  0x0000000002d92120: jne    0x0000000002d92139
  0x0000000002d92122: mov    %rsi,0x158(%rdi)
  0x0000000002d92129: movq   $0x1,0x160(%rdi)
  0x0000000002d92134: jmpq   0x0000000002d92165
  0x0000000002d92139: cmpq   $0x0,0x168(%rdi)
  0x0000000002d92144: jne    0x0000000002d9215d
  0x0000000002d92146: mov    %rsi,0x168(%rdi)
  0x0000000002d9214d: movq   $0x1,0x170(%rdi)
  0x0000000002d92158: jmpq   0x0000000002d92165
  0x0000000002d9215d: addq   $0x1,0x150(%rdi)
  0x0000000002d92165: movabs $0xffffffffffffffff,%rax
  0x0000000002d9216f: callq  0x0000000002cb63e0  ; OopMap{off=468}
                                                ;*invokevirtual println
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@22 (line 16)
                                                ;   {virtual_call}
  0x0000000002d92174: add    $0x30,%rsp
  0x0000000002d92178: pop    %rbp
  0x0000000002d92179: test   %eax,-0x40207f(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9217f: retq   
  0x0000000002d92180: mov    %r8,0x8(%rsp)
  0x0000000002d92185: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9218d: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=498}
                                                ;*synchronization entry
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@-1 (line 12)
                                                ;   {runtime_call}
  0x0000000002d92192: jmpq   0x0000000002d92000
  0x0000000002d92197: mov    %rsi,0x8(%rsp)
  0x0000000002d9219c: movq   $0xf,(%rsp)
  0x0000000002d921a4: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=521}
                                                ;*goto
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@15 (line 14)
                                                ;   {runtime_call}
  0x0000000002d921a9: jmpq   0x0000000002d92045
  0x0000000002d921ae: callq  0x0000000002cdff40  ; OopMap{rdx=Oop off=531}
                                                ;*getfield a
                                                ; - com.zju.leetcode.multiThread.testThread::access$000@1 (line 5)
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@6 (line 13)
                                                ;   {runtime_call}
  0x0000000002d921b3: movabs $0x0,%rdx          ;   {oop(NULL)}
  0x0000000002d921bd: push   %rax
  0x0000000002d921be: push   %rbx
  0x0000000002d921bf: mov    0x48(%rdx),%rbx
  0x0000000002d921c3: push   %rdi
  0x0000000002d921c4: push   %rsi
  0x0000000002d921c5: push   %rdx
  0x0000000002d921c6: push   %rcx
  0x0000000002d921c7: push   %r8
  0x0000000002d921c9: push   %r9
  0x0000000002d921cb: push   %r10
  0x0000000002d921cd: mov    %rsp,%r10
  0x0000000002d921d0: and    $0xfffffffffffffff0,%rsp
  0x0000000002d921d4: push   %r10
  0x0000000002d921d6: push   %r11
  0x0000000002d921d8: mov    $0x7,%ecx
  0x0000000002d921dd: movabs $0x7ffddc7c5e40,%r10  ;   {runtime_call}
  0x0000000002d921e7: callq  *%r10
  0x0000000002d921ea: pop    %r11
  0x0000000002d921ec: pop    %rsp
  0x0000000002d921ed: pop    %r10
  0x0000000002d921ef: pop    %r9
  0x0000000002d921f1: pop    %r8
  0x0000000002d921f3: pop    %rcx
  0x0000000002d921f4: pop    %rdx
  0x0000000002d921f5: pop    %rsi
  0x0000000002d921f6: pop    %rdi
  0x0000000002d921f7: cmp    0x118(%rbx),%rax
  0x0000000002d921fe: pop    %rbx
  0x0000000002d921ff: pop    %rax
  0x0000000002d92200: jne    0x0000000002d92210
  0x0000000002d92206: jmpq   0x0000000002d920c2
  0x0000000002d9220b: mov    $0xa535d00,%eax
  0x0000000002d92210: callq  0x0000000002d71d20  ; OopMap{off=629}
                                                ;*getstatic out
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@18 (line 16)
                                                ;   {runtime_call}
  0x0000000002d92215: jmpq   0x0000000002d920b8
  0x0000000002d9221a: callq  0x0000000002cdff40  ; OopMap{rdx=Oop off=639}
                                                ;*getstatic out
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@18 (line 16)
                                                ;   {runtime_call}
  0x0000000002d9221f: mov    0x0(%rdx),%edx
  0x0000000002d92225: mov    $0x6050b00,%eax
  0x0000000002d9222a: callq  0x0000000002d725a0  ; OopMap{rdx=Oop off=655}
                                                ;*getstatic out
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@18 (line 16)
                                                ;   {runtime_call}
  0x0000000002d9222f: jmpq   0x0000000002d920c8
  0x0000000002d92234: callq  0x0000000002cdff40  ; OopMap{rdx=Oop off=665}
                                                ;*invokevirtual println
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@22 (line 16)
                                                ;   {runtime_call}
  0x0000000002d92239: nop
  0x0000000002d9223a: nop
  0x0000000002d9223b: mov    0x2a8(%r15),%rax
  0x0000000002d92242: movabs $0x0,%r10
  0x0000000002d9224c: mov    %r10,0x2a8(%r15)
  0x0000000002d92253: movabs $0x0,%r10
  0x0000000002d9225d: mov    %r10,0x2b0(%r15)
  0x0000000002d92264: add    $0x30,%rsp
  0x0000000002d92268: pop    %rbp
  0x0000000002d92269: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9226e: hlt    
  0x0000000002d9226f: hlt    
  0x0000000002d92270: hlt    
  0x0000000002d92271: hlt    
  0x0000000002d92272: hlt    
  0x0000000002d92273: hlt    
  0x0000000002d92274: hlt    
  0x0000000002d92275: hlt    
  0x0000000002d92276: hlt    
  0x0000000002d92277: hlt    
  0x0000000002d92278: hlt    
  0x0000000002d92279: hlt    
  0x0000000002d9227a: hlt    
  0x0000000002d9227b: hlt    
  0x0000000002d9227c: hlt    
  0x0000000002d9227d: hlt    
  0x0000000002d9227e: hlt    
  0x0000000002d9227f: hlt    
[Stub Code]
  0x0000000002d92280: nop                       ;   {no_reloc}
  0x0000000002d92281: nop
  0x0000000002d92282: nop
  0x0000000002d92283: nop
  0x0000000002d92284: nop
  0x0000000002d92285: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9228f: jmpq   0x0000000002d9228f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d92294: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d92299: mov    %rsp,-0x28(%rsp)
  0x0000000002d9229e: sub    $0x80,%rsp
  0x0000000002d922a5: mov    %rax,0x78(%rsp)
  0x0000000002d922aa: mov    %rcx,0x70(%rsp)
  0x0000000002d922af: mov    %rdx,0x68(%rsp)
  0x0000000002d922b4: mov    %rbx,0x60(%rsp)
  0x0000000002d922b9: mov    %rbp,0x50(%rsp)
  0x0000000002d922be: mov    %rsi,0x48(%rsp)
  0x0000000002d922c3: mov    %rdi,0x40(%rsp)
  0x0000000002d922c8: mov    %r8,0x38(%rsp)
  0x0000000002d922cd: mov    %r9,0x30(%rsp)
  0x0000000002d922d2: mov    %r10,0x28(%rsp)
  0x0000000002d922d7: mov    %r11,0x20(%rsp)
  0x0000000002d922dc: mov    %r12,0x18(%rsp)
  0x0000000002d922e1: mov    %r13,0x10(%rsp)
  0x0000000002d922e6: mov    %r14,0x8(%rsp)
  0x0000000002d922eb: mov    %r15,(%rsp)
  0x0000000002d922ef: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d922f9: movabs $0x2d92299,%rdx    ;   {internal_word}
  0x0000000002d92303: mov    %rsp,%r8
  0x0000000002d92306: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9230a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9230f: hlt    
[Deopt Handler Code]
  0x0000000002d92310: movabs $0x2d92310,%r10    ;   {section_word}
  0x0000000002d9231a: push   %r10
  0x0000000002d9231c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d92321: hlt    
  0x0000000002d92322: hlt    
  0x0000000002d92323: hlt    
  0x0000000002d92324: hlt    
  0x0000000002d92325: hlt    
  0x0000000002d92326: hlt    
  0x0000000002d92327: hlt    
<nmethod compile_id='46' compiler='C1' level='3' entry='0x0000000002d91fa0' size='1792' address='0x0000000002d91e10' relocation_offset='288' insts_offset='400' stub_offset='1136' scopes_data_offset='1328' scopes_pcs_offset='1448' dependencies_offset='1752' nul_chk_table_offset='1760' oops_offset='1304' method='com/zju/leetcode/multiThread/testThread$1 run ()V' bytes='26' count='1' backedge_count='7302872' iicount='1' stamp='6.856'/>
<writer thread='27984'/>
<task_queued compile_id='47' compile_kind='osr' method='com/zju/leetcode/multiThread/testThread$1 run ()V' bytes='26' count='1' backedge_count='7310336' iicount='1' osr_bci='2' stamp='6.857' comment='tiered' hot_count='7310336'/>
<writer thread='21476'/>
<task_queued compile_id='48' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='640' iicount='640' level='3' stamp='6.859' comment='tiered' hot_count='640'/>
<task_queued compile_id='49' method='java/lang/String indexOf (I)I' bytes='7' count='640' iicount='640' level='3' stamp='6.859' comment='tiered' hot_count='640'/>
<task_queued compile_id='50' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='384' iicount='384' level='3' stamp='6.859' comment='tiered' hot_count='384'/>
<task_queued compile_id='51' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='384' backedge_count='41' iicount='384' level='3' stamp='6.859' comment='tiered' hot_count='384'/>
<writer thread='1944'/>
Decoding compiled method 0x0000000002d8b210:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000019773370} &apos;run&apos; &apos;()V&apos; in &apos;com/zju/leetcode/multiThread/testThread$1&apos;
  0x0000000002d8b360: int3   
  0x0000000002d8b361: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d8b36c: data16 data16 xchg %ax,%ax
  0x0000000002d8b370: mov    %eax,-0x6000(%rsp)
  0x0000000002d8b377: push   %rbp
  0x0000000002d8b378: sub    $0x40,%rsp
  0x0000000002d8b37c: mov    (%rdx),%ebp
  0x0000000002d8b37e: mov    0x8(%rdx),%rbx
  0x0000000002d8b382: mov    %rdx,%rcx
  0x0000000002d8b385: movabs $0x5e0cd790,%r10
  0x0000000002d8b38f: callq  *%r10
  0x0000000002d8b392: mov    0x8(%rbx),%r10d    ; implicit exception: dispatches to 0x0000000002d8b3e9
  0x0000000002d8b396: cmp    $0xf800c143,%r10d  ;   {metadata(&apos;com/zju/leetcode/multiThread/testThread$1&apos;)}
  0x0000000002d8b39d: jne    0x0000000002d8b3cd  ;*aload_0
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@2 (line 13)

  0x0000000002d8b39f: jmp    0x0000000002d8b3a9
  0x0000000002d8b3a1: inc    %ebp               ; OopMap{rbx=Oop off=67}
                                                ;*goto
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@15 (line 14)

  0x0000000002d8b3a3: test   %eax,-0x3fb3a9(%rip)        # 0x0000000002990000
                                                ;*aload_0
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@2 (line 13)
                                                ;   {poll}
  0x0000000002d8b3a9: mov    0xc(%rbx),%r10d    ;*getfield val$demo1
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@3 (line 13)

  0x0000000002d8b3ad: movzbl 0xc(%r12,%r10,8),%r10d  ;*getfield a
                                                ; - com.zju.leetcode.multiThread.testThread::access$000@1 (line 5)
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@6 (line 13)
                                                ; implicit exception: dispatches to 0x0000000002d8b3dd
  0x0000000002d8b3b3: test   %r10d,%r10d
  0x0000000002d8b3b6: jne    0x0000000002d8b3a1  ;*ifeq
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@9 (line 13)

  0x0000000002d8b3b8: mov    $0xffffff65,%edx
  0x0000000002d8b3bd: mov    %rbx,0x20(%rsp)
  0x0000000002d8b3c2: mov    %r10d,0x28(%rsp)
  0x0000000002d8b3c7: callq  0x0000000002cb57a0  ; OopMap{[32]=Oop off=108}
                                                ;*ifeq
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@9 (line 13)
                                                ;   {runtime_call}
  0x0000000002d8b3cc: int3   
  0x0000000002d8b3cd: mov    $0xffffff9d,%edx
  0x0000000002d8b3d2: mov    %rbx,0x20(%rsp)
  0x0000000002d8b3d7: callq  0x0000000002cb57a0  ; OopMap{[32]=Oop off=124}
                                                ;*aload_0
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@2 (line 13)
                                                ;   {runtime_call}
  0x0000000002d8b3dc: int3                      ;*getfield a
                                                ; - com.zju.leetcode.multiThread.testThread::access$000@1 (line 5)
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@6 (line 13)

  0x0000000002d8b3dd: mov    $0xfffffff6,%edx
  0x0000000002d8b3e2: nop
  0x0000000002d8b3e3: callq  0x0000000002cb57a0  ; OopMap{off=136}
                                                ;*getfield a
                                                ; - com.zju.leetcode.multiThread.testThread::access$000@1 (line 5)
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@6 (line 13)
                                                ;   {runtime_call}
  0x0000000002d8b3e8: int3   
  0x0000000002d8b3e9: mov    $0xffffff86,%edx
  0x0000000002d8b3ee: nop
  0x0000000002d8b3ef: callq  0x0000000002cb57a0  ; OopMap{off=148}
                                                ;*aload_0
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@2 (line 13)
                                                ;   {runtime_call}
  0x0000000002d8b3f4: int3                      ;*aload_0
                                                ; - com.zju.leetcode.multiThread.testThread$1::run@2 (line 13)

  0x0000000002d8b3f5: hlt    
  0x0000000002d8b3f6: hlt    
  0x0000000002d8b3f7: hlt    
  0x0000000002d8b3f8: hlt    
  0x0000000002d8b3f9: hlt    
  0x0000000002d8b3fa: hlt    
  0x0000000002d8b3fb: hlt    
  0x0000000002d8b3fc: hlt    
  0x0000000002d8b3fd: hlt    
  0x0000000002d8b3fe: hlt    
  0x0000000002d8b3ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d8b400: jmpq   0x0000000002cdf4a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002d8b405: callq  0x0000000002d8b40a
  0x0000000002d8b40a: subq   $0x5,(%rsp)
  0x0000000002d8b40f: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d8b414: hlt    
  0x0000000002d8b415: hlt    
  0x0000000002d8b416: hlt    
  0x0000000002d8b417: hlt    
<nmethod compile_id='47' compile_kind='osr' compiler='C2' level='4' entry='0x0000000002d8b360' size='912' address='0x0000000002d8b210' relocation_offset='288' insts_offset='336' stub_offset='496' scopes_data_offset='552' scopes_pcs_offset='656' dependencies_offset='880' nul_chk_table_offset='888' oops_offset='520' method='com/zju/leetcode/multiThread/testThread$1 run ()V' bytes='26' count='1' backedge_count='8335815' iicount='1' stamp='6.877'/>
<make_not_entrant thread='1944' compile_id='45' compile_kind='osr' compiler='C1' level='3' stamp='6.877'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d94d50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d94ec0: mov    %eax,-0x6000(%rsp)
  0x0000000002d94ec7: push   %rbp
  0x0000000002d94ec8: sub    $0x30,%rsp
  0x0000000002d94ecc: movabs $0x19657650,%rsi   ;   {metadata(method data for {method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d94ed6: mov    0xdc(%rsi),%edi
  0x0000000002d94edc: add    $0x8,%edi
  0x0000000002d94edf: mov    %edi,0xdc(%rsi)
  0x0000000002d94ee5: movabs $0x19458c48,%rsi   ;   {metadata({method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d94eef: and    $0x1ff8,%edi
  0x0000000002d94ef5: cmp    $0x0,%edi
  0x0000000002d94ef8: je     0x0000000002d9500c  ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 339)

  0x0000000002d94efe: cmp    $0x0,%rdx
  0x0000000002d94f02: movabs $0x19657650,%rsi   ;   {metadata(method data for {method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d94f0c: movabs $0x108,%rdi
  0x0000000002d94f16: jne    0x0000000002d94f26
  0x0000000002d94f1c: movabs $0x118,%rdi
  0x0000000002d94f26: mov    (%rsi,%rdi,1),%rbx
  0x0000000002d94f2a: lea    0x1(%rbx),%rbx
  0x0000000002d94f2e: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002d94f32: jne    0x0000000002d94f52  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)

  0x0000000002d94f38: movabs $0x19657650,%rdx   ;   {metadata(method data for {method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d94f42: incl   0x128(%rdx)
  0x0000000002d94f48: mov    $0x0,%esi
  0x0000000002d94f4d: jmpq   0x0000000002d94ffd  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)

  0x0000000002d94f52: cmp    (%rdx),%rax        ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; implicit exception: dispatches to 0x0000000002d95023
  0x0000000002d94f55: mov    %rdx,%rsi
  0x0000000002d94f58: movabs $0x19657650,%rdi   ;   {metadata(method data for {method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d94f62: mov    0x8(%rsi),%esi
  0x0000000002d94f65: shl    $0x3,%rsi
  0x0000000002d94f69: cmp    0x148(%rdi),%rsi
  0x0000000002d94f70: jne    0x0000000002d94f7f
  0x0000000002d94f72: addq   $0x1,0x150(%rdi)
  0x0000000002d94f7a: jmpq   0x0000000002d94fe5
  0x0000000002d94f7f: cmp    0x158(%rdi),%rsi
  0x0000000002d94f86: jne    0x0000000002d94f95
  0x0000000002d94f88: addq   $0x1,0x160(%rdi)
  0x0000000002d94f90: jmpq   0x0000000002d94fe5
  0x0000000002d94f95: cmpq   $0x0,0x148(%rdi)
  0x0000000002d94fa0: jne    0x0000000002d94fb9
  0x0000000002d94fa2: mov    %rsi,0x148(%rdi)
  0x0000000002d94fa9: movq   $0x1,0x150(%rdi)
  0x0000000002d94fb4: jmpq   0x0000000002d94fe5
  0x0000000002d94fb9: cmpq   $0x0,0x158(%rdi)
  0x0000000002d94fc4: jne    0x0000000002d94fdd
  0x0000000002d94fc6: mov    %rsi,0x158(%rdi)
  0x0000000002d94fcd: movq   $0x1,0x160(%rdi)
  0x0000000002d94fd8: jmpq   0x0000000002d94fe5
  0x0000000002d94fdd: addq   $0x1,0x140(%rdi)
  0x0000000002d94fe5: movabs $0xffffffffffffffff,%rax
  0x0000000002d94fef: callq  0x0000000002cb63e0  ; OopMap{off=308}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {virtual_call}
  0x0000000002d94ff4: mov    %rax,%rsi
  0x0000000002d94ff7: shr    $0x10,%esi
  0x0000000002d94ffa: xor    %rax,%rsi
  0x0000000002d94ffd: mov    %rsi,%rax
  0x0000000002d95000: add    $0x30,%rsp
  0x0000000002d95004: pop    %rbp
  0x0000000002d95005: test   %eax,-0x404f0b(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9500b: retq   
  0x0000000002d9500c: mov    %rsi,0x8(%rsp)
  0x0000000002d95011: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d95019: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ;   {runtime_call}
  0x0000000002d9501e: jmpq   0x0000000002d94efe
  0x0000000002d95023: callq  0x0000000002cdff40  ; OopMap{rdx=Oop off=360}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {runtime_call}
  0x0000000002d95028: nop
  0x0000000002d95029: nop
  0x0000000002d9502a: mov    0x2a8(%r15),%rax
  0x0000000002d95031: movabs $0x0,%r10
  0x0000000002d9503b: mov    %r10,0x2a8(%r15)
  0x0000000002d95042: movabs $0x0,%r10
  0x0000000002d9504c: mov    %r10,0x2b0(%r15)
  0x0000000002d95053: add    $0x30,%rsp
  0x0000000002d95057: pop    %rbp
  0x0000000002d95058: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9505d: hlt    
  0x0000000002d9505e: hlt    
  0x0000000002d9505f: hlt    
[Stub Code]
  0x0000000002d95060: nop                       ;   {no_reloc}
  0x0000000002d95061: nop
  0x0000000002d95062: nop
  0x0000000002d95063: nop
  0x0000000002d95064: nop
  0x0000000002d95065: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9506f: jmpq   0x0000000002d9506f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d95074: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d95079: mov    %rsp,-0x28(%rsp)
  0x0000000002d9507e: sub    $0x80,%rsp
  0x0000000002d95085: mov    %rax,0x78(%rsp)
  0x0000000002d9508a: mov    %rcx,0x70(%rsp)
  0x0000000002d9508f: mov    %rdx,0x68(%rsp)
  0x0000000002d95094: mov    %rbx,0x60(%rsp)
  0x0000000002d95099: mov    %rbp,0x50(%rsp)
  0x0000000002d9509e: mov    %rsi,0x48(%rsp)
  0x0000000002d950a3: mov    %rdi,0x40(%rsp)
  0x0000000002d950a8: mov    %r8,0x38(%rsp)
  0x0000000002d950ad: mov    %r9,0x30(%rsp)
  0x0000000002d950b2: mov    %r10,0x28(%rsp)
  0x0000000002d950b7: mov    %r11,0x20(%rsp)
  0x0000000002d950bc: mov    %r12,0x18(%rsp)
  0x0000000002d950c1: mov    %r13,0x10(%rsp)
  0x0000000002d950c6: mov    %r14,0x8(%rsp)
  0x0000000002d950cb: mov    %r15,(%rsp)
  0x0000000002d950cf: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d950d9: movabs $0x2d95079,%rdx    ;   {internal_word}
  0x0000000002d950e3: mov    %rsp,%r8
  0x0000000002d950e6: and    $0xfffffffffffffff0,%rsp
  0x0000000002d950ea: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d950ef: hlt    
[Deopt Handler Code]
  0x0000000002d950f0: movabs $0x2d950f0,%r10    ;   {section_word}
  0x0000000002d950fa: push   %r10
  0x0000000002d950fc: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d95101: hlt    
  0x0000000002d95102: hlt    
  0x0000000002d95103: hlt    
  0x0000000002d95104: hlt    
  0x0000000002d95105: hlt    
  0x0000000002d95106: hlt    
  0x0000000002d95107: hlt    
<nmethod compile_id='48' compiler='C1' level='3' entry='0x0000000002d94ec0' size='1176' address='0x0000000002d94d50' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='960' scopes_pcs_offset='1008' dependencies_offset='1152' nul_chk_table_offset='1160' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='647' iicount='647' stamp='6.907'/>
<sweeper state='finished' traversals='1'  total_blobs='305' nmethods='38' adapters='181' free_code_cache='250468736' stamp='6.907'/>
<writer thread='21476'/>
<task_queued compile_id='52' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='184' backedge_count='8192' iicount='184' level='3' stamp='6.908' comment='tiered' hot_count='184'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d92550:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi       = boolean
  # parm4:    rcx       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x0000000002d927c0: mov    0x8(%rdx),%r10d
  0x0000000002d927c4: shl    $0x3,%r10
  0x0000000002d927c8: cmp    %rax,%r10
  0x0000000002d927cb: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d927d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d927dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d927e0: mov    %eax,-0x6000(%rsp)
  0x0000000002d927e7: push   %rbp
  0x0000000002d927e8: sub    $0xa0,%rsp
  0x0000000002d927ef: mov    %rdx,0x48(%rsp)
  0x0000000002d927f4: mov    %r8d,0x40(%rsp)
  0x0000000002d927f9: mov    %r9,0x50(%rsp)
  0x0000000002d927fe: movabs $0x1967e688,%rbx   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92808: mov    0xdc(%rbx),%eax
  0x0000000002d9280e: add    $0x8,%eax
  0x0000000002d92811: mov    %eax,0xdc(%rbx)
  0x0000000002d92817: movabs $0x19459918,%rbx   ;   {metadata({method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92821: and    $0x1ff8,%eax
  0x0000000002d92827: cmp    $0x0,%eax
  0x0000000002d9282a: je     0x0000000002d9389d  ;*aload_0
                                                ; - java.util.HashMap::putVal@0 (line 628)

  0x0000000002d92830: mov    0x24(%rdx),%ebx
  0x0000000002d92833: shl    $0x3,%rbx          ;*getfield table
                                                ; - java.util.HashMap::putVal@1 (line 628)

  0x0000000002d92837: cmp    $0x0,%rbx
  0x0000000002d9283b: movabs $0x1967e688,%rax   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92845: movabs $0x108,%r11
  0x0000000002d9284f: je     0x0000000002d9285f
  0x0000000002d92855: movabs $0x118,%r11
  0x0000000002d9285f: mov    (%rax,%r11,1),%r13
  0x0000000002d92863: lea    0x1(%r13),%r13
  0x0000000002d92867: mov    %r13,(%rax,%r11,1)
  0x0000000002d9286b: je     0x0000000002d928bf  ;*ifnull
                                                ; - java.util.HashMap::putVal@7 (line 628)

  0x0000000002d92871: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 628)
                                                ; implicit exception: dispatches to 0x0000000002d938b4
  0x0000000002d92874: cmp    $0x0,%eax
  0x0000000002d92877: movabs $0x1967e688,%r11   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92881: movabs $0x128,%r13
  0x0000000002d9288b: jne    0x0000000002d9289b
  0x0000000002d92891: movabs $0x138,%r13
  0x0000000002d9289b: mov    (%r11,%r13,1),%r14
  0x0000000002d9289f: lea    0x1(%r14),%r14
  0x0000000002d928a3: mov    %r14,(%r11,%r13,1)
  0x0000000002d928a7: je     0x0000000002d928bf  ;*ifne
                                                ; - java.util.HashMap::putVal@16 (line 628)

  0x0000000002d928ad: mov    %ecx,0x60(%rsp)
  0x0000000002d928b1: mov    %esi,0x44(%rsp)
  0x0000000002d928b5: mov    %rdi,0x58(%rsp)
  0x0000000002d928ba: jmpq   0x0000000002d92979  ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 630)

  0x0000000002d928bf: mov    %ecx,0x60(%rsp)
  0x0000000002d928c3: mov    %esi,0x44(%rsp)
  0x0000000002d928c7: mov    %rdi,0x58(%rsp)
  0x0000000002d928cc: mov    %rdx,%rbx
  0x0000000002d928cf: movabs $0x1967e688,%rax   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d928d9: mov    0x8(%rbx),%ebx
  0x0000000002d928dc: shl    $0x3,%rbx
  0x0000000002d928e0: cmp    0x150(%rax),%rbx
  0x0000000002d928e7: jne    0x0000000002d928f6
  0x0000000002d928e9: addq   $0x1,0x158(%rax)
  0x0000000002d928f1: jmpq   0x0000000002d9295c
  0x0000000002d928f6: cmp    0x160(%rax),%rbx
  0x0000000002d928fd: jne    0x0000000002d9290c
  0x0000000002d928ff: addq   $0x1,0x168(%rax)
  0x0000000002d92907: jmpq   0x0000000002d9295c
  0x0000000002d9290c: cmpq   $0x0,0x150(%rax)
  0x0000000002d92917: jne    0x0000000002d92930
  0x0000000002d92919: mov    %rbx,0x150(%rax)
  0x0000000002d92920: movq   $0x1,0x158(%rax)
  0x0000000002d9292b: jmpq   0x0000000002d9295c
  0x0000000002d92930: cmpq   $0x0,0x160(%rax)
  0x0000000002d9293b: jne    0x0000000002d92954
  0x0000000002d9293d: mov    %rbx,0x160(%rax)
  0x0000000002d92944: movq   $0x1,0x168(%rax)
  0x0000000002d9294f: jmpq   0x0000000002d9295c
  0x0000000002d92954: addq   $0x1,0x148(%rax)
  0x0000000002d9295c: mov    %rdx,%rbx
  0x0000000002d9295f: mov    %rbx,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 629)

  0x0000000002d92962: nop
  0x0000000002d92963: nop
  0x0000000002d92964: nop
  0x0000000002d92965: nop
  0x0000000002d92966: nop
  0x0000000002d92967: callq  0x0000000002cb61a0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop off=428}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 629)
                                                ;   {optimized virtual_call}
  0x0000000002d9296c: mov    %rax,%r8           ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 629)

  0x0000000002d9296f: mov    0xc(%r8),%r9d      ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 629)
                                                ; implicit exception: dispatches to 0x0000000002d938b9
  0x0000000002d92973: mov    %r9,%rax
  0x0000000002d92976: mov    %r8,%rbx           ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 630)

  0x0000000002d92979: dec    %eax
  0x0000000002d9297b: and    0x40(%rsp),%eax
  0x0000000002d9297f: movslq %eax,%r8
  0x0000000002d92982: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x0000000002d938be
  0x0000000002d92985: jae    0x0000000002d938c8
  0x0000000002d9298b: mov    0x10(%rbx,%r8,4),%esi
  0x0000000002d92990: shl    $0x3,%rsi          ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)

  0x0000000002d92994: cmp    $0x0,%rsi
  0x0000000002d92998: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d929a2: movabs $0x178,%r9
  0x0000000002d929ac: jne    0x0000000002d929bc
  0x0000000002d929b2: movabs $0x188,%r9
  0x0000000002d929bc: mov    (%r8,%r9,1),%rdi
  0x0000000002d929c0: lea    0x1(%rdi),%rdi
  0x0000000002d929c4: mov    %rdi,(%r8,%r9,1)
  0x0000000002d929c8: jne    0x0000000002d92bf4  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@44 (line 630)

  0x0000000002d929ce: mov    %eax,0x64(%rsp)
  0x0000000002d929d2: mov    %rbx,0x68(%rsp)
  0x0000000002d929d7: mov    0x48(%rsp),%rdx
  0x0000000002d929dc: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d929e6: mov    0x8(%rdx),%edx
  0x0000000002d929e9: shl    $0x3,%rdx
  0x0000000002d929ed: cmp    0x1a0(%r8),%rdx
  0x0000000002d929f4: jne    0x0000000002d92a03
  0x0000000002d929f6: addq   $0x1,0x1a8(%r8)
  0x0000000002d929fe: jmpq   0x0000000002d92a69
  0x0000000002d92a03: cmp    0x1b0(%r8),%rdx
  0x0000000002d92a0a: jne    0x0000000002d92a19
  0x0000000002d92a0c: addq   $0x1,0x1b8(%r8)
  0x0000000002d92a14: jmpq   0x0000000002d92a69
  0x0000000002d92a19: cmpq   $0x0,0x1a0(%r8)
  0x0000000002d92a24: jne    0x0000000002d92a3d
  0x0000000002d92a26: mov    %rdx,0x1a0(%r8)
  0x0000000002d92a2d: movq   $0x1,0x1a8(%r8)
  0x0000000002d92a38: jmpq   0x0000000002d92a69
  0x0000000002d92a3d: cmpq   $0x0,0x1b0(%r8)
  0x0000000002d92a48: jne    0x0000000002d92a61
  0x0000000002d92a4a: mov    %rdx,0x1b0(%r8)
  0x0000000002d92a51: movq   $0x1,0x1b8(%r8)
  0x0000000002d92a5c: jmpq   0x0000000002d92a69
  0x0000000002d92a61: addq   $0x1,0x198(%r8)
  0x0000000002d92a69: mov    0x40(%rsp),%r8d
  0x0000000002d92a6e: mov    0x50(%rsp),%r9
  0x0000000002d92a73: mov    0x58(%rsp),%rdi
  0x0000000002d92a78: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x0000000002d92a82: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 631)

  0x0000000002d92a87: nop
  0x0000000002d92a88: nop
  0x0000000002d92a89: nop
  0x0000000002d92a8a: nop
  0x0000000002d92a8b: nop
  0x0000000002d92a8c: nop
  0x0000000002d92a8d: movabs $0xffffffffffffffff,%rax
  0x0000000002d92a97: callq  0x0000000002cb63e0  ; OopMap{[72]=Oop [104]=Oop off=732}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 631)
                                                ;   {virtual_call}
  0x0000000002d92a9c: mov    0x64(%rsp),%r8d
  0x0000000002d92aa1: movslq %r8d,%rdx
  0x0000000002d92aa4: mov    0x68(%rsp),%rbx
  0x0000000002d92aa9: lea    0x10(%rbx,%rdx,4),%rdx
  0x0000000002d92aae: cmp    0xc(%rbx),%r8d
  0x0000000002d92ab2: jae    0x0000000002d938d1
  0x0000000002d92ab8: cmp    $0x0,%rax
  0x0000000002d92abc: jne    0x0000000002d92ad7
  0x0000000002d92abe: movabs $0x1967e688,%rsi   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92ac8: orl    $0x100,0x1c0(%rsi)
  0x0000000002d92ad2: jmpq   0x0000000002d92bc1
  0x0000000002d92ad7: mov    0x8(%rbx),%r8d     ; implicit exception: dispatches to 0x0000000002d938da
  0x0000000002d92adb: shl    $0x3,%r8
  0x0000000002d92adf: mov    0x8(%rax),%esi
  0x0000000002d92ae2: shl    $0x3,%rsi
  0x0000000002d92ae6: mov    0xf0(%r8),%r8
  0x0000000002d92aed: cmp    %r8,%rsi
  0x0000000002d92af0: je     0x0000000002d92b22
  0x0000000002d92af6: mov    0xc(%r8),%edi
  0x0000000002d92afa: cmp    (%rsi,%rdi,1),%r8
  0x0000000002d92afe: je     0x0000000002d92b22
  0x0000000002d92b04: cmp    $0x18,%edi
  0x0000000002d92b07: jne    0x0000000002d92baa
  0x0000000002d92b0d: push   %rsi
  0x0000000002d92b0e: push   %r8
  0x0000000002d92b10: callq  0x0000000002d6f3e0  ;   {runtime_call}
  0x0000000002d92b15: pop    %rsi
  0x0000000002d92b16: pop    %r8
  0x0000000002d92b18: cmp    $0x0,%r8d
  0x0000000002d92b1c: je     0x0000000002d92baa
  0x0000000002d92b22: movabs $0x1967e688,%rsi   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92b2c: mov    0x8(%rax),%r8d
  0x0000000002d92b30: shl    $0x3,%r8
  0x0000000002d92b34: cmp    0x1d0(%rsi),%r8
  0x0000000002d92b3b: jne    0x0000000002d92b4a
  0x0000000002d92b3d: addq   $0x1,0x1d8(%rsi)
  0x0000000002d92b45: jmpq   0x0000000002d92bc1
  0x0000000002d92b4a: cmp    0x1e0(%rsi),%r8
  0x0000000002d92b51: jne    0x0000000002d92b60
  0x0000000002d92b53: addq   $0x1,0x1e8(%rsi)
  0x0000000002d92b5b: jmpq   0x0000000002d92bc1
  0x0000000002d92b60: cmpq   $0x0,0x1d0(%rsi)
  0x0000000002d92b6b: jne    0x0000000002d92b84
  0x0000000002d92b6d: mov    %r8,0x1d0(%rsi)
  0x0000000002d92b74: movq   $0x1,0x1d8(%rsi)
  0x0000000002d92b7f: jmpq   0x0000000002d92bc1
  0x0000000002d92b84: cmpq   $0x0,0x1e0(%rsi)
  0x0000000002d92b8f: jne    0x0000000002d92ba8
  0x0000000002d92b91: mov    %r8,0x1e0(%rsi)
  0x0000000002d92b98: movq   $0x1,0x1e8(%rsi)
  0x0000000002d92ba3: jmpq   0x0000000002d92bc1
  0x0000000002d92ba8: jmp    0x0000000002d92bc1
  0x0000000002d92baa: movabs $0x1967e688,%rsi   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92bb4: subq   $0x1,0x1c8(%rsi)
  0x0000000002d92bbc: jmpq   0x0000000002d938df
  0x0000000002d92bc1: mov    %rax,%r10
  0x0000000002d92bc4: shr    $0x3,%r10
  0x0000000002d92bc8: mov    %r10d,(%rdx)
  0x0000000002d92bcb: shr    $0x9,%rdx
  0x0000000002d92bcf: movabs $0xe824000,%r8
  0x0000000002d92bd9: movb   $0x0,(%rdx,%r8,1)  ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)

  0x0000000002d92bde: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92be8: incl   0x1f8(%r8)
  0x0000000002d92bef: jmpq   0x0000000002d93568  ;*goto
                                                ; - java.util.HashMap::putVal@60 (line 631)

  0x0000000002d92bf4: mov    0xc(%rsi),%r8d     ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 634)
                                                ; implicit exception: dispatches to 0x0000000002d938e8
  0x0000000002d92bf8: cmp    0x40(%rsp),%r8d
  0x0000000002d92bfd: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92c07: movabs $0x210,%rdx
  0x0000000002d92c11: jne    0x0000000002d92c21
  0x0000000002d92c17: movabs $0x220,%rdx
  0x0000000002d92c21: mov    (%r8,%rdx,1),%rdi
  0x0000000002d92c25: lea    0x1(%rdi),%rdi
  0x0000000002d92c29: mov    %rdi,(%r8,%rdx,1)
  0x0000000002d92c2d: je     0x0000000002d92c3d  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@69 (line 634)

  0x0000000002d92c33: mov    %rbx,0x68(%rsp)
  0x0000000002d92c38: jmpq   0x0000000002d92dba  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 637)

  0x0000000002d92c3d: mov    0x50(%rsp),%r9
  0x0000000002d92c42: mov    0x10(%rsi),%r8d
  0x0000000002d92c46: shl    $0x3,%r8           ;*getfield key
                                                ; - java.util.HashMap::putVal@74 (line 634)

  0x0000000002d92c4a: cmp    %r9,%r8
  0x0000000002d92c4d: movabs $0x1967e688,%rdx   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92c57: movabs $0x230,%rdi
  0x0000000002d92c61: je     0x0000000002d92c71
  0x0000000002d92c67: movabs $0x240,%rdi
  0x0000000002d92c71: mov    (%rdx,%rdi,1),%rax
  0x0000000002d92c75: lea    0x1(%rax),%rax
  0x0000000002d92c79: mov    %rax,(%rdx,%rdi,1)
  0x0000000002d92c7d: je     0x0000000002d9351a  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@81 (line 634)

  0x0000000002d92c83: cmp    $0x0,%r9
  0x0000000002d92c87: movabs $0x1967e688,%rdx   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92c91: movabs $0x250,%rdi
  0x0000000002d92c9b: je     0x0000000002d92cab
  0x0000000002d92ca1: movabs $0x260,%rdi
  0x0000000002d92cab: mov    (%rdx,%rdi,1),%rax
  0x0000000002d92caf: lea    0x1(%rax),%rax
  0x0000000002d92cb3: mov    %rax,(%rdx,%rdi,1)
  0x0000000002d92cb7: jne    0x0000000002d92cc7  ;*ifnull
                                                ; - java.util.HashMap::putVal@85 (line 634)

  0x0000000002d92cbd: mov    %rbx,0x68(%rsp)
  0x0000000002d92cc2: jmpq   0x0000000002d92dba  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 637)

  0x0000000002d92cc7: mov    %rsi,0x70(%rsp)
  0x0000000002d92ccc: mov    %rbx,0x68(%rsp)
  0x0000000002d92cd1: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000000002d938ed
  0x0000000002d92cd4: mov    %r9,%rdx
  0x0000000002d92cd7: movabs $0x1967e688,%rdi   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92ce1: mov    0x8(%rdx),%edx
  0x0000000002d92ce4: shl    $0x3,%rdx
  0x0000000002d92ce8: cmp    0x278(%rdi),%rdx
  0x0000000002d92cef: jne    0x0000000002d92cfe
  0x0000000002d92cf1: addq   $0x1,0x280(%rdi)
  0x0000000002d92cf9: jmpq   0x0000000002d92d64
  0x0000000002d92cfe: cmp    0x288(%rdi),%rdx
  0x0000000002d92d05: jne    0x0000000002d92d14
  0x0000000002d92d07: addq   $0x1,0x290(%rdi)
  0x0000000002d92d0f: jmpq   0x0000000002d92d64
  0x0000000002d92d14: cmpq   $0x0,0x278(%rdi)
  0x0000000002d92d1f: jne    0x0000000002d92d38
  0x0000000002d92d21: mov    %rdx,0x278(%rdi)
  0x0000000002d92d28: movq   $0x1,0x280(%rdi)
  0x0000000002d92d33: jmpq   0x0000000002d92d64
  0x0000000002d92d38: cmpq   $0x0,0x288(%rdi)
  0x0000000002d92d43: jne    0x0000000002d92d5c
  0x0000000002d92d45: mov    %rdx,0x288(%rdi)
  0x0000000002d92d4c: movq   $0x1,0x290(%rdi)
  0x0000000002d92d57: jmpq   0x0000000002d92d64
  0x0000000002d92d5c: addq   $0x1,0x270(%rdi)
  0x0000000002d92d64: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 635)

  0x0000000002d92d67: nop
  0x0000000002d92d68: nop
  0x0000000002d92d69: nop
  0x0000000002d92d6a: nop
  0x0000000002d92d6b: nop
  0x0000000002d92d6c: nop
  0x0000000002d92d6d: movabs $0xffffffffffffffff,%rax
  0x0000000002d92d77: callq  0x0000000002cb63e0  ; OopMap{[72]=Oop [88]=Oop [80]=Oop [112]=Oop [104]=Oop off=1468}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 635)
                                                ;   {virtual_call}
  0x0000000002d92d7c: cmp    $0x0,%eax
  0x0000000002d92d7f: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92d89: movabs $0x2a0,%r9
  0x0000000002d92d93: je     0x0000000002d92da3
  0x0000000002d92d99: movabs $0x2b0,%r9
  0x0000000002d92da3: mov    (%r8,%r9,1),%rdi
  0x0000000002d92da7: lea    0x1(%rdi),%rdi
  0x0000000002d92dab: mov    %rdi,(%r8,%r9,1)
  0x0000000002d92daf: mov    0x70(%rsp),%rsi
  0x0000000002d92db4: jne    0x0000000002d9351a  ;*ifeq
                                                ; - java.util.HashMap::putVal@94 (line 635)

  0x0000000002d92dba: cmp    $0x0,%rsi
  0x0000000002d92dbe: jne    0x0000000002d92dd9
  0x0000000002d92dc0: movabs $0x1967e688,%rdi   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92dca: orl    $0x100,0x2d0(%rdi)
  0x0000000002d92dd4: jmpq   0x0000000002d92e9a
  0x0000000002d92dd9: movabs $0x7c0039850,%rcx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x0000000002d92de3: mov    0x8(%rsi),%r9d
  0x0000000002d92de7: shl    $0x3,%r9
  0x0000000002d92deb: cmp    %r9,%rcx
  0x0000000002d92dee: jne    0x0000000002d92e7e
  0x0000000002d92df4: movabs $0x1967e688,%rdi   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92dfe: mov    0x8(%rsi),%ecx
  0x0000000002d92e01: shl    $0x3,%rcx
  0x0000000002d92e05: cmp    0x2e0(%rdi),%rcx
  0x0000000002d92e0c: jne    0x0000000002d92e1b
  0x0000000002d92e0e: addq   $0x1,0x2e8(%rdi)
  0x0000000002d92e16: jmpq   0x0000000002d92e9f
  0x0000000002d92e1b: cmp    0x2f0(%rdi),%rcx
  0x0000000002d92e22: jne    0x0000000002d92e31
  0x0000000002d92e24: addq   $0x1,0x2f8(%rdi)
  0x0000000002d92e2c: jmpq   0x0000000002d92e9f
  0x0000000002d92e31: cmpq   $0x0,0x2e0(%rdi)
  0x0000000002d92e3c: jne    0x0000000002d92e55
  0x0000000002d92e3e: mov    %rcx,0x2e0(%rdi)
  0x0000000002d92e45: movq   $0x1,0x2e8(%rdi)
  0x0000000002d92e50: jmpq   0x0000000002d92e9f
  0x0000000002d92e55: cmpq   $0x0,0x2f0(%rdi)
  0x0000000002d92e60: jne    0x0000000002d92e79
  0x0000000002d92e62: mov    %rcx,0x2f0(%rdi)
  0x0000000002d92e69: movq   $0x1,0x2f8(%rdi)
  0x0000000002d92e74: jmpq   0x0000000002d92e9f
  0x0000000002d92e79: jmpq   0x0000000002d92e9f
  0x0000000002d92e7e: movabs $0x1967e688,%rdi   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92e88: subq   $0x1,0x2d8(%rdi)
  0x0000000002d92e90: jmpq   0x0000000002d92e9a
  0x0000000002d92e95: jmpq   0x0000000002d92e9f
  0x0000000002d92e9a: xor    %r8,%r8
  0x0000000002d92e9d: jmp    0x0000000002d92ea9
  0x0000000002d92e9f: movabs $0x1,%r8           ;*instanceof
                                                ; - java.util.HashMap::putVal@106 (line 637)

  0x0000000002d92ea9: cmp    $0x0,%r8d
  0x0000000002d92ead: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92eb7: movabs $0x308,%r9
  0x0000000002d92ec1: je     0x0000000002d92ed1
  0x0000000002d92ec7: movabs $0x318,%r9
  0x0000000002d92ed1: mov    (%r8,%r9,1),%rdi
  0x0000000002d92ed5: lea    0x1(%rdi),%rdi
  0x0000000002d92ed9: mov    %rdi,(%r8,%r9,1)
  0x0000000002d92edd: je     0x0000000002d93092  ;*ifeq
                                                ; - java.util.HashMap::putVal@109 (line 637)

  0x0000000002d92ee3: cmp    $0x0,%rsi
  0x0000000002d92ee7: jne    0x0000000002d92f03
  0x0000000002d92ee9: movabs $0x1967e688,%r9    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92ef3: orl    $0x100,0x320(%r9)
  0x0000000002d92efe: jmpq   0x0000000002d92fc4
  0x0000000002d92f03: movabs $0x7c0039850,%rdi  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x0000000002d92f0d: mov    0x8(%rsi),%r8d
  0x0000000002d92f11: shl    $0x3,%r8
  0x0000000002d92f15: cmp    %r8,%rdi
  0x0000000002d92f18: jne    0x0000000002d92fa8
  0x0000000002d92f1e: movabs $0x1967e688,%r9    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92f28: mov    0x8(%rsi),%edi
  0x0000000002d92f2b: shl    $0x3,%rdi
  0x0000000002d92f2f: cmp    0x330(%r9),%rdi
  0x0000000002d92f36: jne    0x0000000002d92f45
  0x0000000002d92f38: addq   $0x1,0x338(%r9)
  0x0000000002d92f40: jmpq   0x0000000002d92fc4
  0x0000000002d92f45: cmp    0x340(%r9),%rdi
  0x0000000002d92f4c: jne    0x0000000002d92f5b
  0x0000000002d92f4e: addq   $0x1,0x348(%r9)
  0x0000000002d92f56: jmpq   0x0000000002d92fc4
  0x0000000002d92f5b: cmpq   $0x0,0x330(%r9)
  0x0000000002d92f66: jne    0x0000000002d92f7f
  0x0000000002d92f68: mov    %rdi,0x330(%r9)
  0x0000000002d92f6f: movq   $0x1,0x338(%r9)
  0x0000000002d92f7a: jmpq   0x0000000002d92fc4
  0x0000000002d92f7f: cmpq   $0x0,0x340(%r9)
  0x0000000002d92f8a: jne    0x0000000002d92fa3
  0x0000000002d92f8c: mov    %rdi,0x340(%r9)
  0x0000000002d92f93: movq   $0x1,0x348(%r9)
  0x0000000002d92f9e: jmpq   0x0000000002d92fc4
  0x0000000002d92fa3: jmpq   0x0000000002d92fc4
  0x0000000002d92fa8: movabs $0x1967e688,%r9    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92fb2: subq   $0x1,0x328(%r9)
  0x0000000002d92fba: jmpq   0x0000000002d938f2
  0x0000000002d92fbf: jmpq   0x0000000002d92fc4
  0x0000000002d92fc4: mov    %rsi,%rdx          ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 638)

  0x0000000002d92fc7: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000000002d938fb
  0x0000000002d92fca: mov    %rdx,%r8
  0x0000000002d92fcd: movabs $0x1967e688,%r9    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d92fd7: mov    0x8(%r8),%r8d
  0x0000000002d92fdb: shl    $0x3,%r8
  0x0000000002d92fdf: cmp    0x360(%r9),%r8
  0x0000000002d92fe6: jne    0x0000000002d92ff5
  0x0000000002d92fe8: addq   $0x1,0x368(%r9)
  0x0000000002d92ff0: jmpq   0x0000000002d9305b
  0x0000000002d92ff5: cmp    0x370(%r9),%r8
  0x0000000002d92ffc: jne    0x0000000002d9300b
  0x0000000002d92ffe: addq   $0x1,0x378(%r9)
  0x0000000002d93006: jmpq   0x0000000002d9305b
  0x0000000002d9300b: cmpq   $0x0,0x360(%r9)
  0x0000000002d93016: jne    0x0000000002d9302f
  0x0000000002d93018: mov    %r8,0x360(%r9)
  0x0000000002d9301f: movq   $0x1,0x368(%r9)
  0x0000000002d9302a: jmpq   0x0000000002d9305b
  0x0000000002d9302f: cmpq   $0x0,0x370(%r9)
  0x0000000002d9303a: jne    0x0000000002d93053
  0x0000000002d9303c: mov    %r8,0x370(%r9)
  0x0000000002d93043: movq   $0x1,0x378(%r9)
  0x0000000002d9304e: jmpq   0x0000000002d9305b
  0x0000000002d93053: addq   $0x1,0x358(%r9)
  0x0000000002d9305b: mov    0x48(%rsp),%r8
  0x0000000002d93060: mov    0x68(%rsp),%r9
  0x0000000002d93065: mov    0x40(%rsp),%edi
  0x0000000002d93069: mov    0x50(%rsp),%rsi
  0x0000000002d9306e: mov    0x58(%rsp),%rcx    ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 638)

  0x0000000002d93073: nop
  0x0000000002d93074: nop
  0x0000000002d93075: nop
  0x0000000002d93076: nop
  0x0000000002d93077: callq  0x0000000002cb61a0  ; OopMap{[72]=Oop [88]=Oop off=2236}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 638)
                                                ;   {optimized virtual_call}
  0x0000000002d9307c: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d93086: incl   0x388(%r8)
  0x0000000002d9308d: jmpq   0x0000000002d9352e  ;*goto
                                                ; - java.util.HashMap::putVal@128 (line 638)

  0x0000000002d93092: mov    $0x0,%edi          ;*aload
                                                ; - java.util.HashMap::putVal@134 (line 641)

  0x0000000002d93097: nop
  0x0000000002d93098: mov    %edi,0x78(%rsp)
  0x0000000002d9309c: mov    0x50(%rsp),%r9
  0x0000000002d930a1: mov    0x40(%rsp),%r8d
  0x0000000002d930a6: mov    0x18(%rsi),%ebx    ; implicit exception: dispatches to 0x0000000002d93900
  0x0000000002d930a9: shl    $0x3,%rbx          ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 641)

  0x0000000002d930ad: mov    %rbx,0x80(%rsp)
  0x0000000002d930b5: cmp    $0x0,%rbx
  0x0000000002d930b9: movabs $0x1967e688,%rdx   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d930c3: movabs $0x3a0,%rax
  0x0000000002d930cd: jne    0x0000000002d930dd
  0x0000000002d930d3: movabs $0x3b0,%rax
  0x0000000002d930dd: mov    (%rdx,%rax,1),%rcx
  0x0000000002d930e1: lea    0x1(%rcx),%rcx
  0x0000000002d930e5: mov    %rcx,(%rdx,%rax,1)
  0x0000000002d930e9: je     0x0000000002d93319  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@142 (line 641)

  0x0000000002d930ef: mov    0xc(%rbx),%edx     ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 647)
                                                ; implicit exception: dispatches to 0x0000000002d93905
  0x0000000002d930f2: cmp    %r8d,%edx
  0x0000000002d930f5: movabs $0x1967e688,%rdx   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d930ff: movabs $0x458,%rsi
  0x0000000002d93109: jne    0x0000000002d93119
  0x0000000002d9310f: movabs $0x468,%rsi
  0x0000000002d93119: mov    (%rdx,%rsi,1),%rax
  0x0000000002d9311d: lea    0x1(%rax),%rax
  0x0000000002d93121: mov    %rax,(%rdx,%rsi,1)
  0x0000000002d93125: jne    0x0000000002d9328d  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@181 (line 647)

  0x0000000002d9312b: mov    0x10(%rbx),%edx
  0x0000000002d9312e: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.HashMap::putVal@186 (line 647)

  0x0000000002d93132: cmp    %r9,%rdx
  0x0000000002d93135: movabs $0x1967e688,%rsi   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d9313f: movabs $0x478,%rax
  0x0000000002d93149: je     0x0000000002d93159
  0x0000000002d9314f: movabs $0x488,%rax
  0x0000000002d93159: mov    (%rsi,%rax,1),%rcx
  0x0000000002d9315d: lea    0x1(%rcx),%rcx
  0x0000000002d93161: mov    %rcx,(%rsi,%rax,1)
  0x0000000002d93165: je     0x0000000002d932ee  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@193 (line 647)

  0x0000000002d9316b: cmp    $0x0,%r9
  0x0000000002d9316f: movabs $0x1967e688,%rsi   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d93179: movabs $0x498,%rax
  0x0000000002d93183: je     0x0000000002d93193
  0x0000000002d93189: movabs $0x4a8,%rax
  0x0000000002d93193: mov    (%rsi,%rax,1),%rcx
  0x0000000002d93197: lea    0x1(%rcx),%rcx
  0x0000000002d9319b: mov    %rcx,(%rsi,%rax,1)
  0x0000000002d9319f: je     0x0000000002d9328d  ;*ifnull
                                                ; - java.util.HashMap::putVal@197 (line 647)

  0x0000000002d931a5: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000000002d9390a
  0x0000000002d931a8: mov    %r9,%rsi
  0x0000000002d931ab: movabs $0x1967e688,%rax   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d931b5: mov    0x8(%rsi),%esi
  0x0000000002d931b8: shl    $0x3,%rsi
  0x0000000002d931bc: cmp    0x4c0(%rax),%rsi
  0x0000000002d931c3: jne    0x0000000002d931d2
  0x0000000002d931c5: addq   $0x1,0x4c8(%rax)
  0x0000000002d931cd: jmpq   0x0000000002d93238
  0x0000000002d931d2: cmp    0x4d0(%rax),%rsi
  0x0000000002d931d9: jne    0x0000000002d931e8
  0x0000000002d931db: addq   $0x1,0x4d8(%rax)
  0x0000000002d931e3: jmpq   0x0000000002d93238
  0x0000000002d931e8: cmpq   $0x0,0x4c0(%rax)
  0x0000000002d931f3: jne    0x0000000002d9320c
  0x0000000002d931f5: mov    %rsi,0x4c0(%rax)
  0x0000000002d931fc: movq   $0x1,0x4c8(%rax)
  0x0000000002d93207: jmpq   0x0000000002d93238
  0x0000000002d9320c: cmpq   $0x0,0x4d0(%rax)
  0x0000000002d93217: jne    0x0000000002d93230
  0x0000000002d93219: mov    %rsi,0x4d0(%rax)
  0x0000000002d93220: movq   $0x1,0x4d8(%rax)
  0x0000000002d9322b: jmpq   0x0000000002d93238
  0x0000000002d93230: addq   $0x1,0x4b8(%rax)
  0x0000000002d93238: mov    %rdx,%r8
  0x0000000002d9323b: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 648)

  0x0000000002d9323e: nop
  0x0000000002d9323f: nop
  0x0000000002d93240: nop
  0x0000000002d93241: nop
  0x0000000002d93242: nop
  0x0000000002d93243: nop
  0x0000000002d93244: nop
  0x0000000002d93245: movabs $0xffffffffffffffff,%rax
  0x0000000002d9324f: callq  0x0000000002cb63e0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2708}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 648)
                                                ;   {virtual_call}
  0x0000000002d93254: cmp    $0x0,%eax
  0x0000000002d93257: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d93261: movabs $0x4e8,%r9
  0x0000000002d9326b: je     0x0000000002d9327b
  0x0000000002d93271: movabs $0x4f8,%r9
  0x0000000002d9327b: mov    (%r8,%r9,1),%rdi
  0x0000000002d9327f: lea    0x1(%rdi),%rdi
  0x0000000002d93283: mov    %rdi,(%r8,%r9,1)
  0x0000000002d93287: jne    0x0000000002d932fb  ;*ifeq
                                                ; - java.util.HashMap::putVal@206 (line 648)

  0x0000000002d9328d: mov    0x78(%rsp),%edi
  0x0000000002d93291: inc    %edi
  0x0000000002d93293: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d9329d: mov    0xe0(%r8),%r9d
  0x0000000002d932a4: add    $0x8,%r9d
  0x0000000002d932a8: mov    %r9d,0xe0(%r8)
  0x0000000002d932af: movabs $0x19459918,%r8    ;   {metadata({method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d932b9: and    $0xfff8,%r9d
  0x0000000002d932c0: cmp    $0x0,%r9d
  0x0000000002d932c4: je     0x0000000002d9390f  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2826}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 640)

  0x0000000002d932ca: test   %eax,-0x4031d0(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d932d0: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d932da: incl   0x520(%r8)
  0x0000000002d932e1: mov    0x80(%rsp),%rsi
  0x0000000002d932e9: jmpq   0x0000000002d93098  ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 640)

  0x0000000002d932ee: mov    0x80(%rsp),%rax
  0x0000000002d932f6: jmpq   0x0000000002d9352e  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 653)

  0x0000000002d932fb: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d93305: incl   0x508(%r8)
  0x0000000002d9330c: mov    0x80(%rsp),%rax
  0x0000000002d93314: jmpq   0x0000000002d9352e  ;*goto
                                                ; - java.util.HashMap::putVal@209 (line 649)

  0x0000000002d93319: mov    %rsi,0x88(%rsp)
  0x0000000002d93321: mov    0x48(%rsp),%rdx
  0x0000000002d93326: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d93330: mov    0x8(%rdx),%edx
  0x0000000002d93333: shl    $0x3,%rdx
  0x0000000002d93337: cmp    0x3c8(%r8),%rdx
  0x0000000002d9333e: jne    0x0000000002d9334d
  0x0000000002d93340: addq   $0x1,0x3d0(%r8)
  0x0000000002d93348: jmpq   0x0000000002d933b3
  0x0000000002d9334d: cmp    0x3d8(%r8),%rdx
  0x0000000002d93354: jne    0x0000000002d93363
  0x0000000002d93356: addq   $0x1,0x3e0(%r8)
  0x0000000002d9335e: jmpq   0x0000000002d933b3
  0x0000000002d93363: cmpq   $0x0,0x3c8(%r8)
  0x0000000002d9336e: jne    0x0000000002d93387
  0x0000000002d93370: mov    %rdx,0x3c8(%r8)
  0x0000000002d93377: movq   $0x1,0x3d0(%r8)
  0x0000000002d93382: jmpq   0x0000000002d933b3
  0x0000000002d93387: cmpq   $0x0,0x3d8(%r8)
  0x0000000002d93392: jne    0x0000000002d933ab
  0x0000000002d93394: mov    %rdx,0x3d8(%r8)
  0x0000000002d9339b: movq   $0x1,0x3e0(%r8)
  0x0000000002d933a6: jmpq   0x0000000002d933b3
  0x0000000002d933ab: addq   $0x1,0x3c0(%r8)
  0x0000000002d933b3: mov    0x40(%rsp),%r8d
  0x0000000002d933b8: mov    0x58(%rsp),%rdi
  0x0000000002d933bd: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x0000000002d933c7: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 642)

  0x0000000002d933cc: nop
  0x0000000002d933cd: movabs $0xffffffffffffffff,%rax
  0x0000000002d933d7: callq  0x0000000002cb63e0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop off=3100}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 642)
                                                ;   {virtual_call}
  0x0000000002d933dc: mov    0x88(%rsp),%rsi
  0x0000000002d933e4: mov    %rax,%r10
  0x0000000002d933e7: shr    $0x3,%r10
  0x0000000002d933eb: mov    %r10d,0x18(%rsi)
  0x0000000002d933ef: shr    $0x9,%rsi
  0x0000000002d933f3: movabs $0xe824000,%r8
  0x0000000002d933fd: movb   $0x0,(%rsi,%r8,1)  ;*putfield next
                                                ; - java.util.HashMap::putVal@155 (line 642)

  0x0000000002d93402: mov    0x78(%rsp),%edi
  0x0000000002d93406: cmp    $0x7,%edi
  0x0000000002d93409: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d93413: movabs $0x3f0,%r9
  0x0000000002d9341d: jl     0x0000000002d9342d
  0x0000000002d93423: movabs $0x400,%r9
  0x0000000002d9342d: mov    (%r8,%r9,1),%rdx
  0x0000000002d93431: lea    0x1(%rdx),%rdx
  0x0000000002d93435: mov    %rdx,(%r8,%r9,1)
  0x0000000002d93439: jge    0x0000000002d9344c  ;*if_icmplt
                                                ; - java.util.HashMap::putVal@162 (line 643)

  0x0000000002d9343f: mov    0x80(%rsp),%rax
  0x0000000002d93447: jmpq   0x0000000002d9352e  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 653)

  0x0000000002d9344c: mov    0x68(%rsp),%rbx
  0x0000000002d93451: mov    0x40(%rsp),%r9d
  0x0000000002d93456: mov    0x48(%rsp),%rdx
  0x0000000002d9345b: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d93465: mov    0x8(%rdx),%edx
  0x0000000002d93468: shl    $0x3,%rdx
  0x0000000002d9346c: cmp    0x418(%r8),%rdx
  0x0000000002d93473: jne    0x0000000002d93482
  0x0000000002d93475: addq   $0x1,0x420(%r8)
  0x0000000002d9347d: jmpq   0x0000000002d934e8
  0x0000000002d93482: cmp    0x428(%r8),%rdx
  0x0000000002d93489: jne    0x0000000002d93498
  0x0000000002d9348b: addq   $0x1,0x430(%r8)
  0x0000000002d93493: jmpq   0x0000000002d934e8
  0x0000000002d93498: cmpq   $0x0,0x418(%r8)
  0x0000000002d934a3: jne    0x0000000002d934bc
  0x0000000002d934a5: mov    %rdx,0x418(%r8)
  0x0000000002d934ac: movq   $0x1,0x420(%r8)
  0x0000000002d934b7: jmpq   0x0000000002d934e8
  0x0000000002d934bc: cmpq   $0x0,0x428(%r8)
  0x0000000002d934c7: jne    0x0000000002d934e0
  0x0000000002d934c9: mov    %rdx,0x428(%r8)
  0x0000000002d934d0: movq   $0x1,0x430(%r8)
  0x0000000002d934db: jmpq   0x0000000002d934e8
  0x0000000002d934e0: addq   $0x1,0x410(%r8)
  0x0000000002d934e8: mov    %rbx,%r8
  0x0000000002d934eb: mov    0x48(%rsp),%rdx    ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 644)

  0x0000000002d934f0: nop
  0x0000000002d934f1: nop
  0x0000000002d934f2: nop
  0x0000000002d934f3: nop
  0x0000000002d934f4: nop
  0x0000000002d934f5: nop
  0x0000000002d934f6: nop
  0x0000000002d934f7: callq  0x0000000002cb61a0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop off=3388}
                                                ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 644)
                                                ;   {optimized virtual_call}
  0x0000000002d934fc: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d93506: incl   0x440(%r8)
  0x0000000002d9350d: mov    0x80(%rsp),%rax
  0x0000000002d93515: jmpq   0x0000000002d9352e  ;*goto
                                                ; - java.util.HashMap::putVal@172 (line 644)

  0x0000000002d9351a: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d93524: incl   0x2c0(%r8)
  0x0000000002d9352b: mov    %rsi,%rax          ;*goto
                                                ; - java.util.HashMap::putVal@101 (line 636)

  0x0000000002d9352e: cmp    $0x0,%rax
  0x0000000002d93532: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d9353c: movabs $0x538,%rdx
  0x0000000002d93546: je     0x0000000002d93556
  0x0000000002d9354c: movabs $0x548,%rdx
  0x0000000002d93556: mov    (%r8,%rdx,1),%rsi
  0x0000000002d9355a: lea    0x1(%rsi),%rsi
  0x0000000002d9355e: mov    %rsi,(%r8,%rdx,1)
  0x0000000002d93562: jne    0x0000000002d935c8  ;*ifnull
                                                ; - java.util.HashMap::putVal@224 (line 653)

  0x0000000002d93568: mov    0x48(%rsp),%rdx
  0x0000000002d9356d: mov    0x18(%rdx),%r8d    ;*getfield modCount
                                                ; - java.util.HashMap::putVal@261 (line 661)

  0x0000000002d93571: inc    %r8d
  0x0000000002d93574: mov    %r8d,0x18(%rdx)    ;*putfield modCount
                                                ; - java.util.HashMap::putVal@266 (line 661)

  0x0000000002d93578: mov    0x14(%rdx),%r8d    ;*getfield size
                                                ; - java.util.HashMap::putVal@271 (line 662)

  0x0000000002d9357c: inc    %r8d
  0x0000000002d9357f: mov    %r8d,0x14(%rdx)    ;*putfield size
                                                ; - java.util.HashMap::putVal@277 (line 662)

  0x0000000002d93583: mov    0x1c(%rdx),%esi    ;*getfield threshold
                                                ; - java.util.HashMap::putVal@281 (line 662)

  0x0000000002d93586: cmp    %esi,%r8d
  0x0000000002d93589: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d93593: movabs $0x5c8,%rsi
  0x0000000002d9359d: jle    0x0000000002d935ad
  0x0000000002d935a3: movabs $0x5d8,%rsi
  0x0000000002d935ad: mov    (%r8,%rsi,1),%rdi
  0x0000000002d935b1: lea    0x1(%rdi),%rdi
  0x0000000002d935b5: mov    %rdi,(%r8,%rsi,1)
  0x0000000002d935b9: jg     0x0000000002d93733  ;*if_icmple
                                                ; - java.util.HashMap::putVal@284 (line 662)

  0x0000000002d935bf: mov    0x60(%rsp),%ecx
  0x0000000002d935c3: jmpq   0x0000000002d937dd  ;*aload_0
                                                ; - java.util.HashMap::putVal@292 (line 664)

  0x0000000002d935c8: mov    0x44(%rsp),%esi
  0x0000000002d935cc: mov    0x48(%rsp),%rdx
  0x0000000002d935d1: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x0000000002d93926
  0x0000000002d935d4: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 654)

  0x0000000002d935d8: cmp    $0x0,%esi
  0x0000000002d935db: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d935e5: movabs $0x558,%rsi
  0x0000000002d935ef: je     0x0000000002d935ff
  0x0000000002d935f5: movabs $0x568,%rsi
  0x0000000002d935ff: mov    (%r8,%rsi,1),%rbx
  0x0000000002d93603: lea    0x1(%rbx),%rbx
  0x0000000002d93607: mov    %rbx,(%r8,%rsi,1)
  0x0000000002d9360b: je     0x0000000002d9364b  ;*ifeq
                                                ; - java.util.HashMap::putVal@236 (line 655)

  0x0000000002d93611: cmp    $0x0,%rdi
  0x0000000002d93615: movabs $0x1967e688,%r8    ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d9361f: movabs $0x578,%rsi
  0x0000000002d93629: jne    0x0000000002d93639
  0x0000000002d9362f: movabs $0x588,%rsi
  0x0000000002d93639: mov    (%r8,%rsi,1),%rbx
  0x0000000002d9363d: lea    0x1(%rbx),%rbx
  0x0000000002d93641: mov    %rbx,(%r8,%rsi,1)
  0x0000000002d93645: jne    0x0000000002d93671  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@241 (line 655)

  0x0000000002d9364b: mov    0x58(%rsp),%r8
  0x0000000002d93650: mov    %r8,%r10
  0x0000000002d93653: shr    $0x3,%r10
  0x0000000002d93657: mov    %r10d,0x14(%rax)
  0x0000000002d9365b: mov    %rax,%r8
  0x0000000002d9365e: shr    $0x9,%r8
  0x0000000002d93662: movabs $0xe824000,%rsi
  0x0000000002d9366c: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.util.HashMap::putVal@247 (line 656)

  0x0000000002d93671: mov    %rdi,0x90(%rsp)
  0x0000000002d93679: mov    %rdx,%r8
  0x0000000002d9367c: movabs $0x1967e688,%rsi   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d93686: mov    0x8(%r8),%r8d
  0x0000000002d9368a: shl    $0x3,%r8
  0x0000000002d9368e: cmp    0x5a0(%rsi),%r8
  0x0000000002d93695: jne    0x0000000002d936a4
  0x0000000002d93697: addq   $0x1,0x5a8(%rsi)
  0x0000000002d9369f: jmpq   0x0000000002d9370a
  0x0000000002d936a4: cmp    0x5b0(%rsi),%r8
  0x0000000002d936ab: jne    0x0000000002d936ba
  0x0000000002d936ad: addq   $0x1,0x5b8(%rsi)
  0x0000000002d936b5: jmpq   0x0000000002d9370a
  0x0000000002d936ba: cmpq   $0x0,0x5a0(%rsi)
  0x0000000002d936c5: jne    0x0000000002d936de
  0x0000000002d936c7: mov    %r8,0x5a0(%rsi)
  0x0000000002d936ce: movq   $0x1,0x5a8(%rsi)
  0x0000000002d936d9: jmpq   0x0000000002d9370a
  0x0000000002d936de: cmpq   $0x0,0x5b0(%rsi)
  0x0000000002d936e9: jne    0x0000000002d93702
  0x0000000002d936eb: mov    %r8,0x5b0(%rsi)
  0x0000000002d936f2: movq   $0x1,0x5b8(%rsi)
  0x0000000002d936fd: jmpq   0x0000000002d9370a
  0x0000000002d93702: addq   $0x1,0x598(%rsi)
  0x0000000002d9370a: mov    %rax,%r8           ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 657)

  0x0000000002d9370d: movabs $0xffffffffffffffff,%rax
  0x0000000002d93717: callq  0x0000000002cb63e0  ; OopMap{[144]=Oop off=3932}
                                                ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 657)
                                                ;   {virtual_call}
  0x0000000002d9371c: mov    0x90(%rsp),%rax
  0x0000000002d93724: add    $0xa0,%rsp
  0x0000000002d9372b: pop    %rbp
  0x0000000002d9372c: test   %eax,-0x403632(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d93732: retq                      ;*areturn
                                                ; - java.util.HashMap::putVal@258 (line 658)

  0x0000000002d93733: mov    %rdx,%rsi
  0x0000000002d93736: movabs $0x1967e688,%rdi   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d93740: mov    0x8(%rsi),%esi
  0x0000000002d93743: shl    $0x3,%rsi
  0x0000000002d93747: cmp    0x5f0(%rdi),%rsi
  0x0000000002d9374e: jne    0x0000000002d9375d
  0x0000000002d93750: addq   $0x1,0x5f8(%rdi)
  0x0000000002d93758: jmpq   0x0000000002d937c3
  0x0000000002d9375d: cmp    0x600(%rdi),%rsi
  0x0000000002d93764: jne    0x0000000002d93773
  0x0000000002d93766: addq   $0x1,0x608(%rdi)
  0x0000000002d9376e: jmpq   0x0000000002d937c3
  0x0000000002d93773: cmpq   $0x0,0x5f0(%rdi)
  0x0000000002d9377e: jne    0x0000000002d93797
  0x0000000002d93780: mov    %rsi,0x5f0(%rdi)
  0x0000000002d93787: movq   $0x1,0x5f8(%rdi)
  0x0000000002d93792: jmpq   0x0000000002d937c3
  0x0000000002d93797: cmpq   $0x0,0x600(%rdi)
  0x0000000002d937a2: jne    0x0000000002d937bb
  0x0000000002d937a4: mov    %rsi,0x600(%rdi)
  0x0000000002d937ab: movq   $0x1,0x608(%rdi)
  0x0000000002d937b6: jmpq   0x0000000002d937c3
  0x0000000002d937bb: addq   $0x1,0x5e8(%rdi)
  0x0000000002d937c3: mov    %rdx,%rsi
  0x0000000002d937c6: mov    %rsi,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 663)

  0x0000000002d937c9: nop
  0x0000000002d937ca: nop
  0x0000000002d937cb: nop
  0x0000000002d937cc: nop
  0x0000000002d937cd: nop
  0x0000000002d937ce: nop
  0x0000000002d937cf: callq  0x0000000002cb61a0  ; OopMap{[72]=Oop off=4116}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 663)
                                                ;   {optimized virtual_call}
  0x0000000002d937d4: mov    0x60(%rsp),%ecx
  0x0000000002d937d8: mov    0x48(%rsp),%rdx
  0x0000000002d937dd: mov    %rdx,%r8
  0x0000000002d937e0: movabs $0x1967e688,%rsi   ;   {metadata(method data for {method} {0x0000000019459920} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d937ea: mov    0x8(%r8),%r8d
  0x0000000002d937ee: shl    $0x3,%r8
  0x0000000002d937f2: cmp    0x620(%rsi),%r8
  0x0000000002d937f9: jne    0x0000000002d93808
  0x0000000002d937fb: addq   $0x1,0x628(%rsi)
  0x0000000002d93803: jmpq   0x0000000002d9386e
  0x0000000002d93808: cmp    0x630(%rsi),%r8
  0x0000000002d9380f: jne    0x0000000002d9381e
  0x0000000002d93811: addq   $0x1,0x638(%rsi)
  0x0000000002d93819: jmpq   0x0000000002d9386e
  0x0000000002d9381e: cmpq   $0x0,0x620(%rsi)
  0x0000000002d93829: jne    0x0000000002d93842
  0x0000000002d9382b: mov    %r8,0x620(%rsi)
  0x0000000002d93832: movq   $0x1,0x628(%rsi)
  0x0000000002d9383d: jmpq   0x0000000002d9386e
  0x0000000002d93842: cmpq   $0x0,0x630(%rsi)
  0x0000000002d9384d: jne    0x0000000002d93866
  0x0000000002d9384f: mov    %r8,0x630(%rsi)
  0x0000000002d93856: movq   $0x1,0x638(%rsi)
  0x0000000002d93861: jmpq   0x0000000002d9386e
  0x0000000002d93866: addq   $0x1,0x618(%rsi)
  0x0000000002d9386e: mov    %rcx,%r8           ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 664)

  0x0000000002d93871: nop
  0x0000000002d93872: nop
  0x0000000002d93873: nop
  0x0000000002d93874: nop
  0x0000000002d93875: movabs $0xffffffffffffffff,%rax
  0x0000000002d9387f: callq  0x0000000002cb63e0  ; OopMap{off=4292}
                                                ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 664)
                                                ;   {virtual_call}
  0x0000000002d93884: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002d9388e: add    $0xa0,%rsp
  0x0000000002d93895: pop    %rbp
  0x0000000002d93896: test   %eax,-0x40379c(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9389c: retq   
  0x0000000002d9389d: mov    %rbx,0x8(%rsp)
  0x0000000002d938a2: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d938aa: callq  0x0000000002d710e0  ; OopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop off=4335}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 628)
                                                ;   {runtime_call}
  0x0000000002d938af: jmpq   0x0000000002d92830
  0x0000000002d938b4: callq  0x0000000002cdff40  ; OopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop rbx=Oop off=4345}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 628)
                                                ;   {runtime_call}
  0x0000000002d938b9: callq  0x0000000002cdff40  ; OopMap{[88]=Oop [80]=Oop [72]=Oop r8=Oop off=4350}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 629)
                                                ;   {runtime_call}
  0x0000000002d938be: callq  0x0000000002cdff40  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4355}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)
                                                ;   {runtime_call}
  0x0000000002d938c3: callq  0x0000000002cdff40  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4360}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)
                                                ;   {runtime_call}
  0x0000000002d938c8: mov    %rax,(%rsp)
  0x0000000002d938cc: callq  0x0000000002ce0600  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4369}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)
                                                ;   {runtime_call}
  0x0000000002d938d1: mov    %r8,(%rsp)
  0x0000000002d938d5: callq  0x0000000002ce0600  ; OopMap{[72]=Oop rax=Oop rbx=Oop off=4378}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)
                                                ;   {runtime_call}
  0x0000000002d938da: callq  0x0000000002cdff40  ; OopMap{[72]=Oop rax=Oop off=4383}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)
                                                ;   {runtime_call}
  0x0000000002d938df: mov    %rax,(%rsp)
  0x0000000002d938e3: callq  0x0000000002d6d800  ; OopMap{[72]=Oop rax=Oop off=4392}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)
                                                ;   {runtime_call}
  0x0000000002d938e8: callq  0x0000000002cdff40  ; OopMap{[72]=Oop rsi=Oop [88]=Oop [80]=Oop rbx=Oop off=4397}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 634)
                                                ;   {runtime_call}
  0x0000000002d938ed: callq  0x0000000002cdff40  ; OopMap{[72]=Oop [88]=Oop r9=Oop [80]=Oop [104]=Oop [112]=Oop r8=Oop off=4402}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 635)
                                                ;   {runtime_call}
  0x0000000002d938f2: mov    %rsi,(%rsp)
  0x0000000002d938f6: callq  0x0000000002d6ef80  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop off=4411}
                                                ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 638)
                                                ;   {runtime_call}
  0x0000000002d938fb: callq  0x0000000002cdff40  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rdx=Oop off=4416}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 638)
                                                ;   {runtime_call}
  0x0000000002d93900: callq  0x0000000002cdff40  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rsi=Oop r9=Oop [80]=Oop off=4421}
                                                ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 641)
                                                ;   {runtime_call}
  0x0000000002d93905: callq  0x0000000002cdff40  ; OopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop rbx=Oop [128]=Oop off=4426}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 647)
                                                ;   {runtime_call}
  0x0000000002d9390a: callq  0x0000000002cdff40  ; OopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop [128]=Oop rdx=Oop off=4431}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 648)
                                                ;   {runtime_call}
  0x0000000002d9390f: mov    %r8,0x8(%rsp)
  0x0000000002d93914: movq   $0xdb,(%rsp)
  0x0000000002d9391c: callq  0x0000000002d710e0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=4449}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 640)
                                                ;   {runtime_call}
  0x0000000002d93921: jmpq   0x0000000002d932ca
  0x0000000002d93926: callq  0x0000000002cdff40  ; OopMap{rdx=Oop [72]=Oop [88]=Oop rax=Oop off=4459}
                                                ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 654)
                                                ;   {runtime_call}
  0x0000000002d9392b: nop
  0x0000000002d9392c: nop
  0x0000000002d9392d: mov    0x2a8(%r15),%rax
  0x0000000002d93934: movabs $0x0,%r10
  0x0000000002d9393e: mov    %r10,0x2a8(%r15)
  0x0000000002d93945: movabs $0x0,%r10
  0x0000000002d9394f: mov    %r10,0x2b0(%r15)
  0x0000000002d93956: add    $0xa0,%rsp
  0x0000000002d9395d: pop    %rbp
  0x0000000002d9395e: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d93963: hlt    
  0x0000000002d93964: hlt    
  0x0000000002d93965: hlt    
  0x0000000002d93966: hlt    
  0x0000000002d93967: hlt    
  0x0000000002d93968: hlt    
  0x0000000002d93969: hlt    
  0x0000000002d9396a: hlt    
  0x0000000002d9396b: hlt    
  0x0000000002d9396c: hlt    
  0x0000000002d9396d: hlt    
  0x0000000002d9396e: hlt    
  0x0000000002d9396f: hlt    
  0x0000000002d93970: hlt    
  0x0000000002d93971: hlt    
  0x0000000002d93972: hlt    
  0x0000000002d93973: hlt    
  0x0000000002d93974: hlt    
  0x0000000002d93975: hlt    
  0x0000000002d93976: hlt    
  0x0000000002d93977: hlt    
  0x0000000002d93978: hlt    
  0x0000000002d93979: hlt    
  0x0000000002d9397a: hlt    
  0x0000000002d9397b: hlt    
  0x0000000002d9397c: hlt    
  0x0000000002d9397d: hlt    
  0x0000000002d9397e: hlt    
  0x0000000002d9397f: hlt    
[Stub Code]
  0x0000000002d93980: nop                       ;   {no_reloc}
  0x0000000002d93981: nop
  0x0000000002d93982: nop
  0x0000000002d93983: nop
  0x0000000002d93984: nop
  0x0000000002d93985: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9398f: jmpq   0x0000000002d9398f  ;   {runtime_call}
  0x0000000002d93994: nop
  0x0000000002d93995: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9399f: jmpq   0x0000000002d9399f  ;   {runtime_call}
  0x0000000002d939a4: nop
  0x0000000002d939a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d939af: jmpq   0x0000000002d939af  ;   {runtime_call}
  0x0000000002d939b4: nop
  0x0000000002d939b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d939bf: jmpq   0x0000000002d939bf  ;   {runtime_call}
  0x0000000002d939c4: nop
  0x0000000002d939c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d939cf: jmpq   0x0000000002d939cf  ;   {runtime_call}
  0x0000000002d939d4: nop
  0x0000000002d939d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d939df: jmpq   0x0000000002d939df  ;   {runtime_call}
  0x0000000002d939e4: nop
  0x0000000002d939e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d939ef: jmpq   0x0000000002d939ef  ;   {runtime_call}
  0x0000000002d939f4: nop
  0x0000000002d939f5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d939ff: jmpq   0x0000000002d939ff  ;   {runtime_call}
  0x0000000002d93a04: nop
  0x0000000002d93a05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d93a0f: jmpq   0x0000000002d93a0f  ;   {runtime_call}
  0x0000000002d93a14: nop
  0x0000000002d93a15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d93a1f: jmpq   0x0000000002d93a1f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d93a24: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d93a29: mov    %rsp,-0x28(%rsp)
  0x0000000002d93a2e: sub    $0x80,%rsp
  0x0000000002d93a35: mov    %rax,0x78(%rsp)
  0x0000000002d93a3a: mov    %rcx,0x70(%rsp)
  0x0000000002d93a3f: mov    %rdx,0x68(%rsp)
  0x0000000002d93a44: mov    %rbx,0x60(%rsp)
  0x0000000002d93a49: mov    %rbp,0x50(%rsp)
  0x0000000002d93a4e: mov    %rsi,0x48(%rsp)
  0x0000000002d93a53: mov    %rdi,0x40(%rsp)
  0x0000000002d93a58: mov    %r8,0x38(%rsp)
  0x0000000002d93a5d: mov    %r9,0x30(%rsp)
  0x0000000002d93a62: mov    %r10,0x28(%rsp)
  0x0000000002d93a67: mov    %r11,0x20(%rsp)
  0x0000000002d93a6c: mov    %r12,0x18(%rsp)
  0x0000000002d93a71: mov    %r13,0x10(%rsp)
  0x0000000002d93a76: mov    %r14,0x8(%rsp)
  0x0000000002d93a7b: mov    %r15,(%rsp)
  0x0000000002d93a7f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d93a89: movabs $0x2d93a29,%rdx    ;   {internal_word}
  0x0000000002d93a93: mov    %rsp,%r8
  0x0000000002d93a96: and    $0xfffffffffffffff0,%rsp
  0x0000000002d93a9a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d93a9f: hlt    
[Deopt Handler Code]
  0x0000000002d93aa0: movabs $0x2d93aa0,%r10    ;   {section_word}
  0x0000000002d93aaa: push   %r10
  0x0000000002d93aac: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d93ab1: hlt    
  0x0000000002d93ab2: hlt    
  0x0000000002d93ab3: hlt    
  0x0000000002d93ab4: hlt    
  0x0000000002d93ab5: hlt    
  0x0000000002d93ab6: hlt    
  0x0000000002d93ab7: hlt    
<nmethod compile_id='51' compiler='C1' level='3' entry='0x0000000002d927c0' size='8144' address='0x0000000002d92550' relocation_offset='288' insts_offset='624' stub_offset='5168' scopes_data_offset='5488' scopes_pcs_offset='6496' dependencies_offset='8032' nul_chk_table_offset='8040' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='389' backedge_count='41' iicount='389' stamp='7.074'/>
<writer thread='21476'/>
<task_queued compile_id='53' method='java/lang/Character toLowerCase (C)C' bytes='6' count='512' iicount='512' level='3' stamp='7.074' comment='tiered' hot_count='512'/>
<task_queued compile_id='54' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='128' backedge_count='2662' iicount='128' level='3' stamp='7.075' comment='tiered' hot_count='128'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d95210:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019375058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002d95380: mov    0x8(%rdx),%r10d
  0x0000000002d95384: shl    $0x3,%r10
  0x0000000002d95388: cmp    %rax,%r10
  0x0000000002d9538b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d95391: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d9539c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d953a0: mov    %eax,-0x6000(%rsp)
  0x0000000002d953a7: push   %rbp
  0x0000000002d953a8: sub    $0x30,%rsp
  0x0000000002d953ac: movabs $0x19634ac0,%r9    ;   {metadata(method data for {method} {0x0000000019375058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d953b6: mov    0xdc(%r9),%esi
  0x0000000002d953bd: add    $0x8,%esi
  0x0000000002d953c0: mov    %esi,0xdc(%r9)
  0x0000000002d953c7: movabs $0x19375050,%r9    ;   {metadata({method} {0x0000000019375058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d953d1: and    $0x1ff8,%esi
  0x0000000002d953d7: cmp    $0x0,%esi
  0x0000000002d953da: je     0x0000000002d95488  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x0000000002d953e0: mov    %rdx,%r9
  0x0000000002d953e3: movabs $0x19634ac0,%rsi   ;   {metadata(method data for {method} {0x0000000019375058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d953ed: mov    0x8(%r9),%r9d
  0x0000000002d953f1: shl    $0x3,%r9
  0x0000000002d953f5: cmp    0x110(%rsi),%r9
  0x0000000002d953fc: jne    0x0000000002d9540b
  0x0000000002d953fe: addq   $0x1,0x118(%rsi)
  0x0000000002d95406: jmpq   0x0000000002d95471
  0x0000000002d9540b: cmp    0x120(%rsi),%r9
  0x0000000002d95412: jne    0x0000000002d95421
  0x0000000002d95414: addq   $0x1,0x128(%rsi)
  0x0000000002d9541c: jmpq   0x0000000002d95471
  0x0000000002d95421: cmpq   $0x0,0x110(%rsi)
  0x0000000002d9542c: jne    0x0000000002d95445
  0x0000000002d9542e: mov    %r9,0x110(%rsi)
  0x0000000002d95435: movq   $0x1,0x118(%rsi)
  0x0000000002d95440: jmpq   0x0000000002d95471
  0x0000000002d95445: cmpq   $0x0,0x120(%rsi)
  0x0000000002d95450: jne    0x0000000002d95469
  0x0000000002d95452: mov    %r9,0x120(%rsi)
  0x0000000002d95459: movq   $0x1,0x128(%rsi)
  0x0000000002d95464: jmpq   0x0000000002d95471
  0x0000000002d95469: addq   $0x1,0x108(%rsi)
  0x0000000002d95471: mov    $0x0,%r9d          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x0000000002d95477: callq  0x0000000002cb61a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x0000000002d9547c: add    $0x30,%rsp
  0x0000000002d95480: pop    %rbp
  0x0000000002d95481: test   %eax,-0x405387(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d95487: retq   
  0x0000000002d95488: mov    %r9,0x8(%rsp)
  0x0000000002d9548d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d95495: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x0000000002d9549a: jmpq   0x0000000002d953e0
  0x0000000002d9549f: nop
  0x0000000002d954a0: nop
  0x0000000002d954a1: mov    0x2a8(%r15),%rax
  0x0000000002d954a8: movabs $0x0,%r10
  0x0000000002d954b2: mov    %r10,0x2a8(%r15)
  0x0000000002d954b9: movabs $0x0,%r10
  0x0000000002d954c3: mov    %r10,0x2b0(%r15)
  0x0000000002d954ca: add    $0x30,%rsp
  0x0000000002d954ce: pop    %rbp
  0x0000000002d954cf: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d954d4: hlt    
  0x0000000002d954d5: hlt    
  0x0000000002d954d6: hlt    
  0x0000000002d954d7: hlt    
  0x0000000002d954d8: hlt    
  0x0000000002d954d9: hlt    
  0x0000000002d954da: hlt    
  0x0000000002d954db: hlt    
  0x0000000002d954dc: hlt    
  0x0000000002d954dd: hlt    
  0x0000000002d954de: hlt    
  0x0000000002d954df: hlt    
[Stub Code]
  0x0000000002d954e0: nop                       ;   {no_reloc}
  0x0000000002d954e1: nop
  0x0000000002d954e2: nop
  0x0000000002d954e3: nop
  0x0000000002d954e4: nop
  0x0000000002d954e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d954ef: jmpq   0x0000000002d954ef  ;   {runtime_call}
[Exception Handler]
  0x0000000002d954f4: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d954f9: mov    %rsp,-0x28(%rsp)
  0x0000000002d954fe: sub    $0x80,%rsp
  0x0000000002d95505: mov    %rax,0x78(%rsp)
  0x0000000002d9550a: mov    %rcx,0x70(%rsp)
  0x0000000002d9550f: mov    %rdx,0x68(%rsp)
  0x0000000002d95514: mov    %rbx,0x60(%rsp)
  0x0000000002d95519: mov    %rbp,0x50(%rsp)
  0x0000000002d9551e: mov    %rsi,0x48(%rsp)
  0x0000000002d95523: mov    %rdi,0x40(%rsp)
  0x0000000002d95528: mov    %r8,0x38(%rsp)
  0x0000000002d9552d: mov    %r9,0x30(%rsp)
  0x0000000002d95532: mov    %r10,0x28(%rsp)
  0x0000000002d95537: mov    %r11,0x20(%rsp)
  0x0000000002d9553c: mov    %r12,0x18(%rsp)
  0x0000000002d95541: mov    %r13,0x10(%rsp)
  0x0000000002d95546: mov    %r14,0x8(%rsp)
  0x0000000002d9554b: mov    %r15,(%rsp)
  0x0000000002d9554f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d95559: movabs $0x2d954f9,%rdx    ;   {internal_word}
  0x0000000002d95563: mov    %rsp,%r8
  0x0000000002d95566: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9556a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9556f: hlt    
[Deopt Handler Code]
  0x0000000002d95570: movabs $0x2d95570,%r10    ;   {section_word}
  0x0000000002d9557a: push   %r10
  0x0000000002d9557c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d95581: hlt    
  0x0000000002d95582: hlt    
  0x0000000002d95583: hlt    
  0x0000000002d95584: hlt    
  0x0000000002d95585: hlt    
  0x0000000002d95586: hlt    
  0x0000000002d95587: hlt    
<nmethod compile_id='49' compiler='C1' level='3' entry='0x0000000002d95380' size='1040' address='0x0000000002d95210' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='671' iicount='671' stamp='7.089'/>
<writer thread='21476'/>
<task_queued compile_id='55' method='java/lang/String lastIndexOf (II)I' bytes='52' count='157' backedge_count='6144' iicount='157' level='3' stamp='7.089' comment='tiered' hot_count='157'/>
<task_queued compile_id='56' method='java/lang/String hashCode ()I' bytes='55' count='1156' backedge_count='20480' iicount='1156' stamp='7.090' comment='tiered' hot_count='1156'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d95650:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;
  # this:     rdx:rdx   = &apos;java/io/BufferedReader&apos;
  # parm0:    r8        = boolean
  #           [sp+0xf0]  (sp of caller)
  0x0000000002d958e0: mov    0x8(%rdx),%r10d
  0x0000000002d958e4: shl    $0x3,%r10
  0x0000000002d958e8: cmp    %rax,%r10
  0x0000000002d958eb: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d958f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d958fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d95900: mov    %eax,-0x6000(%rsp)
  0x0000000002d95907: push   %rbp
  0x0000000002d95908: sub    $0xe0,%rsp
  0x0000000002d9590f: mov    %rdx,0x70(%rsp)
  0x0000000002d95914: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d9591e: mov    0xdc(%rax),%esi
  0x0000000002d95924: add    $0x8,%esi
  0x0000000002d95927: mov    %esi,0xdc(%rax)
  0x0000000002d9592d: movabs $0x19517d70,%rax   ;   {metadata({method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95937: and    $0x1ff8,%esi
  0x0000000002d9593d: cmp    $0x0,%esi
  0x0000000002d95940: je     0x0000000002d96c32  ;*aconst_null
                                                ; - java.io.BufferedReader::readLine@0 (line 313)

  0x0000000002d95946: mov    0xc(%rdx),%esi
  0x0000000002d95949: shl    $0x3,%rsi          ;*getfield lock
                                                ; - java.io.BufferedReader::readLine@3 (line 316)

  0x0000000002d9594d: mov    %rsi,0x88(%rsp)
  0x0000000002d95955: lea    0xb0(%rsp),%rdi
  0x0000000002d9595d: mov    %rsi,0x8(%rdi)
  0x0000000002d95961: mov    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002d96c49
  0x0000000002d95964: mov    %rax,%rbx
  0x0000000002d95967: and    $0x7,%rbx
  0x0000000002d9596b: cmp    $0x5,%rbx
  0x0000000002d9596f: jne    0x0000000002d959f6
  0x0000000002d95975: mov    0x8(%rsi),%ebx
  0x0000000002d95978: shl    $0x3,%rbx
  0x0000000002d9597c: mov    0xa8(%rbx),%rbx
  0x0000000002d95983: or     %r15,%rbx
  0x0000000002d95986: xor    %rax,%rbx
  0x0000000002d95989: and    $0xffffffffffffff87,%rbx
  0x0000000002d9598d: je     0x0000000002d95a1e
  0x0000000002d95993: test   $0x7,%rbx
  0x0000000002d9599a: jne    0x0000000002d959e3
  0x0000000002d9599c: test   $0x300,%rbx
  0x0000000002d959a3: jne    0x0000000002d959c2
  0x0000000002d959a5: and    $0x37f,%rax
  0x0000000002d959ac: mov    %rax,%rbx
  0x0000000002d959af: or     %r15,%rbx
  0x0000000002d959b2: lock cmpxchg %rbx,(%rsi)
  0x0000000002d959b7: jne    0x0000000002d96c4e
  0x0000000002d959bd: jmpq   0x0000000002d95a1e
  0x0000000002d959c2: mov    0x8(%rsi),%ebx
  0x0000000002d959c5: shl    $0x3,%rbx
  0x0000000002d959c9: mov    0xa8(%rbx),%rbx
  0x0000000002d959d0: or     %r15,%rbx
  0x0000000002d959d3: lock cmpxchg %rbx,(%rsi)
  0x0000000002d959d8: jne    0x0000000002d96c4e
  0x0000000002d959de: jmpq   0x0000000002d95a1e
  0x0000000002d959e3: mov    0x8(%rsi),%ebx
  0x0000000002d959e6: shl    $0x3,%rbx
  0x0000000002d959ea: mov    0xa8(%rbx),%rbx
  0x0000000002d959f1: lock cmpxchg %rbx,(%rsi)
  0x0000000002d959f6: mov    (%rsi),%rax
  0x0000000002d959f9: or     $0x1,%rax
  0x0000000002d959fd: mov    %rax,(%rdi)
  0x0000000002d95a00: lock cmpxchg %rdi,(%rsi)
  0x0000000002d95a05: je     0x0000000002d95a1e
  0x0000000002d95a0b: sub    %rsp,%rax
  0x0000000002d95a0e: and    $0xfffffffffffff007,%rax
  0x0000000002d95a15: mov    %rax,(%rdi)
  0x0000000002d95a18: jne    0x0000000002d96c4e  ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)

  0x0000000002d95a1e: mov    %rdx,%rdi
  0x0000000002d95a21: movabs $0x19682900,%rbx   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95a2b: addq   $0x1,0x108(%rbx)
  0x0000000002d95a33: movabs $0x19682dd8,%rdi   ;   {metadata(method data for {method} {0x0000000019517650} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95a3d: mov    0xdc(%rdi),%ebx
  0x0000000002d95a43: add    $0x8,%ebx
  0x0000000002d95a46: mov    %ebx,0xdc(%rdi)
  0x0000000002d95a4c: movabs $0x19517648,%rdi   ;   {metadata({method} {0x0000000019517650} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95a56: and    $0x7ffff8,%ebx
  0x0000000002d95a5c: cmp    $0x0,%ebx
  0x0000000002d95a5f: je     0x0000000002d96c61
  0x0000000002d95a65: mov    0x28(%rdx),%edi
  0x0000000002d95a68: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.BufferedReader::ensureOpen@1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002d95a6c: cmp    $0x0,%rdi
  0x0000000002d95a70: movabs $0x19682dd8,%rdi   ;   {metadata(method data for {method} {0x0000000019517650} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95a7a: movabs $0x108,%rbx
  0x0000000002d95a84: jne    0x0000000002d95a94
  0x0000000002d95a8a: movabs $0x118,%rbx
  0x0000000002d95a94: mov    (%rdi,%rbx,1),%rax
  0x0000000002d95a98: lea    0x1(%rax),%rax
  0x0000000002d95a9c: mov    %rax,(%rdi,%rbx,1)
  0x0000000002d95aa0: je     0x0000000002d96a33  ;*ifnonnull
                                                ; - java.io.BufferedReader::ensureOpen@4 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002d95aa6: cmp    $0x0,%r8d
  0x0000000002d95aaa: movabs $0x19682900,%rdi   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95ab4: movabs $0x118,%rbx
  0x0000000002d95abe: jne    0x0000000002d95ace
  0x0000000002d95ac4: movabs $0x128,%rbx
  0x0000000002d95ace: mov    (%rdi,%rbx,1),%rax
  0x0000000002d95ad2: lea    0x1(%rax),%rax
  0x0000000002d95ad6: mov    %rax,(%rdi,%rbx,1)
  0x0000000002d95ada: jne    0x0000000002d95b1d  ;*ifne
                                                ; - java.io.BufferedReader::readLine@15 (line 318)

  0x0000000002d95ae0: movsbl 0x24(%rdx),%edi    ;*getfield skipLF
                                                ; - java.io.BufferedReader::readLine@19 (line 318)

  0x0000000002d95ae4: cmp    $0x0,%edi
  0x0000000002d95ae7: movabs $0x19682900,%rdi   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95af1: movabs $0x138,%rbx
  0x0000000002d95afb: je     0x0000000002d95b0b
  0x0000000002d95b01: movabs $0x148,%rbx
  0x0000000002d95b0b: mov    (%rdi,%rbx,1),%rax
  0x0000000002d95b0f: lea    0x1(%rax),%rax
  0x0000000002d95b13: mov    %rax,(%rdi,%rbx,1)
  0x0000000002d95b17: je     0x0000000002d95b37  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@22 (line 318)

  0x0000000002d95b1d: movabs $0x19682900,%rdi   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95b27: incl   0x158(%rdi)
  0x0000000002d95b2d: mov    $0x1,%edi
  0x0000000002d95b32: jmpq   0x0000000002d95b3c  ;*goto
                                                ; - java.io.BufferedReader::readLine@26 (line 318)

  0x0000000002d95b37: mov    $0x0,%edi          ;*istore
                                                ; - java.io.BufferedReader::readLine@30 (line 318)

  0x0000000002d95b3c: movabs $0x0,%rbx          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@32 (line 323)
                                                ;   {oop(NULL)}
  0x0000000002d95b46: mov    %edi,0x78(%rsp)
  0x0000000002d95b4a: mov    %rbx,0x80(%rsp)
  0x0000000002d95b52: nopw   0x0(%rax,%rax,1)
  0x0000000002d95b58: mov    0x18(%rdx),%eax    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@33 (line 323)

  0x0000000002d95b5b: mov    0x14(%rdx),%ecx    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@37 (line 323)

  0x0000000002d95b5e: cmp    %ecx,%eax
  0x0000000002d95b60: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95b6a: movabs $0x170,%rcx
  0x0000000002d95b74: jl     0x0000000002d95b84
  0x0000000002d95b7a: movabs $0x180,%rcx
  0x0000000002d95b84: mov    (%rax,%rcx,1),%r8
  0x0000000002d95b88: lea    0x1(%r8),%r8
  0x0000000002d95b8c: mov    %r8,(%rax,%rcx,1)
  0x0000000002d95b90: jl     0x0000000002d95bc1  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@40 (line 323)

  0x0000000002d95b96: mov    %rdx,%rax
  0x0000000002d95b99: movabs $0x19682900,%rcx   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95ba3: addq   $0x1,0x190(%rcx)
  0x0000000002d95bab: mov    %rdx,%rax
  0x0000000002d95bae: mov    %rax,%rdx          ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)

  0x0000000002d95bb1: nop
  0x0000000002d95bb2: nop
  0x0000000002d95bb3: nop
  0x0000000002d95bb4: nop
  0x0000000002d95bb5: nop
  0x0000000002d95bb6: nop
  0x0000000002d95bb7: callq  0x0000000002cb61a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop off=732}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)
                                                ;   {optimized virtual_call}
  0x0000000002d95bbc: mov    0x70(%rsp),%rdx
  0x0000000002d95bc1: mov    0x18(%rdx),%esi    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@48 (line 325)

  0x0000000002d95bc4: mov    0x14(%rdx),%edi    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@52 (line 325)

  0x0000000002d95bc7: cmp    %edi,%esi
  0x0000000002d95bc9: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95bd3: movabs $0x1a0,%rcx
  0x0000000002d95bdd: jl     0x0000000002d95bed
  0x0000000002d95be3: movabs $0x1b0,%rcx
  0x0000000002d95bed: mov    (%rax,%rcx,1),%rbx
  0x0000000002d95bf1: lea    0x1(%rbx),%rbx
  0x0000000002d95bf5: mov    %rbx,(%rax,%rcx,1)
  0x0000000002d95bf9: jge    0x0000000002d966aa  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@55 (line 325)

  0x0000000002d95bff: mov    0x78(%rsp),%ebx
  0x0000000002d95c03: cmp    $0x0,%ebx
  0x0000000002d95c06: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95c10: movabs $0x260,%rcx
  0x0000000002d95c1a: je     0x0000000002d95c2a
  0x0000000002d95c20: movabs $0x270,%rcx
  0x0000000002d95c2a: mov    (%rax,%rcx,1),%rbx
  0x0000000002d95c2e: lea    0x1(%rbx),%rbx
  0x0000000002d95c32: mov    %rbx,(%rax,%rcx,1)
  0x0000000002d95c36: je     0x0000000002d95c92  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@90 (line 336)

  0x0000000002d95c3c: mov    0x2c(%rdx),%eax
  0x0000000002d95c3f: shl    $0x3,%rax          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@94 (line 336)

  0x0000000002d95c43: movslq %esi,%rcx
  0x0000000002d95c46: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000002d96c78
  0x0000000002d95c49: jae    0x0000000002d96c82
  0x0000000002d95c4f: movzwl 0x10(%rax,%rcx,2),%eax  ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)

  0x0000000002d95c54: cmp    $0xa,%eax
  0x0000000002d95c57: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95c61: movabs $0x280,%rcx
  0x0000000002d95c6b: jne    0x0000000002d95c7b
  0x0000000002d95c71: movabs $0x290,%rcx
  0x0000000002d95c7b: mov    (%rax,%rcx,1),%rbx
  0x0000000002d95c7f: lea    0x1(%rbx),%rbx
  0x0000000002d95c83: mov    %rbx,(%rax,%rcx,1)
  0x0000000002d95c87: jne    0x0000000002d95c92  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@104 (line 336)

  0x0000000002d95c8d: inc    %esi
  0x0000000002d95c8f: mov    %esi,0x18(%rdx)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@114 (line 337)

  0x0000000002d95c92: movb   $0x0,0x24(%rdx)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@119 (line 338)

  0x0000000002d95c96: mov    0x18(%rdx),%r9d    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@126 (line 342)

  0x0000000002d95c9a: mov    %r9,%r8
  0x0000000002d95c9d: mov    $0x0,%esi
  0x0000000002d95ca2: jmpq   0x0000000002d95d7e  ;*iload
                                                ; - java.io.BufferedReader::readLine@131 (line 342)

  0x0000000002d95ca7: nop
  0x0000000002d95ca8: mov    0x2c(%rdx),%esi
  0x0000000002d95cab: shl    $0x3,%rsi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@141 (line 343)

  0x0000000002d95caf: movslq %r8d,%rax
  0x0000000002d95cb2: cmp    0xc(%rsi),%r8d     ; implicit exception: dispatches to 0x0000000002d96c8b
  0x0000000002d95cb6: jae    0x0000000002d96c95
  0x0000000002d95cbc: movzwl 0x10(%rsi,%rax,2),%esi  ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)

  0x0000000002d95cc1: cmp    $0xa,%esi
  0x0000000002d95cc4: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95cce: movabs $0x2c0,%rcx
  0x0000000002d95cd8: je     0x0000000002d95ce8
  0x0000000002d95cde: movabs $0x2d0,%rcx
  0x0000000002d95ce8: mov    (%rax,%rcx,1),%rbx
  0x0000000002d95cec: lea    0x1(%rbx),%rbx
  0x0000000002d95cf0: mov    %rbx,(%rax,%rcx,1)
  0x0000000002d95cf4: je     0x0000000002d95dc1  ;*if_icmpeq
                                                ; - java.io.BufferedReader::readLine@153 (line 344)

  0x0000000002d95cfa: cmp    $0xd,%esi
  0x0000000002d95cfd: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95d07: movabs $0x2e0,%rcx
  0x0000000002d95d11: jne    0x0000000002d95d21
  0x0000000002d95d17: movabs $0x2f0,%rcx
  0x0000000002d95d21: mov    (%rax,%rcx,1),%rbx
  0x0000000002d95d25: lea    0x1(%rbx),%rbx
  0x0000000002d95d29: mov    %rbx,(%rax,%rcx,1)
  0x0000000002d95d2d: je     0x0000000002d95dc1  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@160 (line 344)

  0x0000000002d95d33: inc    %r8d
  0x0000000002d95d36: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95d40: mov    0xe0(%rax),%ecx
  0x0000000002d95d46: add    $0x8,%ecx
  0x0000000002d95d49: mov    %ecx,0xe0(%rax)
  0x0000000002d95d4f: movabs $0x19517d70,%rax   ;   {metadata({method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95d59: and    $0xfff8,%ecx
  0x0000000002d95d5f: cmp    $0x0,%ecx
  0x0000000002d95d62: je     0x0000000002d96c9e  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop [184]=Oop off=1160}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x0000000002d95d68: test   %eax,-0x405c6e(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d95d6e: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95d78: incl   0x318(%rax)        ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x0000000002d95d7e: cmp    %edi,%r8d
  0x0000000002d95d81: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95d8b: movabs $0x2a0,%rcx
  0x0000000002d95d95: jge    0x0000000002d95da5
  0x0000000002d95d9b: movabs $0x2b0,%rcx
  0x0000000002d95da5: mov    (%rax,%rcx,1),%rbx
  0x0000000002d95da9: lea    0x1(%rbx),%rbx
  0x0000000002d95dad: mov    %rbx,(%rax,%rcx,1)
  0x0000000002d95db1: jl     0x0000000002d95ca8  ;*if_icmpge
                                                ; - java.io.BufferedReader::readLine@137 (line 342)

  0x0000000002d95db7: mov    $0x0,%edi
  0x0000000002d95dbc: jmpq   0x0000000002d95dd6  ;*aload_0
                                                ; - java.io.BufferedReader::readLine@175 (line 350)

  0x0000000002d95dc1: movabs $0x19682900,%rdi   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95dcb: incl   0x300(%rdi)
  0x0000000002d95dd1: mov    $0x1,%edi          ;*goto
                                                ; - java.io.BufferedReader::readLine@166 (line 346)

  0x0000000002d95dd6: mov    %r8d,0x18(%rdx)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@183 (line 351)

  0x0000000002d95dda: cmp    $0x0,%edi
  0x0000000002d95ddd: movabs $0x19682900,%rdi   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95de7: movabs $0x330,%rax
  0x0000000002d95df1: je     0x0000000002d95e01
  0x0000000002d95df7: movabs $0x340,%rax
  0x0000000002d95e01: mov    (%rdi,%rax,1),%rcx
  0x0000000002d95e05: lea    0x1(%rcx),%rcx
  0x0000000002d95e09: mov    %rcx,(%rdi,%rax,1)
  0x0000000002d95e0d: jne    0x0000000002d962a6  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@188 (line 353)

  0x0000000002d95e13: mov    0x80(%rsp),%rbx
  0x0000000002d95e1b: cmp    $0x0,%rbx
  0x0000000002d95e1f: movabs $0x19682900,%rsi   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95e29: movabs $0x418,%rdi
  0x0000000002d95e33: jne    0x0000000002d95e43
  0x0000000002d95e39: movabs $0x428,%rdi
  0x0000000002d95e43: mov    (%rsi,%rdi,1),%rax
  0x0000000002d95e47: lea    0x1(%rax),%rax
  0x0000000002d95e4b: mov    %rax,(%rsi,%rdi,1)
  0x0000000002d95e4f: mov    %rdx,%r11
  0x0000000002d95e52: jne    0x0000000002d96018  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@265 (line 368)

  0x0000000002d95e58: movabs $0x7c000d8b8,%rdx  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x0000000002d95e62: mov    0x60(%r15),%rax
  0x0000000002d95e66: lea    0x18(%rax),%rdi
  0x0000000002d95e6a: cmp    0x70(%r15),%rdi
  0x0000000002d95e6e: ja     0x0000000002d96cb5
  0x0000000002d95e74: mov    %rdi,0x60(%r15)
  0x0000000002d95e78: mov    0xa8(%rdx),%rcx
  0x0000000002d95e7f: mov    %rcx,(%rax)
  0x0000000002d95e82: mov    %rdx,%rcx
  0x0000000002d95e85: shr    $0x3,%rcx
  0x0000000002d95e89: mov    %ecx,0x8(%rax)
  0x0000000002d95e8c: xor    %rcx,%rcx
  0x0000000002d95e8f: mov    %ecx,0xc(%rax)
  0x0000000002d95e92: xor    %rcx,%rcx
  0x0000000002d95e95: mov    %rcx,0x10(%rax)
  0x0000000002d95e99: mov    %rax,%r13          ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)

  0x0000000002d95e9c: movabs $0x78087e070,%rbx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95ea6: mov    0x74(%rbx),%ebx    ;*getstatic defaultExpectedLineLength
                                                ; - java.io.BufferedReader::readLine@272 (line 369)

  0x0000000002d95ea9: mov    %r13,%rdx
  0x0000000002d95eac: movabs $0x19682900,%rsi   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d95eb6: addq   $0x1,0x438(%rsi)
  0x0000000002d95ebe: movabs $0x19683618,%rdx   ;   {metadata(method data for {method} {0x00000000193e0068} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002d95ec8: mov    0xdc(%rdx),%esi
  0x0000000002d95ece: add    $0x8,%esi
  0x0000000002d95ed1: mov    %esi,0xdc(%rdx)
  0x0000000002d95ed7: movabs $0x193e0060,%rdx   ;   {metadata({method} {0x00000000193e0068} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002d95ee1: and    $0x7ffff8,%esi
  0x0000000002d95ee7: cmp    $0x0,%esi
  0x0000000002d95eea: je     0x0000000002d96cc2
  0x0000000002d95ef0: mov    %r13,%rdx
  0x0000000002d95ef3: movabs $0x19683618,%rsi   ;   {metadata(method data for {method} {0x00000000193e0068} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002d95efd: addq   $0x1,0x108(%rsi)
  0x0000000002d95f05: movabs $0x19647308,%rdx   ;   {metadata(method data for {method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d95f0f: mov    0xdc(%rdx),%esi
  0x0000000002d95f15: add    $0x8,%esi
  0x0000000002d95f18: mov    %esi,0xdc(%rdx)
  0x0000000002d95f1e: movabs $0x193e4978,%rdx   ;   {metadata({method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d95f28: and    $0x7ffff8,%esi
  0x0000000002d95f2e: cmp    $0x0,%esi
  0x0000000002d95f31: je     0x0000000002d96cd9
  0x0000000002d95f37: mov    %r13,%rdx
  0x0000000002d95f3a: movabs $0x19647308,%rsi   ;   {metadata(method data for {method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d95f44: addq   $0x1,0x108(%rsi)
  0x0000000002d95f4c: movabs $0x194a47d8,%rdx   ;   {metadata(method data for {method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d95f56: mov    0xdc(%rdx),%esi
  0x0000000002d95f5c: add    $0x8,%esi
  0x0000000002d95f5f: mov    %esi,0xdc(%rdx)
  0x0000000002d95f65: movabs $0x19370480,%rdx   ;   {metadata({method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d95f6f: and    $0x7ffff8,%esi
  0x0000000002d95f75: cmp    $0x0,%esi
  0x0000000002d95f78: je     0x0000000002d96cf0
  0x0000000002d95f7e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002d95f88: movslq %ebx,%rbx
  0x0000000002d95f8b: mov    %rbx,%rdi
  0x0000000002d95f8e: cmp    $0xffffff,%rbx
  0x0000000002d95f95: ja     0x0000000002d96d07
  0x0000000002d95f9b: movabs $0x17,%rsi
  0x0000000002d95fa5: lea    (%rsi,%rbx,2),%rsi
  0x0000000002d95fa9: and    $0xfffffffffffffff8,%rsi
  0x0000000002d95fad: mov    0x60(%r15),%rax
  0x0000000002d95fb1: lea    (%rax,%rsi,1),%rsi
  0x0000000002d95fb5: cmp    0x70(%r15),%rsi
  0x0000000002d95fb9: ja     0x0000000002d96d07
  0x0000000002d95fbf: mov    %rsi,0x60(%r15)
  0x0000000002d95fc3: sub    %rax,%rsi
  0x0000000002d95fc6: movq   $0x1,(%rax)
  0x0000000002d95fcd: mov    %rdx,%rcx
  0x0000000002d95fd0: shr    $0x3,%rcx
  0x0000000002d95fd4: mov    %ecx,0x8(%rax)
  0x0000000002d95fd7: mov    %ebx,0xc(%rax)
  0x0000000002d95fda: sub    $0x10,%rsi
  0x0000000002d95fde: je     0x0000000002d95ff5
  0x0000000002d95fe4: xor    %rbx,%rbx
  0x0000000002d95fe7: shr    $0x3,%rsi
  0x0000000002d95feb: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002d95ff0: dec    %rsi
  0x0000000002d95ff3: jne    0x0000000002d95feb  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x0000000002d95ff5: mov    %rax,%r10
  0x0000000002d95ff8: shr    $0x3,%r10
  0x0000000002d95ffc: mov    %r10d,0x10(%r13)
  0x0000000002d96000: mov    %r13,%rax
  0x0000000002d96003: shr    $0x9,%rax
  0x0000000002d96007: movabs $0xe824000,%rdi
  0x0000000002d96011: movb   $0x0,(%rax,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x0000000002d96015: mov    %r13,%rbx          ;*aload_2
                                                ; - java.io.BufferedReader::readLine@279 (line 370)

  0x0000000002d96018: mov    0x2c(%r11),%edi
  0x0000000002d9601c: shl    $0x3,%rdi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@281 (line 370)

  0x0000000002d96020: cmp    (%rbx),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ; implicit exception: dispatches to 0x0000000002d96d11
  0x0000000002d96023: mov    %rbx,%rax
  0x0000000002d96026: movabs $0x19682900,%rdx   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d96030: mov    0x8(%rax),%eax
  0x0000000002d96033: shl    $0x3,%rax
  0x0000000002d96037: cmp    0x450(%rdx),%rax
  0x0000000002d9603e: jne    0x0000000002d9604d
  0x0000000002d96040: addq   $0x1,0x458(%rdx)
  0x0000000002d96048: jmpq   0x0000000002d960b3
  0x0000000002d9604d: cmp    0x460(%rdx),%rax
  0x0000000002d96054: jne    0x0000000002d96063
  0x0000000002d96056: addq   $0x1,0x468(%rdx)
  0x0000000002d9605e: jmpq   0x0000000002d960b3
  0x0000000002d96063: cmpq   $0x0,0x450(%rdx)
  0x0000000002d9606e: jne    0x0000000002d96087
  0x0000000002d96070: mov    %rax,0x450(%rdx)
  0x0000000002d96077: movq   $0x1,0x458(%rdx)
  0x0000000002d96082: jmpq   0x0000000002d960b3
  0x0000000002d96087: cmpq   $0x0,0x460(%rdx)
  0x0000000002d96092: jne    0x0000000002d960ab
  0x0000000002d96094: mov    %rax,0x460(%rdx)
  0x0000000002d9609b: movq   $0x1,0x468(%rdx)
  0x0000000002d960a6: jmpq   0x0000000002d960b3
  0x0000000002d960ab: addq   $0x1,0x448(%rdx)
  0x0000000002d960b3: mov    %r8,%rdx
  0x0000000002d960b6: sub    %r9d,%edx
  0x0000000002d960b9: lea    0xc0(%rsp),%r8
  0x0000000002d960c1: mov    %rbx,0x8(%r8)
  0x0000000002d960c5: mov    (%rbx),%rax
  0x0000000002d960c8: mov    %rax,%rsi
  0x0000000002d960cb: and    $0x7,%rsi
  0x0000000002d960cf: cmp    $0x5,%rsi
  0x0000000002d960d3: jne    0x0000000002d9615a
  0x0000000002d960d9: mov    0x8(%rbx),%esi
  0x0000000002d960dc: shl    $0x3,%rsi
  0x0000000002d960e0: mov    0xa8(%rsi),%rsi
  0x0000000002d960e7: or     %r15,%rsi
  0x0000000002d960ea: xor    %rax,%rsi
  0x0000000002d960ed: and    $0xffffffffffffff87,%rsi
  0x0000000002d960f1: je     0x0000000002d96182
  0x0000000002d960f7: test   $0x7,%rsi
  0x0000000002d960fe: jne    0x0000000002d96147
  0x0000000002d96100: test   $0x300,%rsi
  0x0000000002d96107: jne    0x0000000002d96126
  0x0000000002d96109: and    $0x37f,%rax
  0x0000000002d96110: mov    %rax,%rsi
  0x0000000002d96113: or     %r15,%rsi
  0x0000000002d96116: lock cmpxchg %rsi,(%rbx)
  0x0000000002d9611b: jne    0x0000000002d96d16
  0x0000000002d96121: jmpq   0x0000000002d96182
  0x0000000002d96126: mov    0x8(%rbx),%esi
  0x0000000002d96129: shl    $0x3,%rsi
  0x0000000002d9612d: mov    0xa8(%rsi),%rsi
  0x0000000002d96134: or     %r15,%rsi
  0x0000000002d96137: lock cmpxchg %rsi,(%rbx)
  0x0000000002d9613c: jne    0x0000000002d96d16
  0x0000000002d96142: jmpq   0x0000000002d96182
  0x0000000002d96147: mov    0x8(%rbx),%esi
  0x0000000002d9614a: shl    $0x3,%rsi
  0x0000000002d9614e: mov    0xa8(%rsi),%rsi
  0x0000000002d96155: lock cmpxchg %rsi,(%rbx)
  0x0000000002d9615a: mov    (%rbx),%rax
  0x0000000002d9615d: or     $0x1,%rax
  0x0000000002d96161: mov    %rax,(%r8)
  0x0000000002d96164: lock cmpxchg %r8,(%rbx)
  0x0000000002d96169: je     0x0000000002d96182
  0x0000000002d9616f: sub    %rsp,%rax
  0x0000000002d96172: and    $0xfffffffffffff007,%rax
  0x0000000002d96179: mov    %rax,(%r8)
  0x0000000002d9617c: jne    0x0000000002d96d16  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002d96182: movabs $0x19683330,%r8    ;   {metadata(method data for {method} {0x00000000193e0e18} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002d9618c: mov    0xdc(%r8),%esi
  0x0000000002d96193: add    $0x8,%esi
  0x0000000002d96196: mov    %esi,0xdc(%r8)
  0x0000000002d9619d: movabs $0x193e0e10,%r8    ;   {metadata({method} {0x00000000193e0e18} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002d961a7: and    $0x7ffff8,%esi
  0x0000000002d961ad: cmp    $0x0,%esi
  0x0000000002d961b0: je     0x0000000002d96d29
  0x0000000002d961b6: movl   $0x0,0x14(%rbx)
  0x0000000002d961bd: mov    %rbx,%r8
  0x0000000002d961c0: shr    $0x9,%r8
  0x0000000002d961c4: movabs $0xe824000,%rsi
  0x0000000002d961ce: movb   $0x0,(%r8,%rsi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002d961d3: mov    %rbx,%r8
  0x0000000002d961d6: movabs $0x19683330,%rsi   ;   {metadata(method data for {method} {0x00000000193e0e18} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002d961e0: addq   $0x1,0x108(%rsi)
  0x0000000002d961e8: mov    %rdi,%r8
  0x0000000002d961eb: mov    %rdx,%rdi
  0x0000000002d961ee: mov    %rbx,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002d961f1: mov    %rbx,0x90(%rsp)
  0x0000000002d961f9: nop
  0x0000000002d961fa: nop
  0x0000000002d961fb: nop
  0x0000000002d961fc: nop
  0x0000000002d961fd: nop
  0x0000000002d961fe: nop
  0x0000000002d961ff: callq  0x0000000002cb61a0  ; OopMap{[136]=Oop [144]=Oop [112]=Oop [184]=Oop [200]=Oop off=2340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {optimized virtual_call}
  0x0000000002d96204: lea    0xc0(%rsp),%rax
  0x0000000002d9620c: mov    0x8(%rax),%rsi
  0x0000000002d96210: mov    (%rsi),%rdx
  0x0000000002d96213: and    $0x7,%rdx
  0x0000000002d96217: cmp    $0x5,%rdx
  0x0000000002d9621b: je     0x0000000002d96238
  0x0000000002d96221: mov    (%rax),%rdx
  0x0000000002d96224: test   %rdx,%rdx
  0x0000000002d96227: je     0x0000000002d96238
  0x0000000002d9622d: lock cmpxchg %rdx,(%rsi)
  0x0000000002d96232: jne    0x0000000002d96d40  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002d96238: movabs $0x19682900,%rdx   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d96242: mov    0xe0(%rdx),%esi
  0x0000000002d96248: add    $0x8,%esi
  0x0000000002d9624b: mov    %esi,0xe0(%rdx)
  0x0000000002d96251: movabs $0x19517d70,%rdx   ;   {metadata({method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d9625b: and    $0xfff8,%esi
  0x0000000002d96261: cmp    $0x0,%esi
  0x0000000002d96264: je     0x0000000002d96d56  ; OopMap{[136]=Oop [144]=Oop [112]=Oop [184]=Oop off=2442}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x0000000002d9626a: test   %eax,-0x406170(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d96270: movabs $0x19682900,%rdx   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d9627a: incl   0x478(%rdx)
  0x0000000002d96280: mov    0x90(%rsp),%rbx
  0x0000000002d96288: mov    %rbx,%rcx
  0x0000000002d9628b: mov    $0x0,%ebx
  0x0000000002d96290: mov    %ebx,0x78(%rsp)
  0x0000000002d96294: mov    %rcx,0x80(%rsp)
  0x0000000002d9629c: mov    0x70(%rsp),%rdx
  0x0000000002d962a1: jmpq   0x0000000002d95b58  ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x0000000002d962a6: mov    0x80(%rsp),%rcx
  0x0000000002d962ae: cmp    $0x0,%rcx
  0x0000000002d962b2: movabs $0x19682900,%rdx   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d962bc: movabs $0x350,%rdi
  0x0000000002d962c6: jne    0x0000000002d962d6
  0x0000000002d962cc: movabs $0x360,%rdi
  0x0000000002d962d6: mov    (%rdx,%rdi,1),%rax
  0x0000000002d962da: lea    0x1(%rax),%rax
  0x0000000002d962de: mov    %rax,(%rdx,%rdi,1)
  0x0000000002d962e2: mov    %esi,0x7c(%rsp)
  0x0000000002d962e6: mov    0x70(%rsp),%rdx
  0x0000000002d962eb: jne    0x0000000002d96391  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@192 (line 355)

  0x0000000002d962f1: mov    %rdx,%rbx
  0x0000000002d962f4: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002d962fe: mov    0x60(%r15),%rax
  0x0000000002d96302: lea    0x18(%rax),%rdi
  0x0000000002d96306: cmp    0x70(%r15),%rdi
  0x0000000002d9630a: ja     0x0000000002d96d6d
  0x0000000002d96310: mov    %rdi,0x60(%r15)
  0x0000000002d96314: mov    0xa8(%rdx),%rcx
  0x0000000002d9631b: mov    %rcx,(%rax)
  0x0000000002d9631e: mov    %rdx,%rcx
  0x0000000002d96321: shr    $0x3,%rcx
  0x0000000002d96325: mov    %ecx,0x8(%rax)
  0x0000000002d96328: xor    %rcx,%rcx
  0x0000000002d9632b: mov    %ecx,0xc(%rax)
  0x0000000002d9632e: xor    %rcx,%rcx
  0x0000000002d96331: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)

  0x0000000002d96335: mov    0x2c(%rbx),%edi
  0x0000000002d96338: shl    $0x3,%rdi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@200 (line 356)

  0x0000000002d9633c: mov    %rax,%rdx
  0x0000000002d9633f: movabs $0x19682900,%rsi   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d96349: addq   $0x1,0x370(%rsi)
  0x0000000002d96351: mov    %r8,%rdx
  0x0000000002d96354: sub    %r9d,%edx
  0x0000000002d96357: mov    %rdi,%r8
  0x0000000002d9635a: mov    %rdx,%rdi
  0x0000000002d9635d: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::readLine@208 (line 356)

  0x0000000002d96360: mov    %rax,0x98(%rsp)
  0x0000000002d96368: nop
  0x0000000002d96369: nop
  0x0000000002d9636a: nop
  0x0000000002d9636b: nop
  0x0000000002d9636c: nop
  0x0000000002d9636d: nop
  0x0000000002d9636e: nop
  0x0000000002d9636f: callq  0x0000000002cb61a0  ; OopMap{[136]=Oop [152]=Oop [112]=Oop [184]=Oop off=2708}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::readLine@208 (line 356)
                                                ;   {optimized virtual_call}
  0x0000000002d96374: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d9637e: incl   0x380(%rax)
  0x0000000002d96384: mov    0x98(%rsp),%rsi
  0x0000000002d9638c: jmpq   0x0000000002d96657  ;*goto
                                                ; - java.io.BufferedReader::readLine@213 (line 356)

  0x0000000002d96391: mov    0x2c(%rdx),%edi
  0x0000000002d96394: shl    $0x3,%rdi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@218 (line 358)

  0x0000000002d96398: cmp    (%rcx),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ; implicit exception: dispatches to 0x0000000002d96d7a
  0x0000000002d9639b: mov    %rcx,%rbx
  0x0000000002d9639e: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d963a8: mov    0x8(%rbx),%ebx
  0x0000000002d963ab: shl    $0x3,%rbx
  0x0000000002d963af: cmp    0x3a0(%rax),%rbx
  0x0000000002d963b6: jne    0x0000000002d963c5
  0x0000000002d963b8: addq   $0x1,0x3a8(%rax)
  0x0000000002d963c0: jmpq   0x0000000002d9642b
  0x0000000002d963c5: cmp    0x3b0(%rax),%rbx
  0x0000000002d963cc: jne    0x0000000002d963db
  0x0000000002d963ce: addq   $0x1,0x3b8(%rax)
  0x0000000002d963d6: jmpq   0x0000000002d9642b
  0x0000000002d963db: cmpq   $0x0,0x3a0(%rax)
  0x0000000002d963e6: jne    0x0000000002d963ff
  0x0000000002d963e8: mov    %rbx,0x3a0(%rax)
  0x0000000002d963ef: movq   $0x1,0x3a8(%rax)
  0x0000000002d963fa: jmpq   0x0000000002d9642b
  0x0000000002d963ff: cmpq   $0x0,0x3b0(%rax)
  0x0000000002d9640a: jne    0x0000000002d96423
  0x0000000002d9640c: mov    %rbx,0x3b0(%rax)
  0x0000000002d96413: movq   $0x1,0x3b8(%rax)
  0x0000000002d9641e: jmpq   0x0000000002d9642b
  0x0000000002d96423: addq   $0x1,0x398(%rax)
  0x0000000002d9642b: mov    %r8,%rsi
  0x0000000002d9642e: sub    %r9d,%esi
  0x0000000002d96431: lea    0xc0(%rsp),%r8
  0x0000000002d96439: mov    %rcx,0x8(%r8)
  0x0000000002d9643d: mov    (%rcx),%rax
  0x0000000002d96440: mov    %rax,%rbx
  0x0000000002d96443: and    $0x7,%rbx
  0x0000000002d96447: cmp    $0x5,%rbx
  0x0000000002d9644b: jne    0x0000000002d964d2
  0x0000000002d96451: mov    0x8(%rcx),%ebx
  0x0000000002d96454: shl    $0x3,%rbx
  0x0000000002d96458: mov    0xa8(%rbx),%rbx
  0x0000000002d9645f: or     %r15,%rbx
  0x0000000002d96462: xor    %rax,%rbx
  0x0000000002d96465: and    $0xffffffffffffff87,%rbx
  0x0000000002d96469: je     0x0000000002d964fa
  0x0000000002d9646f: test   $0x7,%rbx
  0x0000000002d96476: jne    0x0000000002d964bf
  0x0000000002d96478: test   $0x300,%rbx
  0x0000000002d9647f: jne    0x0000000002d9649e
  0x0000000002d96481: and    $0x37f,%rax
  0x0000000002d96488: mov    %rax,%rbx
  0x0000000002d9648b: or     %r15,%rbx
  0x0000000002d9648e: lock cmpxchg %rbx,(%rcx)
  0x0000000002d96493: jne    0x0000000002d96d7f
  0x0000000002d96499: jmpq   0x0000000002d964fa
  0x0000000002d9649e: mov    0x8(%rcx),%ebx
  0x0000000002d964a1: shl    $0x3,%rbx
  0x0000000002d964a5: mov    0xa8(%rbx),%rbx
  0x0000000002d964ac: or     %r15,%rbx
  0x0000000002d964af: lock cmpxchg %rbx,(%rcx)
  0x0000000002d964b4: jne    0x0000000002d96d7f
  0x0000000002d964ba: jmpq   0x0000000002d964fa
  0x0000000002d964bf: mov    0x8(%rcx),%ebx
  0x0000000002d964c2: shl    $0x3,%rbx
  0x0000000002d964c6: mov    0xa8(%rbx),%rbx
  0x0000000002d964cd: lock cmpxchg %rbx,(%rcx)
  0x0000000002d964d2: mov    (%rcx),%rax
  0x0000000002d964d5: or     $0x1,%rax
  0x0000000002d964d9: mov    %rax,(%r8)
  0x0000000002d964dc: lock cmpxchg %r8,(%rcx)
  0x0000000002d964e1: je     0x0000000002d964fa
  0x0000000002d964e7: sub    %rsp,%rax
  0x0000000002d964ea: and    $0xfffffffffffff007,%rax
  0x0000000002d964f1: mov    %rax,(%r8)
  0x0000000002d964f4: jne    0x0000000002d96d7f  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002d964fa: movabs $0x19683330,%r8    ;   {metadata(method data for {method} {0x00000000193e0e18} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002d96504: mov    0xdc(%r8),%ebx
  0x0000000002d9650b: add    $0x8,%ebx
  0x0000000002d9650e: mov    %ebx,0xdc(%r8)
  0x0000000002d96515: movabs $0x193e0e10,%r8    ;   {metadata({method} {0x00000000193e0e18} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002d9651f: and    $0x7ffff8,%ebx
  0x0000000002d96525: cmp    $0x0,%ebx
  0x0000000002d96528: je     0x0000000002d96d92
  0x0000000002d9652e: movl   $0x0,0x14(%rcx)
  0x0000000002d96535: mov    %rcx,%rbx
  0x0000000002d96538: shr    $0x9,%rbx
  0x0000000002d9653c: movabs $0xe824000,%r8
  0x0000000002d96546: movb   $0x0,(%rbx,%r8,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002d9654b: mov    %rcx,%rbx
  0x0000000002d9654e: movabs $0x19683330,%r8    ;   {metadata(method data for {method} {0x00000000193e0e18} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002d96558: addq   $0x1,0x108(%r8)
  0x0000000002d96560: mov    %rdi,%r8
  0x0000000002d96563: mov    %rsi,%rdi
  0x0000000002d96566: mov    %rcx,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002d96569: mov    %rcx,0x80(%rsp)
  0x0000000002d96571: nop
  0x0000000002d96572: nop
  0x0000000002d96573: nop
  0x0000000002d96574: nop
  0x0000000002d96575: nop
  0x0000000002d96576: nop
  0x0000000002d96577: callq  0x0000000002cb61a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop [200]=Oop off=3228}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {optimized virtual_call}
  0x0000000002d9657c: lea    0xc0(%rsp),%rax
  0x0000000002d96584: mov    0x8(%rax),%rsi
  0x0000000002d96588: mov    (%rsi),%rdx
  0x0000000002d9658b: and    $0x7,%rdx
  0x0000000002d9658f: cmp    $0x5,%rdx
  0x0000000002d96593: je     0x0000000002d965b0
  0x0000000002d96599: mov    (%rax),%rdx
  0x0000000002d9659c: test   %rdx,%rdx
  0x0000000002d9659f: je     0x0000000002d965b0
  0x0000000002d965a5: lock cmpxchg %rdx,(%rsi)
  0x0000000002d965aa: jne    0x0000000002d96da9  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002d965b0: mov    0x80(%rsp),%rbx
  0x0000000002d965b8: movabs $0x19682900,%rdx   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d965c2: mov    0x8(%rbx),%ebx
  0x0000000002d965c5: shl    $0x3,%rbx
  0x0000000002d965c9: cmp    0x3d0(%rdx),%rbx
  0x0000000002d965d0: jne    0x0000000002d965df
  0x0000000002d965d2: addq   $0x1,0x3d8(%rdx)
  0x0000000002d965da: jmpq   0x0000000002d96645
  0x0000000002d965df: cmp    0x3e0(%rdx),%rbx
  0x0000000002d965e6: jne    0x0000000002d965f5
  0x0000000002d965e8: addq   $0x1,0x3e8(%rdx)
  0x0000000002d965f0: jmpq   0x0000000002d96645
  0x0000000002d965f5: cmpq   $0x0,0x3d0(%rdx)
  0x0000000002d96600: jne    0x0000000002d96619
  0x0000000002d96602: mov    %rbx,0x3d0(%rdx)
  0x0000000002d96609: movq   $0x1,0x3d8(%rdx)
  0x0000000002d96614: jmpq   0x0000000002d96645
  0x0000000002d96619: cmpq   $0x0,0x3e0(%rdx)
  0x0000000002d96624: jne    0x0000000002d9663d
  0x0000000002d96626: mov    %rbx,0x3e0(%rdx)
  0x0000000002d9662d: movq   $0x1,0x3e8(%rdx)
  0x0000000002d96638: jmpq   0x0000000002d96645
  0x0000000002d9663d: addq   $0x1,0x3c8(%rdx)
  0x0000000002d96645: mov    0x80(%rsp),%rdx    ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)

  0x0000000002d9664d: nop
  0x0000000002d9664e: nop
  0x0000000002d9664f: callq  0x0000000002cb61a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop off=3444}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)
                                                ;   {optimized virtual_call}
  0x0000000002d96654: mov    %rax,%rsi          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@236 (line 361)

  0x0000000002d96657: mov    0x7c(%rsp),%edi
  0x0000000002d9665b: mov    0x70(%rsp),%rdx
  0x0000000002d96660: mov    0x18(%rdx),%eax    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@238 (line 361)

  0x0000000002d96663: inc    %eax
  0x0000000002d96665: mov    %eax,0x18(%rdx)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@243 (line 361)

  0x0000000002d96668: cmp    $0xd,%edi
  0x0000000002d9666b: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d96675: movabs $0x3f8,%rdi
  0x0000000002d9667f: jne    0x0000000002d9668f
  0x0000000002d96685: movabs $0x408,%rdi
  0x0000000002d9668f: mov    (%rax,%rdi,1),%rbx
  0x0000000002d96693: lea    0x1(%rbx),%rbx
  0x0000000002d96697: mov    %rbx,(%rax,%rdi,1)
  0x0000000002d9669b: jne    0x0000000002d969ed  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@250 (line 362)

  0x0000000002d966a1: movb   $0x1,0x24(%rdx)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@255 (line 363)

  0x0000000002d966a5: jmpq   0x0000000002d969ed  ;*aload
                                                ; - java.io.BufferedReader::readLine@258 (line 365)

  0x0000000002d966aa: mov    0x80(%rsp),%rbx
  0x0000000002d966b2: cmp    $0x0,%rbx
  0x0000000002d966b6: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d966c0: movabs $0x1c0,%rdx
  0x0000000002d966ca: je     0x0000000002d966da
  0x0000000002d966d0: movabs $0x1d0,%rdx
  0x0000000002d966da: mov    (%rax,%rdx,1),%rsi
  0x0000000002d966de: lea    0x1(%rsi),%rsi
  0x0000000002d966e2: mov    %rsi,(%rax,%rdx,1)
  0x0000000002d966e6: je     0x0000000002d968b8  ;*ifnull
                                                ; - java.io.BufferedReader::readLine@59 (line 326)

  0x0000000002d966ec: cmp    (%rbx),%rax        ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ; implicit exception: dispatches to 0x0000000002d96dbf
  0x0000000002d966ef: mov    %rbx,%rax
  0x0000000002d966f2: movabs $0x19682900,%rdx   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d966fc: mov    0x8(%rax),%eax
  0x0000000002d966ff: shl    $0x3,%rax
  0x0000000002d96703: cmp    0x1e8(%rdx),%rax
  0x0000000002d9670a: jne    0x0000000002d96719
  0x0000000002d9670c: addq   $0x1,0x1f0(%rdx)
  0x0000000002d96714: jmpq   0x0000000002d9677f
  0x0000000002d96719: cmp    0x1f8(%rdx),%rax
  0x0000000002d96720: jne    0x0000000002d9672f
  0x0000000002d96722: addq   $0x1,0x200(%rdx)
  0x0000000002d9672a: jmpq   0x0000000002d9677f
  0x0000000002d9672f: cmpq   $0x0,0x1e8(%rdx)
  0x0000000002d9673a: jne    0x0000000002d96753
  0x0000000002d9673c: mov    %rax,0x1e8(%rdx)
  0x0000000002d96743: movq   $0x1,0x1f0(%rdx)
  0x0000000002d9674e: jmpq   0x0000000002d9677f
  0x0000000002d96753: cmpq   $0x0,0x1f8(%rdx)
  0x0000000002d9675e: jne    0x0000000002d96777
  0x0000000002d96760: mov    %rax,0x1f8(%rdx)
  0x0000000002d96767: movq   $0x1,0x200(%rdx)
  0x0000000002d96772: jmpq   0x0000000002d9677f
  0x0000000002d96777: addq   $0x1,0x1e0(%rdx)
  0x0000000002d9677f: lea    0xc0(%rsp),%rdx
  0x0000000002d96787: mov    %rbx,0x8(%rdx)
  0x0000000002d9678b: mov    (%rbx),%rax
  0x0000000002d9678e: mov    %rax,%rsi
  0x0000000002d96791: and    $0x7,%rsi
  0x0000000002d96795: cmp    $0x5,%rsi
  0x0000000002d96799: jne    0x0000000002d96820
  0x0000000002d9679f: mov    0x8(%rbx),%esi
  0x0000000002d967a2: shl    $0x3,%rsi
  0x0000000002d967a6: mov    0xa8(%rsi),%rsi
  0x0000000002d967ad: or     %r15,%rsi
  0x0000000002d967b0: xor    %rax,%rsi
  0x0000000002d967b3: and    $0xffffffffffffff87,%rsi
  0x0000000002d967b7: je     0x0000000002d96848
  0x0000000002d967bd: test   $0x7,%rsi
  0x0000000002d967c4: jne    0x0000000002d9680d
  0x0000000002d967c6: test   $0x300,%rsi
  0x0000000002d967cd: jne    0x0000000002d967ec
  0x0000000002d967cf: and    $0x37f,%rax
  0x0000000002d967d6: mov    %rax,%rsi
  0x0000000002d967d9: or     %r15,%rsi
  0x0000000002d967dc: lock cmpxchg %rsi,(%rbx)
  0x0000000002d967e1: jne    0x0000000002d96dc4
  0x0000000002d967e7: jmpq   0x0000000002d96848
  0x0000000002d967ec: mov    0x8(%rbx),%esi
  0x0000000002d967ef: shl    $0x3,%rsi
  0x0000000002d967f3: mov    0xa8(%rsi),%rsi
  0x0000000002d967fa: or     %r15,%rsi
  0x0000000002d967fd: lock cmpxchg %rsi,(%rbx)
  0x0000000002d96802: jne    0x0000000002d96dc4
  0x0000000002d96808: jmpq   0x0000000002d96848
  0x0000000002d9680d: mov    0x8(%rbx),%esi
  0x0000000002d96810: shl    $0x3,%rsi
  0x0000000002d96814: mov    0xa8(%rsi),%rsi
  0x0000000002d9681b: lock cmpxchg %rsi,(%rbx)
  0x0000000002d96820: mov    (%rbx),%rax
  0x0000000002d96823: or     $0x1,%rax
  0x0000000002d96827: mov    %rax,(%rdx)
  0x0000000002d9682a: lock cmpxchg %rdx,(%rbx)
  0x0000000002d9682f: je     0x0000000002d96848
  0x0000000002d96835: sub    %rsp,%rax
  0x0000000002d96838: and    $0xfffffffffffff007,%rax
  0x0000000002d9683f: mov    %rax,(%rdx)
  0x0000000002d96842: jne    0x0000000002d96dc4  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002d96848: mov    0xc(%rbx),%edx     ;*getfield count
                                                ; - java.lang.StringBuffer::length@1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002d9684b: lea    0xc0(%rsp),%rax
  0x0000000002d96853: mov    0x8(%rax),%rdi
  0x0000000002d96857: mov    (%rdi),%rsi
  0x0000000002d9685a: and    $0x7,%rsi
  0x0000000002d9685e: cmp    $0x5,%rsi
  0x0000000002d96862: je     0x0000000002d9687f
  0x0000000002d96868: mov    (%rax),%rsi
  0x0000000002d9686b: test   %rsi,%rsi
  0x0000000002d9686e: je     0x0000000002d9687f
  0x0000000002d96874: lock cmpxchg %rsi,(%rdi)
  0x0000000002d96879: jne    0x0000000002d96dd7  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002d9687f: cmp    $0x0,%edx
  0x0000000002d96882: movabs $0x19682900,%rax   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d9688c: movabs $0x210,%rdx
  0x0000000002d96896: jle    0x0000000002d968a6
  0x0000000002d9689c: movabs $0x220,%rdx
  0x0000000002d968a6: mov    (%rax,%rdx,1),%rsi
  0x0000000002d968aa: lea    0x1(%rsi),%rsi
  0x0000000002d968ae: mov    %rsi,(%rax,%rdx,1)
  0x0000000002d968b2: jg     0x0000000002d96905  ;*ifle
                                                ; - java.io.BufferedReader::readLine@66 (line 326)

  0x0000000002d968b8: lea    0xb0(%rsp),%rax
  0x0000000002d968c0: mov    0x8(%rax),%rsi
  0x0000000002d968c4: mov    (%rsi),%rdx
  0x0000000002d968c7: and    $0x7,%rdx
  0x0000000002d968cb: cmp    $0x5,%rdx
  0x0000000002d968cf: je     0x0000000002d968ec
  0x0000000002d968d5: mov    (%rax),%rdx
  0x0000000002d968d8: test   %rdx,%rdx
  0x0000000002d968db: je     0x0000000002d968ec
  0x0000000002d968e1: lock cmpxchg %rdx,(%rsi)
  0x0000000002d968e6: jne    0x0000000002d96ded  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@80 (line 329)

  0x0000000002d968ec: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002d968f6: add    $0xe0,%rsp
  0x0000000002d968fd: pop    %rbp
  0x0000000002d968fe: test   %eax,-0x406804(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d96904: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@81 (line 329)

  0x0000000002d96905: mov    %rbx,%rdx
  0x0000000002d96908: movabs $0x19682900,%rsi   ;   {metadata(method data for {method} {0x0000000019517d78} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d96912: mov    0x8(%rdx),%edx
  0x0000000002d96915: shl    $0x3,%rdx
  0x0000000002d96919: cmp    0x238(%rsi),%rdx
  0x0000000002d96920: jne    0x0000000002d9692f
  0x0000000002d96922: addq   $0x1,0x240(%rsi)
  0x0000000002d9692a: jmpq   0x0000000002d96995
  0x0000000002d9692f: cmp    0x248(%rsi),%rdx
  0x0000000002d96936: jne    0x0000000002d96945
  0x0000000002d96938: addq   $0x1,0x250(%rsi)
  0x0000000002d96940: jmpq   0x0000000002d96995
  0x0000000002d96945: cmpq   $0x0,0x238(%rsi)
  0x0000000002d96950: jne    0x0000000002d96969
  0x0000000002d96952: mov    %rdx,0x238(%rsi)
  0x0000000002d96959: movq   $0x1,0x240(%rsi)
  0x0000000002d96964: jmpq   0x0000000002d96995
  0x0000000002d96969: cmpq   $0x0,0x248(%rsi)
  0x0000000002d96974: jne    0x0000000002d9698d
  0x0000000002d96976: mov    %rdx,0x248(%rsi)
  0x0000000002d9697d: movq   $0x1,0x250(%rsi)
  0x0000000002d96988: jmpq   0x0000000002d96995
  0x0000000002d9698d: addq   $0x1,0x230(%rsi)
  0x0000000002d96995: mov    %rbx,%rdx          ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)

  0x0000000002d96998: nop
  0x0000000002d96999: nop
  0x0000000002d9699a: nop
  0x0000000002d9699b: nop
  0x0000000002d9699c: nop
  0x0000000002d9699d: nop
  0x0000000002d9699e: nop
  0x0000000002d9699f: callq  0x0000000002cb61a0  ; OopMap{[136]=Oop [184]=Oop off=4292}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)
                                                ;   {optimized virtual_call}
  0x0000000002d969a4: mov    %rax,%rdx          ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)

  0x0000000002d969a7: lea    0xb0(%rsp),%rax
  0x0000000002d969af: mov    0x8(%rax),%rsi
  0x0000000002d969b3: mov    (%rsi),%r8
  0x0000000002d969b6: and    $0x7,%r8
  0x0000000002d969ba: cmp    $0x5,%r8
  0x0000000002d969be: je     0x0000000002d969db
  0x0000000002d969c4: mov    (%rax),%r8
  0x0000000002d969c7: test   %r8,%r8
  0x0000000002d969ca: je     0x0000000002d969db
  0x0000000002d969d0: lock cmpxchg %r8,(%rsi)
  0x0000000002d969d5: jne    0x0000000002d96e03  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@75 (line 327)

  0x0000000002d969db: mov    %rdx,%rax
  0x0000000002d969de: add    $0xe0,%rsp
  0x0000000002d969e5: pop    %rbp
  0x0000000002d969e6: test   %eax,-0x4068ec(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d969ec: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@76 (line 327)

  0x0000000002d969ed: lea    0xb0(%rsp),%rax
  0x0000000002d969f5: mov    0x8(%rax),%r8
  0x0000000002d969f9: mov    (%r8),%rdx
  0x0000000002d969fc: and    $0x7,%rdx
  0x0000000002d96a00: cmp    $0x5,%rdx
  0x0000000002d96a04: je     0x0000000002d96a21
  0x0000000002d96a0a: mov    (%rax),%rdx
  0x0000000002d96a0d: test   %rdx,%rdx
  0x0000000002d96a10: je     0x0000000002d96a21
  0x0000000002d96a16: lock cmpxchg %rdx,(%r8)
  0x0000000002d96a1b: jne    0x0000000002d96e19  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@262 (line 365)

  0x0000000002d96a21: mov    %rsi,%rax
  0x0000000002d96a24: add    $0xe0,%rsp
  0x0000000002d96a2b: pop    %rbp
  0x0000000002d96a2c: test   %eax,-0x406932(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d96a32: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@263 (line 365)

  0x0000000002d96a33: mov    %r8d,0xa8(%rsp)
  0x0000000002d96a3b: nopl   0x0(%rax,%rax,1)
  0x0000000002d96a40: jmpq   0x0000000002d96e3e  ;   {no_reloc}
  0x0000000002d96a45: add    %al,(%rax)
  0x0000000002d96a47: add    %al,(%rax)
  0x0000000002d96a49: add    %ch,%cl
  0x0000000002d96a4b: stc    
  0x0000000002d96a4c: add    (%rax),%eax
  0x0000000002d96a4e: add    %cl,-0x75(%rax)    ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002d96a51: rorb   -0x41(%rax)        ;   {metadata(method data for {method} {0x0000000019517650} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002d96a54: fsubrs 0x1968(%rip)        # 0x0000000002d983c2
  0x0000000002d96a5a: add    %al,(%rax)
  0x0000000002d96a5c: addq   $0x1,0x128(%rdi)
  0x0000000002d96a64: movabs $0x780bd98e8,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x0000000002d96a6e: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002d96a71: mov    %rax,0xa0(%rsp)
  0x0000000002d96a79: nop
  0x0000000002d96a7a: nop
  0x0000000002d96a7b: nop
  0x0000000002d96a7c: nop
  0x0000000002d96a7d: nop
  0x0000000002d96a7e: nop
  0x0000000002d96a7f: callq  0x0000000002cb61a0  ; OopMap{[136]=Oop [112]=Oop [160]=Oop [184]=Oop off=4516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {optimized virtual_call}
  0x0000000002d96a84: mov    0xa0(%rsp),%rax    ; OopMap{[136]=Oop [112]=Oop [184]=Oop rax=Oop off=4524}
                                                ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002d96a8c: movabs $0x2d96a8c,%rdx    ;   {section_word}
  0x0000000002d96a96: callq  0x0000000002cdeb20  ;   {runtime_call}
  0x0000000002d96a9b: nop                       ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002d96a9c: mov    0x2a8(%r15),%rax
  0x0000000002d96aa3: xor    %r10,%r10
  0x0000000002d96aa6: mov    %r10,0x2a8(%r15)
  0x0000000002d96aad: xor    %r10,%r10
  0x0000000002d96ab0: mov    %r10,0x2b0(%r15)
  0x0000000002d96ab7: mov    %rax,%rdx
  0x0000000002d96aba: lea    0xc0(%rsp),%rax
  0x0000000002d96ac2: mov    0x8(%rax),%rdi
  0x0000000002d96ac6: mov    (%rdi),%rsi
  0x0000000002d96ac9: and    $0x7,%rsi
  0x0000000002d96acd: cmp    $0x5,%rsi
  0x0000000002d96ad1: je     0x0000000002d96aee
  0x0000000002d96ad7: mov    (%rax),%rsi
  0x0000000002d96ada: test   %rsi,%rsi
  0x0000000002d96add: je     0x0000000002d96aee
  0x0000000002d96ae3: lock cmpxchg %rsi,(%rdi)
  0x0000000002d96ae8: jne    0x0000000002d96e55  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002d96aee: mov    %rdx,%rax          ; OopMap{rbx=Oop [136]=Oop [184]=Oop rax=Oop off=4625}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002d96af1: movabs $0x2d96af1,%rdx    ;   {section_word}
  0x0000000002d96afb: callq  0x0000000002cdeb20  ;   {runtime_call}
  0x0000000002d96b00: nop                       ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002d96b01: mov    0x2a8(%r15),%rax
  0x0000000002d96b08: xor    %r10,%r10
  0x0000000002d96b0b: mov    %r10,0x2a8(%r15)
  0x0000000002d96b12: xor    %r10,%r10
  0x0000000002d96b15: mov    %r10,0x2b0(%r15)
  0x0000000002d96b1c: mov    %rax,%rdx
  0x0000000002d96b1f: lea    0xc0(%rsp),%rax
  0x0000000002d96b27: mov    0x8(%rax),%rcx
  0x0000000002d96b2b: mov    (%rcx),%rsi
  0x0000000002d96b2e: and    $0x7,%rsi
  0x0000000002d96b32: cmp    $0x5,%rsi
  0x0000000002d96b36: je     0x0000000002d96b53
  0x0000000002d96b3c: mov    (%rax),%rsi
  0x0000000002d96b3f: test   %rsi,%rsi
  0x0000000002d96b42: je     0x0000000002d96b53
  0x0000000002d96b48: lock cmpxchg %rsi,(%rcx)
  0x0000000002d96b4d: jne    0x0000000002d96e6b  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002d96b53: mov    %rdx,%rax          ; OopMap{[112]=Oop [136]=Oop rbx=Oop [184]=Oop rax=Oop off=4726}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002d96b56: movabs $0x2d96b56,%rdx    ;   {section_word}
  0x0000000002d96b60: callq  0x0000000002cdeb20  ;   {runtime_call}
  0x0000000002d96b65: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002d96b66: mov    0x88(%rsp),%rdi
  0x0000000002d96b6e: mov    0x70(%rsp),%rsi
  0x0000000002d96b73: mov    0x2a8(%r15),%rax
  0x0000000002d96b7a: xor    %r10,%r10
  0x0000000002d96b7d: mov    %r10,0x2a8(%r15)
  0x0000000002d96b84: xor    %r10,%r10
  0x0000000002d96b87: mov    %r10,0x2b0(%r15)
  0x0000000002d96b8e: mov    %rax,%rdx
  0x0000000002d96b91: lea    0xc0(%rsp),%rax
  0x0000000002d96b99: mov    0x8(%rax),%r8
  0x0000000002d96b9d: mov    (%r8),%rcx
  0x0000000002d96ba0: and    $0x7,%rcx
  0x0000000002d96ba4: cmp    $0x5,%rcx
  0x0000000002d96ba8: je     0x0000000002d96bc5
  0x0000000002d96bae: mov    (%rax),%rcx
  0x0000000002d96bb1: test   %rcx,%rcx
  0x0000000002d96bb4: je     0x0000000002d96bc5
  0x0000000002d96bba: lock cmpxchg %rcx,(%r8)
  0x0000000002d96bbf: jne    0x0000000002d96e81  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002d96bc5: mov    %rdx,%rax          ; OopMap{rbx=Oop rsi=Oop [112]=Oop rdi=Oop [136]=Oop [184]=Oop rax=Oop off=4840}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002d96bc8: movabs $0x2d96bc8,%rdx    ;   {section_word}
  0x0000000002d96bd2: callq  0x0000000002cdeb20  ;   {runtime_call}
  0x0000000002d96bd7: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002d96bd8: mov    0x2a8(%r15),%rax
  0x0000000002d96bdf: xor    %r10,%r10
  0x0000000002d96be2: mov    %r10,0x2a8(%r15)
  0x0000000002d96be9: xor    %r10,%r10
  0x0000000002d96bec: mov    %r10,0x2b0(%r15)
  0x0000000002d96bf3: mov    %rax,%rsi
  0x0000000002d96bf6: lea    0xb0(%rsp),%rax
  0x0000000002d96bfe: mov    0x8(%rax),%rbx
  0x0000000002d96c02: mov    (%rbx),%rdi
  0x0000000002d96c05: and    $0x7,%rdi
  0x0000000002d96c09: cmp    $0x5,%rdi
  0x0000000002d96c0d: je     0x0000000002d96c2a
  0x0000000002d96c13: mov    (%rax),%rdi
  0x0000000002d96c16: test   %rdi,%rdi
  0x0000000002d96c19: je     0x0000000002d96c2a
  0x0000000002d96c1f: lock cmpxchg %rdi,(%rbx)
  0x0000000002d96c24: jne    0x0000000002d96e97  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@300 (line 372)

  0x0000000002d96c2a: mov    %rsi,%rax
  0x0000000002d96c2d: jmpq   0x0000000002d96ef6
  0x0000000002d96c32: mov    %rax,0x8(%rsp)
  0x0000000002d96c37: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d96c3f: callq  0x0000000002d710e0  ; OopMap{rdx=Oop [112]=Oop off=4964}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::readLine@-1 (line 313)
                                                ;   {runtime_call}
  0x0000000002d96c44: jmpq   0x0000000002d95946
  0x0000000002d96c49: callq  0x0000000002cdff40  ; OopMap{rdx=Oop [112]=Oop rsi=Oop [136]=Oop off=4974}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x0000000002d96c4e: mov    %rsi,0x8(%rsp)
  0x0000000002d96c53: mov    %rdi,(%rsp)
  0x0000000002d96c57: callq  0x0000000002d6f760  ; OopMap{rdx=Oop [112]=Oop rsi=Oop [136]=Oop [184]=Oop off=4988}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x0000000002d96c5c: jmpq   0x0000000002d95a1e
  0x0000000002d96c61: mov    %rdi,0x8(%rsp)
  0x0000000002d96c66: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d96c6e: callq  0x0000000002d710e0  ; OopMap{rdx=Oop [112]=Oop rsi=Oop [136]=Oop [184]=Oop off=5011}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::ensureOpen@-1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x0000000002d96c73: jmpq   0x0000000002d95a65
  0x0000000002d96c78: callq  0x0000000002cdff40  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rax=Oop [184]=Oop off=5021}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x0000000002d96c7d: callq  0x0000000002cdff40  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rax=Oop [184]=Oop off=5026}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x0000000002d96c82: mov    %rsi,(%rsp)
  0x0000000002d96c86: callq  0x0000000002ce0600  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rax=Oop [184]=Oop off=5035}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x0000000002d96c8b: callq  0x0000000002cdff40  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rsi=Oop [184]=Oop off=5040}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x0000000002d96c90: callq  0x0000000002cdff40  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rsi=Oop [184]=Oop off=5045}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x0000000002d96c95: mov    %r8,(%rsp)
  0x0000000002d96c99: callq  0x0000000002ce0600  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rsi=Oop [184]=Oop off=5054}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x0000000002d96c9e: mov    %rax,0x8(%rsp)
  0x0000000002d96ca3: movq   $0xac,(%rsp)
  0x0000000002d96cab: callq  0x0000000002d710e0  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop [184]=Oop off=5072}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)
                                                ;   {runtime_call}
  0x0000000002d96cb0: jmpq   0x0000000002d95d68
  0x0000000002d96cb5: mov    %rdx,%rdx
  0x0000000002d96cb8: callq  0x0000000002cdf600  ; OopMap{[136]=Oop r11=Oop [112]=Oop [184]=Oop off=5085}
                                                ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)
                                                ;   {runtime_call}
  0x0000000002d96cbd: jmpq   0x0000000002d95e99
  0x0000000002d96cc2: mov    %rdx,0x8(%rsp)
  0x0000000002d96cc7: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d96ccf: callq  0x0000000002d710e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5108}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::&lt;init&gt;@-1 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x0000000002d96cd4: jmpq   0x0000000002d95ef0
  0x0000000002d96cd9: mov    %rdx,0x8(%rsp)
  0x0000000002d96cde: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d96ce6: callq  0x0000000002d710e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5131}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x0000000002d96ceb: jmpq   0x0000000002d95f37
  0x0000000002d96cf0: mov    %rdx,0x8(%rsp)
  0x0000000002d96cf5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d96cfd: callq  0x0000000002d710e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5154}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x0000000002d96d02: jmpq   0x0000000002d95f7e
  0x0000000002d96d07: callq  0x0000000002d6e600  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5164}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x0000000002d96d0c: jmpq   0x0000000002d95ff5
  0x0000000002d96d11: callq  0x0000000002cdff40  ; OopMap{[136]=Oop r11=Oop [112]=Oop rbx=Oop rdi=Oop [184]=Oop off=5174}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x0000000002d96d16: mov    %rbx,0x8(%rsp)
  0x0000000002d96d1b: mov    %r8,(%rsp)
  0x0000000002d96d1f: callq  0x0000000002d6f760  ; OopMap{[136]=Oop r11=Oop [112]=Oop rbx=Oop rdi=Oop [184]=Oop [200]=Oop off=5188}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x0000000002d96d24: jmpq   0x0000000002d96182
  0x0000000002d96d29: mov    %r8,0x8(%rsp)
  0x0000000002d96d2e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d96d36: callq  0x0000000002d710e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop rbx=Oop rdi=Oop [184]=Oop [200]=Oop off=5211}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x0000000002d96d3b: jmpq   0x0000000002d961b6
  0x0000000002d96d40: lea    0xc0(%rsp),%rax
  0x0000000002d96d48: mov    %rax,(%rsp)
  0x0000000002d96d4c: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d96d51: jmpq   0x0000000002d96238
  0x0000000002d96d56: mov    %rdx,0x8(%rsp)
  0x0000000002d96d5b: movq   $0x125,(%rsp)
  0x0000000002d96d63: callq  0x0000000002d710e0  ; OopMap{[136]=Oop [144]=Oop [112]=Oop [184]=Oop off=5256}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)
                                                ;   {runtime_call}
  0x0000000002d96d68: jmpq   0x0000000002d9626a
  0x0000000002d96d6d: mov    %rdx,%rdx
  0x0000000002d96d70: callq  0x0000000002cdf600  ; OopMap{[136]=Oop rbx=Oop [112]=Oop [184]=Oop off=5269}
                                                ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)
                                                ;   {runtime_call}
  0x0000000002d96d75: jmpq   0x0000000002d96335
  0x0000000002d96d7a: callq  0x0000000002cdff40  ; OopMap{rdx=Oop [112]=Oop rcx=Oop [136]=Oop rdi=Oop [184]=Oop off=5279}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x0000000002d96d7f: mov    %rcx,0x8(%rsp)
  0x0000000002d96d84: mov    %r8,(%rsp)
  0x0000000002d96d88: callq  0x0000000002d6f760  ; OopMap{rdx=Oop [112]=Oop rcx=Oop [136]=Oop rdi=Oop [184]=Oop [200]=Oop off=5293}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x0000000002d96d8d: jmpq   0x0000000002d964fa
  0x0000000002d96d92: mov    %r8,0x8(%rsp)
  0x0000000002d96d97: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d96d9f: callq  0x0000000002d710e0  ; OopMap{rdx=Oop [112]=Oop rcx=Oop [136]=Oop rdi=Oop [184]=Oop [200]=Oop off=5316}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x0000000002d96da4: jmpq   0x0000000002d9652e
  0x0000000002d96da9: lea    0xc0(%rsp),%rax
  0x0000000002d96db1: mov    %rax,(%rsp)
  0x0000000002d96db5: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d96dba: jmpq   0x0000000002d965b0
  0x0000000002d96dbf: callq  0x0000000002cdff40  ; OopMap{[136]=Oop rbx=Oop [184]=Oop off=5348}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x0000000002d96dc4: mov    %rbx,0x8(%rsp)
  0x0000000002d96dc9: mov    %rdx,(%rsp)
  0x0000000002d96dcd: callq  0x0000000002d6f760  ; OopMap{[136]=Oop rbx=Oop [184]=Oop [200]=Oop off=5362}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x0000000002d96dd2: jmpq   0x0000000002d96848
  0x0000000002d96dd7: lea    0xc0(%rsp),%rax
  0x0000000002d96ddf: mov    %rax,(%rsp)
  0x0000000002d96de3: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d96de8: jmpq   0x0000000002d9687f
  0x0000000002d96ded: lea    0xb0(%rsp),%rax
  0x0000000002d96df5: mov    %rax,(%rsp)
  0x0000000002d96df9: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d96dfe: jmpq   0x0000000002d968ec
  0x0000000002d96e03: lea    0xb0(%rsp),%rax
  0x0000000002d96e0b: mov    %rax,(%rsp)
  0x0000000002d96e0f: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d96e14: jmpq   0x0000000002d969db
  0x0000000002d96e19: lea    0xb0(%rsp),%rax
  0x0000000002d96e21: mov    %rax,(%rsp)
  0x0000000002d96e25: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d96e2a: jmpq   0x0000000002d96a21
  0x0000000002d96e2f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d96e39: mov    $0xa050f00,%eax
  0x0000000002d96e3e: callq  0x0000000002d72160  ; OopMap{[136]=Oop [112]=Oop [184]=Oop off=5475}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x0000000002d96e43: jmpq   0x0000000002d96a40
  0x0000000002d96e48: mov    %rdx,%rdx
  0x0000000002d96e4b: callq  0x0000000002cdfa20  ; OopMap{[136]=Oop [112]=Oop [184]=Oop off=5488}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x0000000002d96e50: jmpq   0x0000000002d96a4f
  0x0000000002d96e55: lea    0xc0(%rsp),%rax
  0x0000000002d96e5d: mov    %rax,(%rsp)
  0x0000000002d96e61: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d96e66: jmpq   0x0000000002d96aee
  0x0000000002d96e6b: lea    0xc0(%rsp),%rax
  0x0000000002d96e73: mov    %rax,(%rsp)
  0x0000000002d96e77: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d96e7c: jmpq   0x0000000002d96b53
  0x0000000002d96e81: lea    0xc0(%rsp),%rax
  0x0000000002d96e89: mov    %rax,(%rsp)
  0x0000000002d96e8d: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d96e92: jmpq   0x0000000002d96bc5
  0x0000000002d96e97: lea    0xb0(%rsp),%rax
  0x0000000002d96e9f: mov    %rax,(%rsp)
  0x0000000002d96ea3: callq  0x0000000002d6fba0  ;   {runtime_call}
  0x0000000002d96ea8: jmpq   0x0000000002d96c2a
  0x0000000002d96ead: mov    0x90(%rsp),%rbx
  0x0000000002d96eb5: jmpq   0x0000000002d96b66
  0x0000000002d96eba: mov    0x7c(%rsp),%edi
  0x0000000002d96ebe: mov    0x80(%rsp),%rbx
  0x0000000002d96ec6: jmpq   0x0000000002d96b01
  0x0000000002d96ecb: nop
  0x0000000002d96ecc: nop
  0x0000000002d96ecd: mov    0x2a8(%r15),%rax
  0x0000000002d96ed4: movabs $0x0,%r10
  0x0000000002d96ede: mov    %r10,0x2a8(%r15)
  0x0000000002d96ee5: movabs $0x0,%r10
  0x0000000002d96eef: mov    %r10,0x2b0(%r15)
  0x0000000002d96ef6: add    $0xe0,%rsp
  0x0000000002d96efd: pop    %rbp
  0x0000000002d96efe: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d96f03: hlt    
  0x0000000002d96f04: hlt    
  0x0000000002d96f05: hlt    
  0x0000000002d96f06: hlt    
  0x0000000002d96f07: hlt    
  0x0000000002d96f08: hlt    
  0x0000000002d96f09: hlt    
  0x0000000002d96f0a: hlt    
  0x0000000002d96f0b: hlt    
  0x0000000002d96f0c: hlt    
  0x0000000002d96f0d: hlt    
  0x0000000002d96f0e: hlt    
  0x0000000002d96f0f: hlt    
  0x0000000002d96f10: hlt    
  0x0000000002d96f11: hlt    
  0x0000000002d96f12: hlt    
  0x0000000002d96f13: hlt    
  0x0000000002d96f14: hlt    
  0x0000000002d96f15: hlt    
  0x0000000002d96f16: hlt    
  0x0000000002d96f17: hlt    
  0x0000000002d96f18: hlt    
  0x0000000002d96f19: hlt    
  0x0000000002d96f1a: hlt    
  0x0000000002d96f1b: hlt    
  0x0000000002d96f1c: hlt    
  0x0000000002d96f1d: hlt    
  0x0000000002d96f1e: hlt    
  0x0000000002d96f1f: hlt    
[Stub Code]
  0x0000000002d96f20: nop                       ;   {no_reloc}
  0x0000000002d96f21: nop
  0x0000000002d96f22: nop
  0x0000000002d96f23: nop
  0x0000000002d96f24: nop
  0x0000000002d96f25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d96f2f: jmpq   0x0000000002d96f2f  ;   {runtime_call}
  0x0000000002d96f34: nop
  0x0000000002d96f35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d96f3f: jmpq   0x0000000002d96f3f  ;   {runtime_call}
  0x0000000002d96f44: nop
  0x0000000002d96f45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d96f4f: jmpq   0x0000000002d96f4f  ;   {runtime_call}
  0x0000000002d96f54: nop
  0x0000000002d96f55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d96f5f: jmpq   0x0000000002d96f5f  ;   {runtime_call}
  0x0000000002d96f64: nop
  0x0000000002d96f65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d96f6f: jmpq   0x0000000002d96f6f  ;   {runtime_call}
  0x0000000002d96f74: nop
  0x0000000002d96f75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d96f7f: jmpq   0x0000000002d96f7f  ;   {runtime_call}
  0x0000000002d96f84: nop
  0x0000000002d96f85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d96f8f: jmpq   0x0000000002d96f8f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d96f94: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d96f99: mov    %rsp,-0x28(%rsp)
  0x0000000002d96f9e: sub    $0x80,%rsp
  0x0000000002d96fa5: mov    %rax,0x78(%rsp)
  0x0000000002d96faa: mov    %rcx,0x70(%rsp)
  0x0000000002d96faf: mov    %rdx,0x68(%rsp)
  0x0000000002d96fb4: mov    %rbx,0x60(%rsp)
  0x0000000002d96fb9: mov    %rbp,0x50(%rsp)
  0x0000000002d96fbe: mov    %rsi,0x48(%rsp)
  0x0000000002d96fc3: mov    %rdi,0x40(%rsp)
  0x0000000002d96fc8: mov    %r8,0x38(%rsp)
  0x0000000002d96fcd: mov    %r9,0x30(%rsp)
  0x0000000002d96fd2: mov    %r10,0x28(%rsp)
  0x0000000002d96fd7: mov    %r11,0x20(%rsp)
  0x0000000002d96fdc: mov    %r12,0x18(%rsp)
  0x0000000002d96fe1: mov    %r13,0x10(%rsp)
  0x0000000002d96fe6: mov    %r14,0x8(%rsp)
  0x0000000002d96feb: mov    %r15,(%rsp)
  0x0000000002d96fef: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d96ff9: movabs $0x2d96f99,%rdx    ;   {internal_word}
  0x0000000002d97003: mov    %rsp,%r8
  0x0000000002d97006: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9700a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9700f: hlt    
[Deopt Handler Code]
  0x0000000002d97010: movabs $0x2d97010,%r10    ;   {section_word}
  0x0000000002d9701a: push   %r10
  0x0000000002d9701c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d97021: hlt    
  0x0000000002d97022: hlt    
  0x0000000002d97023: hlt    
  0x0000000002d97024: hlt    
  0x0000000002d97025: hlt    
  0x0000000002d97026: hlt    
  0x0000000002d97027: hlt    
<nmethod compile_id='54' compiler='C1' level='3' entry='0x0000000002d958e0' size='10976' address='0x0000000002d95650' relocation_offset='288' insts_offset='656' stub_offset='6352' scopes_data_offset='6680' scopes_pcs_offset='8152' dependencies_offset='10296' handler_table_offset='10304' nul_chk_table_offset='10904' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='172' backedge_count='3333' iicount='172' stamp='7.411'/>
<writer thread='21476'/>
<task_queued compile_id='57' method='java/lang/String toLowerCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='243' backedge_count='4096' iicount='243' level='3' stamp='7.411' comment='tiered' hot_count='243'/>
<task_queued compile_id='58' method='java/nio/Buffer position ()I' bytes='5' count='256' iicount='256' level='1' stamp='7.411' comment='tiered' hot_count='256'/>
<writer thread='11160'/>
Decoding compiled method 0x0000000002d9aed0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019374fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000002d9b000: mov    0x8(%rdx),%r10d
  0x0000000002d9b004: shl    $0x3,%r10
  0x0000000002d9b008: cmp    %r10,%rax
  0x0000000002d9b00b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d9b011: data16 xchg %ax,%ax
  0x0000000002d9b014: nopl   0x0(%rax,%rax,1)
  0x0000000002d9b01c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d9b020: mov    %eax,-0x6000(%rsp)
  0x0000000002d9b027: push   %rbp
  0x0000000002d9b028: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x0000000002d9b02c: mov    %rdx,%rbx
  0x0000000002d9b02f: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x0000000002d9b032: test   %eax,%eax
  0x0000000002d9b034: jne    0x0000000002d9b125  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x0000000002d9b03a: mov    0xc(%rdx),%ebp     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x0000000002d9b03d: mov    0xc(%r12,%rbp,8),%r10d  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x0000000002d9b145
  0x0000000002d9b042: test   %r10d,%r10d
  0x0000000002d9b045: jle    0x0000000002d9b131  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x0000000002d9b04b: test   %r10d,%r10d
  0x0000000002d9b04e: jbe    0x0000000002d9b135
  0x0000000002d9b054: mov    %r10d,%r9d
  0x0000000002d9b057: dec    %r9d
  0x0000000002d9b05a: cmp    %r10d,%r9d
  0x0000000002d9b05d: jae    0x0000000002d9b135  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000000002d9b063: movzwl 0x10(%r12,%rbp,8),%r11d  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002d9b069: mov    %r10d,%edi
  0x0000000002d9b06c: add    $0xfffffffd,%edi
  0x0000000002d9b06f: mov    %r11d,%eax
  0x0000000002d9b072: shl    $0x5,%eax
  0x0000000002d9b075: lea    (%r12,%rbp,8),%rdx
  0x0000000002d9b079: mov    $0x1,%r8d
  0x0000000002d9b07f: mov    $0x80000000,%ecx
  0x0000000002d9b084: cmp    %edi,%r9d
  0x0000000002d9b087: cmovl  %ecx,%edi
  0x0000000002d9b08a: cmp    $0x1,%edi
  0x0000000002d9b08d: jle    0x0000000002d9b116
  0x0000000002d9b093: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002d9b096: jmp    0x0000000002d9b0c3  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000000002d9b098: movzwl 0x10(%rdx,%r8,2),%ecx
  0x0000000002d9b09e: sub    %r11d,%eax
  0x0000000002d9b0a1: add    %ecx,%eax          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000002d9b0a3: inc    %r8d               ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000002d9b0a6: cmp    %r10d,%r8d
  0x0000000002d9b0a9: jge    0x0000000002d9b122  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002d9b0af: mov    %eax,%r9d
  0x0000000002d9b0b2: shl    $0x5,%r9d
  0x0000000002d9b0b6: mov    %eax,%r11d
  0x0000000002d9b0b9: mov    %r9d,%eax
  0x0000000002d9b0bc: jmp    0x0000000002d9b098
  0x0000000002d9b0be: xchg   %ax,%ax
  0x0000000002d9b0c0: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002d9b0c3: movzwl 0x10(%rdx,%r8,2),%r9d
  0x0000000002d9b0c9: add    %r9d,%eax
  0x0000000002d9b0cc: movslq %r8d,%r11
  0x0000000002d9b0cf: movzwl 0x12(%rdx,%r11,2),%ecx
  0x0000000002d9b0d5: movzwl 0x16(%rdx,%r11,2),%ebp
  0x0000000002d9b0db: movzwl 0x14(%rdx,%r11,2),%r9d
  0x0000000002d9b0e1: mov    %eax,%r11d
  0x0000000002d9b0e4: shl    $0x5,%r11d
  0x0000000002d9b0e8: sub    %eax,%r11d
  0x0000000002d9b0eb: add    %ecx,%r11d
  0x0000000002d9b0ee: mov    %r11d,%esi
  0x0000000002d9b0f1: shl    $0x5,%esi
  0x0000000002d9b0f4: sub    %r11d,%esi
  0x0000000002d9b0f7: add    %r9d,%esi
  0x0000000002d9b0fa: mov    %esi,%r11d
  0x0000000002d9b0fd: shl    $0x5,%r11d
  0x0000000002d9b101: sub    %esi,%r11d
  0x0000000002d9b104: add    %ebp,%r11d         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000002d9b107: mov    %r11d,%eax
  0x0000000002d9b10a: shl    $0x5,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002d9b10d: add    $0x4,%r8d          ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000002d9b111: cmp    %edi,%r8d
  0x0000000002d9b114: jl     0x0000000002d9b0c0  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002d9b116: cmp    %r10d,%r8d
  0x0000000002d9b119: jl     0x0000000002d9b098
  0x0000000002d9b11f: mov    %r11d,%eax
  0x0000000002d9b122: mov    %eax,0x10(%rbx)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x0000000002d9b125: add    $0x20,%rsp
  0x0000000002d9b129: pop    %rbp
  0x0000000002d9b12a: test   %eax,-0x40b130(%rip)        # 0x0000000002990000
                                                ;   {poll_return}
  0x0000000002d9b130: retq   
  0x0000000002d9b131: xor    %eax,%eax
  0x0000000002d9b133: jmp    0x0000000002d9b125
  0x0000000002d9b135: mov    $0xffffff86,%edx
  0x0000000002d9b13a: mov    %rbx,(%rsp)
  0x0000000002d9b13e: nop
  0x0000000002d9b13f: callq  0x0000000002cb57a0  ; OopMap{rbp=NarrowOop [0]=Oop off=324}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x0000000002d9b144: int3                      ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000000002d9b145: mov    $0xfffffff6,%edx
  0x0000000002d9b14a: nop
  0x0000000002d9b14b: callq  0x0000000002cb57a0  ; OopMap{off=336}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x0000000002d9b150: int3                      ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)

  0x0000000002d9b151: hlt    
  0x0000000002d9b152: hlt    
  0x0000000002d9b153: hlt    
  0x0000000002d9b154: hlt    
  0x0000000002d9b155: hlt    
  0x0000000002d9b156: hlt    
  0x0000000002d9b157: hlt    
  0x0000000002d9b158: hlt    
  0x0000000002d9b159: hlt    
  0x0000000002d9b15a: hlt    
  0x0000000002d9b15b: hlt    
  0x0000000002d9b15c: hlt    
  0x0000000002d9b15d: hlt    
  0x0000000002d9b15e: hlt    
  0x0000000002d9b15f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d9b160: jmpq   0x0000000002cdf4a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002d9b165: callq  0x0000000002d9b16a
  0x0000000002d9b16a: subq   $0x5,(%rsp)
  0x0000000002d9b16f: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d9b174: hlt    
  0x0000000002d9b175: hlt    
  0x0000000002d9b176: hlt    
  0x0000000002d9b177: hlt    
<nmethod compile_id='56' compiler='C2' level='4' entry='0x0000000002d9b000' size='1224' address='0x0000000002d9aed0' relocation_offset='288' insts_offset='304' stub_offset='656' scopes_data_offset='688' scopes_pcs_offset='800' dependencies_offset='1200' nul_chk_table_offset='1208' method='java/lang/String hashCode ()I' bytes='55' count='1172' backedge_count='20980' iicount='1172' stamp='7.472'/>
<make_not_entrant thread='11160' compile_id='4' compiler='C1' level='3' stamp='7.472'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d9a710:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019375390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002d9a8a0: mov    0x8(%rdx),%r10d
  0x0000000002d9a8a4: shl    $0x3,%r10
  0x0000000002d9a8a8: cmp    %rax,%r10
  0x0000000002d9a8ab: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d9a8b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d9a8bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d9a8c0: mov    %eax,-0x6000(%rsp)
  0x0000000002d9a8c7: push   %rbp
  0x0000000002d9a8c8: sub    $0x40,%rsp
  0x0000000002d9a8cc: movabs $0x196865f0,%rax   ;   {metadata(method data for {method} {0x0000000019375390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d9a8d6: mov    0xdc(%rax),%esi
  0x0000000002d9a8dc: add    $0x8,%esi
  0x0000000002d9a8df: mov    %esi,0xdc(%rax)
  0x0000000002d9a8e5: movabs $0x19375388,%rax   ;   {metadata({method} {0x0000000019375390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d9a8ef: and    $0x1ff8,%esi
  0x0000000002d9a8f5: cmp    $0x0,%esi
  0x0000000002d9a8f8: je     0x0000000002d9ab08  ;*iload_1
                                                ; - java.lang.String::lastIndexOf@0 (line 1649)

  0x0000000002d9a8fe: cmp    $0x10000,%r8d
  0x0000000002d9a905: movabs $0x196865f0,%rax   ;   {metadata(method data for {method} {0x0000000019375390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d9a90f: movabs $0x108,%rsi
  0x0000000002d9a919: jge    0x0000000002d9a929
  0x0000000002d9a91f: movabs $0x118,%rsi
  0x0000000002d9a929: mov    (%rax,%rsi,1),%rdi
  0x0000000002d9a92d: lea    0x1(%rdi),%rdi
  0x0000000002d9a931: mov    %rdi,(%rax,%rsi,1)
  0x0000000002d9a935: jge    0x0000000002d9aadd  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x0000000002d9a93b: mov    0xc(%rdx),%eax
  0x0000000002d9a93e: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x0000000002d9a942: mov    0xc(%rax),%edx     ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x0000000002d9ab1f
  0x0000000002d9a945: dec    %edx
  0x0000000002d9a947: movabs $0x196865f0,%rsi   ;   {metadata(method data for {method} {0x0000000019375390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d9a951: addq   $0x1,0x128(%rsi)
  0x0000000002d9a959: movabs $0x195628e0,%rsi   ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d9a963: mov    0xdc(%rsi),%edi
  0x0000000002d9a969: add    $0x8,%edi
  0x0000000002d9a96c: mov    %edi,0xdc(%rsi)
  0x0000000002d9a972: movabs $0x194656c8,%rsi   ;   {metadata({method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d9a97c: and    $0x7ffff8,%edi
  0x0000000002d9a982: cmp    $0x0,%edi
  0x0000000002d9a985: je     0x0000000002d9ab24
  0x0000000002d9a98b: cmp    %edx,%r9d
  0x0000000002d9a98e: movabs $0x195628e0,%rsi   ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d9a998: movabs $0x108,%rdi
  0x0000000002d9a9a2: jg     0x0000000002d9a9b2
  0x0000000002d9a9a8: movabs $0x118,%rdi
  0x0000000002d9a9b2: mov    (%rsi,%rdi,1),%rbx
  0x0000000002d9a9b6: lea    0x1(%rbx),%rbx
  0x0000000002d9a9ba: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002d9a9be: jg     0x0000000002d9a9d9  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000002d9a9c4: movabs $0x195628e0,%rdx   ;   {metadata(method data for {method} {0x00000000194656d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002d9a9ce: incl   0x128(%rdx)
  0x0000000002d9a9d4: jmpq   0x0000000002d9aa7e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000002d9a9d9: mov    %rdx,%r9
  0x0000000002d9a9dc: jmpq   0x0000000002d9aa7e  ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000002d9a9e1: nopl   0x0(%rax)
  0x0000000002d9a9e8: movslq %r9d,%rdx
  0x0000000002d9a9eb: cmp    0xc(%rax),%r9d
  0x0000000002d9a9ef: jae    0x0000000002d9ab3b
  0x0000000002d9a9f5: movzwl 0x10(%rax,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x0000000002d9a9fa: cmp    %r8d,%edx
  0x0000000002d9a9fd: movabs $0x196865f0,%rdx   ;   {metadata(method data for {method} {0x0000000019375390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d9aa07: movabs $0x158,%rsi
  0x0000000002d9aa11: jne    0x0000000002d9aa21
  0x0000000002d9aa17: movabs $0x168,%rsi
  0x0000000002d9aa21: mov    (%rdx,%rsi,1),%rdi
  0x0000000002d9aa25: lea    0x1(%rdi),%rdi
  0x0000000002d9aa29: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002d9aa2d: je     0x0000000002d9aabd  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x0000000002d9aa33: dec    %r9d
  0x0000000002d9aa36: movabs $0x196865f0,%rdx   ;   {metadata(method data for {method} {0x0000000019375390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d9aa40: mov    0xe0(%rdx),%esi
  0x0000000002d9aa46: add    $0x8,%esi
  0x0000000002d9aa49: mov    %esi,0xe0(%rdx)
  0x0000000002d9aa4f: movabs $0x19375388,%rdx   ;   {metadata({method} {0x0000000019375390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d9aa59: and    $0xfff8,%esi
  0x0000000002d9aa5f: cmp    $0x0,%esi
  0x0000000002d9aa62: je     0x0000000002d9ab44  ; OopMap{rax=Oop off=456}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x0000000002d9aa68: test   %eax,-0x40a96e(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d9aa6e: movabs $0x196865f0,%rdx   ;   {metadata(method data for {method} {0x0000000019375390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d9aa78: incl   0x178(%rdx)        ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x0000000002d9aa7e: cmp    $0x0,%r9d
  0x0000000002d9aa82: movabs $0x196865f0,%rdx   ;   {metadata(method data for {method} {0x0000000019375390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d9aa8c: movabs $0x138,%rsi
  0x0000000002d9aa96: jl     0x0000000002d9aaa6
  0x0000000002d9aa9c: movabs $0x148,%rsi
  0x0000000002d9aaa6: mov    (%rdx,%rsi,1),%rdi
  0x0000000002d9aaaa: lea    0x1(%rdi),%rdi
  0x0000000002d9aaae: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002d9aab2: jl     0x0000000002d9aacc
  0x0000000002d9aab8: jmpq   0x0000000002d9a9e8  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x0000000002d9aabd: mov    %r9,%rax
  0x0000000002d9aac0: add    $0x40,%rsp
  0x0000000002d9aac4: pop    %rbp
  0x0000000002d9aac5: test   %eax,-0x40a9cb(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9aacb: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@36 (line 1656)

  0x0000000002d9aacc: mov    $0xffffffff,%eax
  0x0000000002d9aad1: add    $0x40,%rsp
  0x0000000002d9aad5: pop    %rbp
  0x0000000002d9aad6: test   %eax,-0x40a9dc(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9aadc: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@44 (line 1659)

  0x0000000002d9aadd: mov    %rdx,%rsi
  0x0000000002d9aae0: movabs $0x196865f0,%rdi   ;   {metadata(method data for {method} {0x0000000019375390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d9aaea: addq   $0x1,0x190(%rdi)
  0x0000000002d9aaf2: nop
  0x0000000002d9aaf3: nop
  0x0000000002d9aaf4: nop
  0x0000000002d9aaf5: nop
  0x0000000002d9aaf6: nop
  0x0000000002d9aaf7: callq  0x0000000002cb61a0  ; OopMap{off=604}
                                                ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)
                                                ;   {optimized virtual_call}
  0x0000000002d9aafc: add    $0x40,%rsp
  0x0000000002d9ab00: pop    %rbp
  0x0000000002d9ab01: test   %eax,-0x40aa07(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9ab07: retq   
  0x0000000002d9ab08: mov    %rax,0x8(%rsp)
  0x0000000002d9ab0d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9ab15: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=634}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)
                                                ;   {runtime_call}
  0x0000000002d9ab1a: jmpq   0x0000000002d9a8fe
  0x0000000002d9ab1f: callq  0x0000000002cdff40  ; OopMap{rax=Oop off=644}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x0000000002d9ab24: mov    %rsi,0x8(%rsp)
  0x0000000002d9ab29: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9ab31: callq  0x0000000002d710e0  ; OopMap{rax=Oop off=662}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)
                                                ;   {runtime_call}
  0x0000000002d9ab36: jmpq   0x0000000002d9a98b
  0x0000000002d9ab3b: mov    %r9,(%rsp)
  0x0000000002d9ab3f: callq  0x0000000002ce0600  ; OopMap{rax=Oop off=676}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x0000000002d9ab44: mov    %rdx,0x8(%rsp)
  0x0000000002d9ab49: movq   $0x28,(%rsp)
  0x0000000002d9ab51: callq  0x0000000002d710e0  ; OopMap{rax=Oop off=694}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)
                                                ;   {runtime_call}
  0x0000000002d9ab56: jmpq   0x0000000002d9aa68
  0x0000000002d9ab5b: nop
  0x0000000002d9ab5c: nop
  0x0000000002d9ab5d: mov    0x2a8(%r15),%rax
  0x0000000002d9ab64: movabs $0x0,%r10
  0x0000000002d9ab6e: mov    %r10,0x2a8(%r15)
  0x0000000002d9ab75: movabs $0x0,%r10
  0x0000000002d9ab7f: mov    %r10,0x2b0(%r15)
  0x0000000002d9ab86: add    $0x40,%rsp
  0x0000000002d9ab8a: pop    %rbp
  0x0000000002d9ab8b: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9ab90: hlt    
  0x0000000002d9ab91: hlt    
  0x0000000002d9ab92: hlt    
  0x0000000002d9ab93: hlt    
  0x0000000002d9ab94: hlt    
  0x0000000002d9ab95: hlt    
  0x0000000002d9ab96: hlt    
  0x0000000002d9ab97: hlt    
  0x0000000002d9ab98: hlt    
  0x0000000002d9ab99: hlt    
  0x0000000002d9ab9a: hlt    
  0x0000000002d9ab9b: hlt    
  0x0000000002d9ab9c: hlt    
  0x0000000002d9ab9d: hlt    
  0x0000000002d9ab9e: hlt    
  0x0000000002d9ab9f: hlt    
[Stub Code]
  0x0000000002d9aba0: nop                       ;   {no_reloc}
  0x0000000002d9aba1: nop
  0x0000000002d9aba2: nop
  0x0000000002d9aba3: nop
  0x0000000002d9aba4: nop
  0x0000000002d9aba5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9abaf: jmpq   0x0000000002d9abaf  ;   {runtime_call}
[Exception Handler]
  0x0000000002d9abb4: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d9abb9: mov    %rsp,-0x28(%rsp)
  0x0000000002d9abbe: sub    $0x80,%rsp
  0x0000000002d9abc5: mov    %rax,0x78(%rsp)
  0x0000000002d9abca: mov    %rcx,0x70(%rsp)
  0x0000000002d9abcf: mov    %rdx,0x68(%rsp)
  0x0000000002d9abd4: mov    %rbx,0x60(%rsp)
  0x0000000002d9abd9: mov    %rbp,0x50(%rsp)
  0x0000000002d9abde: mov    %rsi,0x48(%rsp)
  0x0000000002d9abe3: mov    %rdi,0x40(%rsp)
  0x0000000002d9abe8: mov    %r8,0x38(%rsp)
  0x0000000002d9abed: mov    %r9,0x30(%rsp)
  0x0000000002d9abf2: mov    %r10,0x28(%rsp)
  0x0000000002d9abf7: mov    %r11,0x20(%rsp)
  0x0000000002d9abfc: mov    %r12,0x18(%rsp)
  0x0000000002d9ac01: mov    %r13,0x10(%rsp)
  0x0000000002d9ac06: mov    %r14,0x8(%rsp)
  0x0000000002d9ac0b: mov    %r15,(%rsp)
  0x0000000002d9ac0f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d9ac19: movabs $0x2d9abb9,%rdx    ;   {internal_word}
  0x0000000002d9ac23: mov    %rsp,%r8
  0x0000000002d9ac26: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9ac2a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9ac2f: hlt    
[Deopt Handler Code]
  0x0000000002d9ac30: movabs $0x2d9ac30,%r10    ;   {section_word}
  0x0000000002d9ac3a: push   %r10
  0x0000000002d9ac3c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d9ac41: hlt    
  0x0000000002d9ac42: hlt    
  0x0000000002d9ac43: hlt    
  0x0000000002d9ac44: hlt    
  0x0000000002d9ac45: hlt    
  0x0000000002d9ac46: hlt    
  0x0000000002d9ac47: hlt    
<nmethod compile_id='55' compiler='C1' level='3' entry='0x0000000002d9a8a0' size='1912' address='0x0000000002d9a710' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1352' scopes_pcs_offset='1536' dependencies_offset='1888' nul_chk_table_offset='1896' method='java/lang/String lastIndexOf (II)I' bytes='52' count='167' backedge_count='6739' iicount='167' stamp='7.521'/>
<writer thread='21476'/>
<task_queued compile_id='59' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='768' iicount='768' level='3' stamp='7.521' comment='tiered' hot_count='768'/>
<task_queued compile_id='60' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='256' iicount='256' level='1' stamp='7.521' comment='tiered' hot_count='256'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d9a2d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019374e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d9a440: mov    0x8(%rdx),%r10d
  0x0000000002d9a444: shl    $0x3,%r10
  0x0000000002d9a448: cmp    %rax,%r10
  0x0000000002d9a44b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d9a451: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d9a45c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d9a460: mov    %eax,-0x6000(%rsp)
  0x0000000002d9a467: push   %rbp
  0x0000000002d9a468: sub    $0x30,%rsp
  0x0000000002d9a46c: movabs $0x19623ba8,%r9    ;   {metadata(method data for {method} {0x0000000019374e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d9a476: mov    0xdc(%r9),%esi
  0x0000000002d9a47d: add    $0x8,%esi
  0x0000000002d9a480: mov    %esi,0xdc(%r9)
  0x0000000002d9a487: movabs $0x19374e48,%r9    ;   {metadata({method} {0x0000000019374e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d9a491: and    $0x1ff8,%esi
  0x0000000002d9a497: cmp    $0x0,%esi
  0x0000000002d9a49a: je     0x0000000002d9a54b  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x0000000002d9a4a0: mov    %rdx,%r9
  0x0000000002d9a4a3: movabs $0x19623ba8,%rsi   ;   {metadata(method data for {method} {0x0000000019374e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002d9a4ad: mov    0x8(%r9),%r9d
  0x0000000002d9a4b1: shl    $0x3,%r9
  0x0000000002d9a4b5: cmp    0x110(%rsi),%r9
  0x0000000002d9a4bc: jne    0x0000000002d9a4cb
  0x0000000002d9a4be: addq   $0x1,0x118(%rsi)
  0x0000000002d9a4c6: jmpq   0x0000000002d9a531
  0x0000000002d9a4cb: cmp    0x120(%rsi),%r9
  0x0000000002d9a4d2: jne    0x0000000002d9a4e1
  0x0000000002d9a4d4: addq   $0x1,0x128(%rsi)
  0x0000000002d9a4dc: jmpq   0x0000000002d9a531
  0x0000000002d9a4e1: cmpq   $0x0,0x110(%rsi)
  0x0000000002d9a4ec: jne    0x0000000002d9a505
  0x0000000002d9a4ee: mov    %r9,0x110(%rsi)
  0x0000000002d9a4f5: movq   $0x1,0x118(%rsi)
  0x0000000002d9a500: jmpq   0x0000000002d9a531
  0x0000000002d9a505: cmpq   $0x0,0x120(%rsi)
  0x0000000002d9a510: jne    0x0000000002d9a529
  0x0000000002d9a512: mov    %r9,0x120(%rsi)
  0x0000000002d9a519: movq   $0x1,0x128(%rsi)
  0x0000000002d9a524: jmpq   0x0000000002d9a531
  0x0000000002d9a529: addq   $0x1,0x108(%rsi)
  0x0000000002d9a531: mov    $0x0,%r9d          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x0000000002d9a537: callq  0x0000000002cb61a0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x0000000002d9a53c: and    $0x1,%eax
  0x0000000002d9a53f: add    $0x30,%rsp
  0x0000000002d9a543: pop    %rbp
  0x0000000002d9a544: test   %eax,-0x40a44a(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9a54a: retq   
  0x0000000002d9a54b: mov    %r9,0x8(%rsp)
  0x0000000002d9a550: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9a558: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x0000000002d9a55d: jmpq   0x0000000002d9a4a0
  0x0000000002d9a562: nop
  0x0000000002d9a563: nop
  0x0000000002d9a564: mov    0x2a8(%r15),%rax
  0x0000000002d9a56b: movabs $0x0,%r10
  0x0000000002d9a575: mov    %r10,0x2a8(%r15)
  0x0000000002d9a57c: movabs $0x0,%r10
  0x0000000002d9a586: mov    %r10,0x2b0(%r15)
  0x0000000002d9a58d: add    $0x30,%rsp
  0x0000000002d9a591: pop    %rbp
  0x0000000002d9a592: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9a597: hlt    
  0x0000000002d9a598: hlt    
  0x0000000002d9a599: hlt    
  0x0000000002d9a59a: hlt    
  0x0000000002d9a59b: hlt    
  0x0000000002d9a59c: hlt    
  0x0000000002d9a59d: hlt    
  0x0000000002d9a59e: hlt    
  0x0000000002d9a59f: hlt    
[Stub Code]
  0x0000000002d9a5a0: nop                       ;   {no_reloc}
  0x0000000002d9a5a1: nop
  0x0000000002d9a5a2: nop
  0x0000000002d9a5a3: nop
  0x0000000002d9a5a4: nop
  0x0000000002d9a5a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9a5af: jmpq   0x0000000002d9a5af  ;   {runtime_call}
[Exception Handler]
  0x0000000002d9a5b4: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d9a5b9: mov    %rsp,-0x28(%rsp)
  0x0000000002d9a5be: sub    $0x80,%rsp
  0x0000000002d9a5c5: mov    %rax,0x78(%rsp)
  0x0000000002d9a5ca: mov    %rcx,0x70(%rsp)
  0x0000000002d9a5cf: mov    %rdx,0x68(%rsp)
  0x0000000002d9a5d4: mov    %rbx,0x60(%rsp)
  0x0000000002d9a5d9: mov    %rbp,0x50(%rsp)
  0x0000000002d9a5de: mov    %rsi,0x48(%rsp)
  0x0000000002d9a5e3: mov    %rdi,0x40(%rsp)
  0x0000000002d9a5e8: mov    %r8,0x38(%rsp)
  0x0000000002d9a5ed: mov    %r9,0x30(%rsp)
  0x0000000002d9a5f2: mov    %r10,0x28(%rsp)
  0x0000000002d9a5f7: mov    %r11,0x20(%rsp)
  0x0000000002d9a5fc: mov    %r12,0x18(%rsp)
  0x0000000002d9a601: mov    %r13,0x10(%rsp)
  0x0000000002d9a606: mov    %r14,0x8(%rsp)
  0x0000000002d9a60b: mov    %r15,(%rsp)
  0x0000000002d9a60f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d9a619: movabs $0x2d9a5b9,%rdx    ;   {internal_word}
  0x0000000002d9a623: mov    %rsp,%r8
  0x0000000002d9a626: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9a62a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9a62f: hlt    
[Deopt Handler Code]
  0x0000000002d9a630: movabs $0x2d9a630,%r10    ;   {section_word}
  0x0000000002d9a63a: push   %r10
  0x0000000002d9a63c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d9a641: hlt    
  0x0000000002d9a642: hlt    
  0x0000000002d9a643: hlt    
  0x0000000002d9a644: hlt    
  0x0000000002d9a645: hlt    
  0x0000000002d9a646: hlt    
  0x0000000002d9a647: hlt    
<nmethod compile_id='59' compiler='C1' level='3' entry='0x0000000002d9a440' size='1040' address='0x0000000002d9a2d0' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='780' iicount='780' stamp='7.528'/>
Decoding compiled method 0x0000000002d99fd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019405680} &apos;position&apos; &apos;()I&apos; in &apos;java/nio/Buffer&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d9a120: mov    0x8(%rdx),%r10d
  0x0000000002d9a124: shl    $0x3,%r10
  0x0000000002d9a128: cmp    %rax,%r10
  0x0000000002d9a12b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d9a131: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d9a13c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d9a140: mov    %eax,-0x6000(%rsp)
  0x0000000002d9a147: push   %rbp
  0x0000000002d9a148: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.nio.Buffer::position@0 (line 226)

  0x0000000002d9a14c: mov    0x18(%rdx),%eax    ;*getfield position
                                                ; - java.nio.Buffer::position@1 (line 226)

  0x0000000002d9a14f: add    $0x30,%rsp
  0x0000000002d9a153: pop    %rbp
  0x0000000002d9a154: test   %eax,-0x40a05a(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9a15a: retq   
  0x0000000002d9a15b: nop
  0x0000000002d9a15c: nop
  0x0000000002d9a15d: mov    0x2a8(%r15),%rax
  0x0000000002d9a164: movabs $0x0,%r10
  0x0000000002d9a16e: mov    %r10,0x2a8(%r15)
  0x0000000002d9a175: movabs $0x0,%r10
  0x0000000002d9a17f: mov    %r10,0x2b0(%r15)
  0x0000000002d9a186: add    $0x30,%rsp
  0x0000000002d9a18a: pop    %rbp
  0x0000000002d9a18b: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9a190: hlt    
  0x0000000002d9a191: hlt    
  0x0000000002d9a192: hlt    
  0x0000000002d9a193: hlt    
  0x0000000002d9a194: hlt    
  0x0000000002d9a195: hlt    
  0x0000000002d9a196: hlt    
  0x0000000002d9a197: hlt    
  0x0000000002d9a198: hlt    
  0x0000000002d9a199: hlt    
  0x0000000002d9a19a: hlt    
  0x0000000002d9a19b: hlt    
  0x0000000002d9a19c: hlt    
  0x0000000002d9a19d: hlt    
  0x0000000002d9a19e: hlt    
  0x0000000002d9a19f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d9a1a0: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d9a1a5: mov    %rsp,-0x28(%rsp)
  0x0000000002d9a1aa: sub    $0x80,%rsp
  0x0000000002d9a1b1: mov    %rax,0x78(%rsp)
  0x0000000002d9a1b6: mov    %rcx,0x70(%rsp)
  0x0000000002d9a1bb: mov    %rdx,0x68(%rsp)
  0x0000000002d9a1c0: mov    %rbx,0x60(%rsp)
  0x0000000002d9a1c5: mov    %rbp,0x50(%rsp)
  0x0000000002d9a1ca: mov    %rsi,0x48(%rsp)
  0x0000000002d9a1cf: mov    %rdi,0x40(%rsp)
  0x0000000002d9a1d4: mov    %r8,0x38(%rsp)
  0x0000000002d9a1d9: mov    %r9,0x30(%rsp)
  0x0000000002d9a1de: mov    %r10,0x28(%rsp)
  0x0000000002d9a1e3: mov    %r11,0x20(%rsp)
  0x0000000002d9a1e8: mov    %r12,0x18(%rsp)
  0x0000000002d9a1ed: mov    %r13,0x10(%rsp)
  0x0000000002d9a1f2: mov    %r14,0x8(%rsp)
  0x0000000002d9a1f7: mov    %r15,(%rsp)
  0x0000000002d9a1fb: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d9a205: movabs $0x2d9a1a5,%rdx    ;   {internal_word}
  0x0000000002d9a20f: mov    %rsp,%r8
  0x0000000002d9a212: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9a216: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9a21b: hlt    
[Deopt Handler Code]
  0x0000000002d9a21c: movabs $0x2d9a21c,%r10    ;   {section_word}
  0x0000000002d9a226: push   %r10
  0x0000000002d9a228: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d9a22d: hlt    
  0x0000000002d9a22e: hlt    
  0x0000000002d9a22f: hlt    
<nmethod compile_id='58' compiler='C1' level='1' entry='0x0000000002d9a120' size='704' address='0x0000000002d99fd0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/nio/Buffer position ()I' bytes='5' count='279' iicount='279' stamp='7.629'/>
Decoding compiled method 0x0000000002d998d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019459740} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x90]  (sp of caller)
  0x0000000002d99a60: mov    0x8(%rdx),%r10d
  0x0000000002d99a64: shl    $0x3,%r10
  0x0000000002d99a68: cmp    %rax,%r10
  0x0000000002d99a6b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d99a71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d99a7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d99a80: mov    %eax,-0x6000(%rsp)
  0x0000000002d99a87: push   %rbp
  0x0000000002d99a88: sub    $0x80,%rsp
  0x0000000002d99a8f: movabs $0x19687f50,%rsi   ;   {metadata(method data for {method} {0x0000000019459740} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d99a99: mov    0xdc(%rsi),%edi
  0x0000000002d99a9f: add    $0x8,%edi
  0x0000000002d99aa2: mov    %edi,0xdc(%rsi)
  0x0000000002d99aa8: movabs $0x19459738,%rsi   ;   {metadata({method} {0x0000000019459740} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d99ab2: and    $0x1ff8,%edi
  0x0000000002d99ab8: cmp    $0x0,%edi
  0x0000000002d99abb: je     0x0000000002d99ceb  ;*aload_0
                                                ; - java.util.HashMap::put@0 (line 612)

  0x0000000002d99ac1: movabs $0x19687f50,%rsi   ;   {metadata(method data for {method} {0x0000000019459740} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d99acb: addq   $0x1,0x108(%rsi)
  0x0000000002d99ad3: movabs $0x19657650,%rsi   ;   {metadata(method data for {method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d99add: mov    0xdc(%rsi),%edi
  0x0000000002d99ae3: add    $0x8,%edi
  0x0000000002d99ae6: mov    %edi,0xdc(%rsi)
  0x0000000002d99aec: movabs $0x19458c48,%rsi   ;   {metadata({method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d99af6: and    $0x7ffff8,%edi
  0x0000000002d99afc: cmp    $0x0,%edi
  0x0000000002d99aff: je     0x0000000002d99d02
  0x0000000002d99b05: cmp    $0x0,%r8
  0x0000000002d99b09: movabs $0x19657650,%rsi   ;   {metadata(method data for {method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d99b13: movabs $0x108,%rdi
  0x0000000002d99b1d: jne    0x0000000002d99b2d
  0x0000000002d99b23: movabs $0x118,%rdi
  0x0000000002d99b2d: mov    (%rsi,%rdi,1),%rbx
  0x0000000002d99b31: lea    0x1(%rbx),%rbx
  0x0000000002d99b35: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002d99b39: jne    0x0000000002d99b68  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)

  0x0000000002d99b3f: movabs $0x19657650,%rsi   ;   {metadata(method data for {method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d99b49: incl   0x128(%rsi)
  0x0000000002d99b4f: mov    $0x0,%esi
  0x0000000002d99b54: mov    %r9,0x68(%rsp)
  0x0000000002d99b59: mov    %r8,0x60(%rsp)
  0x0000000002d99b5e: mov    %rdx,0x58(%rsp)
  0x0000000002d99b63: jmpq   0x0000000002d99c29  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)

  0x0000000002d99b68: mov    %r9,0x68(%rsp)
  0x0000000002d99b6d: mov    %rdx,0x58(%rsp)
  0x0000000002d99b72: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x0000000002d99d19
  0x0000000002d99b75: mov    %r8,%rsi
  0x0000000002d99b78: movabs $0x19657650,%rdi   ;   {metadata(method data for {method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d99b82: mov    0x8(%rsi),%esi
  0x0000000002d99b85: shl    $0x3,%rsi
  0x0000000002d99b89: cmp    0x148(%rdi),%rsi
  0x0000000002d99b90: jne    0x0000000002d99b9f
  0x0000000002d99b92: addq   $0x1,0x150(%rdi)
  0x0000000002d99b9a: jmpq   0x0000000002d99c05
  0x0000000002d99b9f: cmp    0x158(%rdi),%rsi
  0x0000000002d99ba6: jne    0x0000000002d99bb5
  0x0000000002d99ba8: addq   $0x1,0x160(%rdi)
  0x0000000002d99bb0: jmpq   0x0000000002d99c05
  0x0000000002d99bb5: cmpq   $0x0,0x148(%rdi)
  0x0000000002d99bc0: jne    0x0000000002d99bd9
  0x0000000002d99bc2: mov    %rsi,0x148(%rdi)
  0x0000000002d99bc9: movq   $0x1,0x150(%rdi)
  0x0000000002d99bd4: jmpq   0x0000000002d99c05
  0x0000000002d99bd9: cmpq   $0x0,0x158(%rdi)
  0x0000000002d99be4: jne    0x0000000002d99bfd
  0x0000000002d99be6: mov    %rsi,0x158(%rdi)
  0x0000000002d99bed: movq   $0x1,0x160(%rdi)
  0x0000000002d99bf8: jmpq   0x0000000002d99c05
  0x0000000002d99bfd: addq   $0x1,0x140(%rdi)
  0x0000000002d99c05: mov    %r8,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)

  0x0000000002d99c08: mov    %r8,0x60(%rsp)
  0x0000000002d99c0d: movabs $0xffffffffffffffff,%rax
  0x0000000002d99c17: callq  0x0000000002cb63e0  ; OopMap{[88]=Oop [104]=Oop [96]=Oop off=444}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ;   {virtual_call}
  0x0000000002d99c1c: mov    %rax,%r8
  0x0000000002d99c1f: shr    $0x10,%r8d
  0x0000000002d99c23: xor    %rax,%r8
  0x0000000002d99c26: mov    %r8,%rsi           ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)

  0x0000000002d99c29: mov    0x68(%rsp),%rdi
  0x0000000002d99c2e: mov    0x60(%rsp),%r9
  0x0000000002d99c33: mov    0x58(%rsp),%rdx
  0x0000000002d99c38: mov    %rdx,%r8
  0x0000000002d99c3b: movabs $0x19687f50,%rcx   ;   {metadata(method data for {method} {0x0000000019459740} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d99c45: mov    0x8(%r8),%r8d
  0x0000000002d99c49: shl    $0x3,%r8
  0x0000000002d99c4d: cmp    0x120(%rcx),%r8
  0x0000000002d99c54: jne    0x0000000002d99c63
  0x0000000002d99c56: addq   $0x1,0x128(%rcx)
  0x0000000002d99c5e: jmpq   0x0000000002d99cc9
  0x0000000002d99c63: cmp    0x130(%rcx),%r8
  0x0000000002d99c6a: jne    0x0000000002d99c79
  0x0000000002d99c6c: addq   $0x1,0x138(%rcx)
  0x0000000002d99c74: jmpq   0x0000000002d99cc9
  0x0000000002d99c79: cmpq   $0x0,0x120(%rcx)
  0x0000000002d99c84: jne    0x0000000002d99c9d
  0x0000000002d99c86: mov    %r8,0x120(%rcx)
  0x0000000002d99c8d: movq   $0x1,0x128(%rcx)
  0x0000000002d99c98: jmpq   0x0000000002d99cc9
  0x0000000002d99c9d: cmpq   $0x0,0x130(%rcx)
  0x0000000002d99ca8: jne    0x0000000002d99cc1
  0x0000000002d99caa: mov    %r8,0x130(%rcx)
  0x0000000002d99cb1: movq   $0x1,0x138(%rcx)
  0x0000000002d99cbc: jmpq   0x0000000002d99cc9
  0x0000000002d99cc1: addq   $0x1,0x118(%rcx)
  0x0000000002d99cc9: mov    %rsi,%r8
  0x0000000002d99ccc: mov    $0x0,%esi
  0x0000000002d99cd1: mov    $0x1,%ecx          ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 612)

  0x0000000002d99cd6: nop
  0x0000000002d99cd7: callq  0x0000000002cb61a0  ; OopMap{off=636}
                                                ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 612)
                                                ;   {optimized virtual_call}
  0x0000000002d99cdc: add    $0x80,%rsp
  0x0000000002d99ce3: pop    %rbp
  0x0000000002d99ce4: test   %eax,-0x409bea(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d99cea: retq   
  0x0000000002d99ceb: mov    %rsi,0x8(%rsp)
  0x0000000002d99cf0: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d99cf8: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop r9=Oop off=669}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 612)
                                                ;   {runtime_call}
  0x0000000002d99cfd: jmpq   0x0000000002d99ac1
  0x0000000002d99d02: mov    %rsi,0x8(%rsp)
  0x0000000002d99d07: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d99d0f: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop r9=Oop off=692}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ;   {runtime_call}
  0x0000000002d99d14: jmpq   0x0000000002d99b05
  0x0000000002d99d19: callq  0x0000000002cdff40  ; OopMap{r8=Oop [88]=Oop [104]=Oop off=702}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ;   {runtime_call}
  0x0000000002d99d1e: nop
  0x0000000002d99d1f: nop
  0x0000000002d99d20: mov    0x2a8(%r15),%rax
  0x0000000002d99d27: movabs $0x0,%r10
  0x0000000002d99d31: mov    %r10,0x2a8(%r15)
  0x0000000002d99d38: movabs $0x0,%r10
  0x0000000002d99d42: mov    %r10,0x2b0(%r15)
  0x0000000002d99d49: add    $0x80,%rsp
  0x0000000002d99d50: pop    %rbp
  0x0000000002d99d51: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d99d56: hlt    
  0x0000000002d99d57: hlt    
  0x0000000002d99d58: hlt    
  0x0000000002d99d59: hlt    
  0x0000000002d99d5a: hlt    
  0x0000000002d99d5b: hlt    
  0x0000000002d99d5c: hlt    
  0x0000000002d99d5d: hlt    
  0x0000000002d99d5e: hlt    
  0x0000000002d99d5f: hlt    
[Stub Code]
  0x0000000002d99d60: nop                       ;   {no_reloc}
  0x0000000002d99d61: nop
  0x0000000002d99d62: nop
  0x0000000002d99d63: nop
  0x0000000002d99d64: nop
  0x0000000002d99d65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d99d6f: jmpq   0x0000000002d99d6f  ;   {runtime_call}
  0x0000000002d99d74: nop
  0x0000000002d99d75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d99d7f: jmpq   0x0000000002d99d7f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d99d84: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d99d89: mov    %rsp,-0x28(%rsp)
  0x0000000002d99d8e: sub    $0x80,%rsp
  0x0000000002d99d95: mov    %rax,0x78(%rsp)
  0x0000000002d99d9a: mov    %rcx,0x70(%rsp)
  0x0000000002d99d9f: mov    %rdx,0x68(%rsp)
  0x0000000002d99da4: mov    %rbx,0x60(%rsp)
  0x0000000002d99da9: mov    %rbp,0x50(%rsp)
  0x0000000002d99dae: mov    %rsi,0x48(%rsp)
  0x0000000002d99db3: mov    %rdi,0x40(%rsp)
  0x0000000002d99db8: mov    %r8,0x38(%rsp)
  0x0000000002d99dbd: mov    %r9,0x30(%rsp)
  0x0000000002d99dc2: mov    %r10,0x28(%rsp)
  0x0000000002d99dc7: mov    %r11,0x20(%rsp)
  0x0000000002d99dcc: mov    %r12,0x18(%rsp)
  0x0000000002d99dd1: mov    %r13,0x10(%rsp)
  0x0000000002d99dd6: mov    %r14,0x8(%rsp)
  0x0000000002d99ddb: mov    %r15,(%rsp)
  0x0000000002d99ddf: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d99de9: movabs $0x2d99d89,%rdx    ;   {internal_word}
  0x0000000002d99df3: mov    %rsp,%r8
  0x0000000002d99df6: and    $0xfffffffffffffff0,%rsp
  0x0000000002d99dfa: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d99dff: hlt    
[Deopt Handler Code]
  0x0000000002d99e00: movabs $0x2d99e00,%r10    ;   {section_word}
  0x0000000002d99e0a: push   %r10
  0x0000000002d99e0c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d99e11: hlt    
  0x0000000002d99e12: hlt    
  0x0000000002d99e13: hlt    
  0x0000000002d99e14: hlt    
  0x0000000002d99e15: hlt    
  0x0000000002d99e16: hlt    
  0x0000000002d99e17: hlt    
<nmethod compile_id='50' compiler='C1' level='3' entry='0x0000000002d99a60' size='1752' address='0x0000000002d998d0' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1368' scopes_pcs_offset='1520' dependencies_offset='1728' nul_chk_table_offset='1736' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='409' iicount='409' stamp='7.949'/>
<writer thread='21476'/>
<task_queued compile_id='61' method='sun/instrument/InstrumentationImpl transform (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B' bytes='38' count='256' iicount='256' level='3' stamp='7.952' comment='tiered' hot_count='256'/>
<task_queued compile_id='62' method='sun/instrument/TransformerManager transform (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B' bytes='98' count='256' iicount='256' level='3' stamp='7.952' comment='tiered' hot_count='256'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d99110:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019566e28} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;
  # this:     rdx:rdx   = &apos;sun/instrument/InstrumentationImpl&apos;
  # parm0:    r8:r8     = &apos;java/lang/ClassLoader&apos;
  # parm1:    r9:r9     = &apos;java/lang/String&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Class&apos;
  # parm3:    rsi:rsi   = &apos;java/security/ProtectionDomain&apos;
  # parm4:    rcx:rcx   = &apos;[B&apos;
  # parm5:    [sp+0x50]   = boolean  (sp of caller)
  0x0000000002d99280: mov    0x8(%rdx),%r10d
  0x0000000002d99284: shl    $0x3,%r10
  0x0000000002d99288: cmp    %rax,%r10
  0x0000000002d9928b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d99291: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d9929c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d992a0: mov    %eax,-0x6000(%rsp)
  0x0000000002d992a7: push   %rbp
  0x0000000002d992a8: sub    $0x40,%rsp
  0x0000000002d992ac: movabs $0x19699bc8,%rax   ;   {metadata(method data for {method} {0x0000000019566e28} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x0000000002d992b6: mov    0xdc(%rax),%ebx
  0x0000000002d992bc: add    $0x8,%ebx
  0x0000000002d992bf: mov    %ebx,0xdc(%rax)
  0x0000000002d992c5: movabs $0x19566e20,%rax   ;   {metadata({method} {0x0000000019566e28} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x0000000002d992cf: and    $0x1ff8,%ebx
  0x0000000002d992d5: cmp    $0x0,%ebx
  0x0000000002d992d8: je     0x0000000002d993d0  ;*iload
                                                ; - sun.instrument.InstrumentationImpl::transform@0 (line 422)

  0x0000000002d992de: mov    0x50(%rsp),%eax
  0x0000000002d992e2: cmp    $0x0,%eax
  0x0000000002d992e5: movabs $0x19699bc8,%rax   ;   {metadata(method data for {method} {0x0000000019566e28} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x0000000002d992ef: movabs $0x108,%rbx
  0x0000000002d992f9: je     0x0000000002d99309
  0x0000000002d992ff: movabs $0x118,%rbx
  0x0000000002d99309: mov    (%rax,%rbx,1),%r11
  0x0000000002d9930d: lea    0x1(%r11),%r11
  0x0000000002d99311: mov    %r11,(%rax,%rbx,1)
  0x0000000002d99315: je     0x0000000002d99337  ;*ifeq
                                                ; - sun.instrument.InstrumentationImpl::transform@2 (line 422)

  0x0000000002d9931b: mov    0x1c(%rdx),%eax
  0x0000000002d9931e: shl    $0x3,%rax          ;*getfield mRetransfomableTransformerManager
                                                ; - sun.instrument.InstrumentationImpl::transform@6 (line 422)

  0x0000000002d99322: movabs $0x19699bc8,%rdx   ;   {metadata(method data for {method} {0x0000000019566e28} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x0000000002d9932c: incl   0x128(%rdx)
  0x0000000002d99332: jmpq   0x0000000002d9933e  ;*goto
                                                ; - sun.instrument.InstrumentationImpl::transform@9 (line 422)

  0x0000000002d99337: mov    0x18(%rdx),%eax
  0x0000000002d9933a: shl    $0x3,%rax          ;*getfield mTransformerManager
                                                ; - sun.instrument.InstrumentationImpl::transform@13 (line 422)

  0x0000000002d9933e: cmp    $0x0,%rax
  0x0000000002d99342: movabs $0x19699bc8,%rdx   ;   {metadata(method data for {method} {0x0000000019566e28} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x0000000002d9934c: movabs $0x140,%rbx
  0x0000000002d99356: jne    0x0000000002d99366
  0x0000000002d9935c: movabs $0x150,%rbx
  0x0000000002d99366: mov    (%rdx,%rbx,1),%r11
  0x0000000002d9936a: lea    0x1(%r11),%r11
  0x0000000002d9936e: mov    %r11,(%rdx,%rbx,1)
  0x0000000002d99372: jne    0x0000000002d9938e  ;*ifnonnull
                                                ; - sun.instrument.InstrumentationImpl::transform@20 (line 425)

  0x0000000002d99378: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002d99382: add    $0x40,%rsp
  0x0000000002d99386: pop    %rbp
  0x0000000002d99387: test   %eax,-0x40928d(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9938d: retq                      ;*areturn
                                                ; - sun.instrument.InstrumentationImpl::transform@24 (line 426)

  0x0000000002d9938e: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002d993e7
  0x0000000002d99391: mov    %rax,%rdx
  0x0000000002d99394: movabs $0x19699bc8,%rbx   ;   {metadata(method data for {method} {0x0000000019566e28} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x0000000002d9939e: movabs $0x7c003cf18,%r10  ;   {metadata(&apos;sun/instrument/TransformerManager&apos;)}
  0x0000000002d993a8: mov    %r10,0x168(%rbx)
  0x0000000002d993af: addq   $0x1,0x170(%rbx)
  0x0000000002d993b7: mov    %rax,%rdx          ;*invokevirtual transform
                                                ; - sun.instrument.InstrumentationImpl::transform@34 (line 428)

  0x0000000002d993ba: nop
  0x0000000002d993bb: nop
  0x0000000002d993bc: nop
  0x0000000002d993bd: nop
  0x0000000002d993be: nop
  0x0000000002d993bf: callq  0x0000000002cb61a0  ; OopMap{off=324}
                                                ;*invokevirtual transform
                                                ; - sun.instrument.InstrumentationImpl::transform@34 (line 428)
                                                ;   {optimized virtual_call}
  0x0000000002d993c4: add    $0x40,%rsp
  0x0000000002d993c8: pop    %rbp
  0x0000000002d993c9: test   %eax,-0x4092cf(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d993cf: retq   
  0x0000000002d993d0: mov    %rax,0x8(%rsp)
  0x0000000002d993d5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d993dd: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop r9=Oop rdi=Oop rsi=Oop rcx=Oop off=354}
                                                ;*synchronization entry
                                                ; - sun.instrument.InstrumentationImpl::transform@-1 (line 422)
                                                ;   {runtime_call}
  0x0000000002d993e2: jmpq   0x0000000002d992de
  0x0000000002d993e7: callq  0x0000000002cdff40  ; OopMap{rax=Oop rcx=Oop rsi=Oop rdi=Oop r9=Oop r8=Oop off=364}
                                                ;*invokevirtual transform
                                                ; - sun.instrument.InstrumentationImpl::transform@34 (line 428)
                                                ;   {runtime_call}
  0x0000000002d993ec: nop
  0x0000000002d993ed: nop
  0x0000000002d993ee: mov    0x2a8(%r15),%rax
  0x0000000002d993f5: movabs $0x0,%r10
  0x0000000002d993ff: mov    %r10,0x2a8(%r15)
  0x0000000002d99406: movabs $0x0,%r10
  0x0000000002d99410: mov    %r10,0x2b0(%r15)
  0x0000000002d99417: add    $0x40,%rsp
  0x0000000002d9941b: pop    %rbp
  0x0000000002d9941c: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d99421: hlt    
  0x0000000002d99422: hlt    
  0x0000000002d99423: hlt    
  0x0000000002d99424: hlt    
  0x0000000002d99425: hlt    
  0x0000000002d99426: hlt    
  0x0000000002d99427: hlt    
  0x0000000002d99428: hlt    
  0x0000000002d99429: hlt    
  0x0000000002d9942a: hlt    
  0x0000000002d9942b: hlt    
  0x0000000002d9942c: hlt    
  0x0000000002d9942d: hlt    
  0x0000000002d9942e: hlt    
  0x0000000002d9942f: hlt    
  0x0000000002d99430: hlt    
  0x0000000002d99431: hlt    
  0x0000000002d99432: hlt    
  0x0000000002d99433: hlt    
  0x0000000002d99434: hlt    
  0x0000000002d99435: hlt    
  0x0000000002d99436: hlt    
  0x0000000002d99437: hlt    
  0x0000000002d99438: hlt    
  0x0000000002d99439: hlt    
  0x0000000002d9943a: hlt    
  0x0000000002d9943b: hlt    
  0x0000000002d9943c: hlt    
  0x0000000002d9943d: hlt    
  0x0000000002d9943e: hlt    
  0x0000000002d9943f: hlt    
[Stub Code]
  0x0000000002d99440: nop                       ;   {no_reloc}
  0x0000000002d99441: nop
  0x0000000002d99442: nop
  0x0000000002d99443: nop
  0x0000000002d99444: nop
  0x0000000002d99445: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9944f: jmpq   0x0000000002d9944f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d99454: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d99459: mov    %rsp,-0x28(%rsp)
  0x0000000002d9945e: sub    $0x80,%rsp
  0x0000000002d99465: mov    %rax,0x78(%rsp)
  0x0000000002d9946a: mov    %rcx,0x70(%rsp)
  0x0000000002d9946f: mov    %rdx,0x68(%rsp)
  0x0000000002d99474: mov    %rbx,0x60(%rsp)
  0x0000000002d99479: mov    %rbp,0x50(%rsp)
  0x0000000002d9947e: mov    %rsi,0x48(%rsp)
  0x0000000002d99483: mov    %rdi,0x40(%rsp)
  0x0000000002d99488: mov    %r8,0x38(%rsp)
  0x0000000002d9948d: mov    %r9,0x30(%rsp)
  0x0000000002d99492: mov    %r10,0x28(%rsp)
  0x0000000002d99497: mov    %r11,0x20(%rsp)
  0x0000000002d9949c: mov    %r12,0x18(%rsp)
  0x0000000002d994a1: mov    %r13,0x10(%rsp)
  0x0000000002d994a6: mov    %r14,0x8(%rsp)
  0x0000000002d994ab: mov    %r15,(%rsp)
  0x0000000002d994af: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d994b9: movabs $0x2d99459,%rdx    ;   {internal_word}
  0x0000000002d994c3: mov    %rsp,%r8
  0x0000000002d994c6: and    $0xfffffffffffffff0,%rsp
  0x0000000002d994ca: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d994cf: hlt    
[Deopt Handler Code]
  0x0000000002d994d0: movabs $0x2d994d0,%r10    ;   {section_word}
  0x0000000002d994da: push   %r10
  0x0000000002d994dc: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d994e1: hlt    
  0x0000000002d994e2: hlt    
  0x0000000002d994e3: hlt    
  0x0000000002d994e4: hlt    
  0x0000000002d994e5: hlt    
  0x0000000002d994e6: hlt    
  0x0000000002d994e7: hlt    
<nmethod compile_id='61' compiler='C1' level='3' entry='0x0000000002d99280' size='1344' address='0x0000000002d99110' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='1008' scopes_pcs_offset='1112' dependencies_offset='1320' nul_chk_table_offset='1328' method='sun/instrument/InstrumentationImpl transform (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B' bytes='38' count='260' iicount='260' stamp='8.427'/>
Decoding compiled method 0x0000000002d98710:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019567e98} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;
  # this:     rdx:rdx   = &apos;sun/instrument/TransformerManager&apos;
  # parm0:    r8:r8     = &apos;java/lang/ClassLoader&apos;
  # parm1:    r9:r9     = &apos;java/lang/String&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Class&apos;
  # parm3:    rsi:rsi   = &apos;java/security/ProtectionDomain&apos;
  # parm4:    rcx:rcx   = &apos;[B&apos;
  #           [sp+0xa0]  (sp of caller)
  0x0000000002d988a0: mov    0x8(%rdx),%r10d
  0x0000000002d988a4: shl    $0x3,%r10
  0x0000000002d988a8: cmp    %rax,%r10
  0x0000000002d988ab: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d988b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d988bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d988c0: mov    %eax,-0x6000(%rsp)
  0x0000000002d988c7: push   %rbp
  0x0000000002d988c8: sub    $0x90,%rsp
  0x0000000002d988cf: mov    %r8,0x50(%rsp)
  0x0000000002d988d4: mov    %r9,0x58(%rsp)
  0x0000000002d988d9: mov    %rdi,0x60(%rsp)
  0x0000000002d988de: mov    %rsi,0x48(%rsp)
  0x0000000002d988e3: movabs $0x1969a6b8,%rbx   ;   {metadata(method data for {method} {0x0000000019567e98} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x0000000002d988ed: mov    0xdc(%rbx),%eax
  0x0000000002d988f3: add    $0x8,%eax
  0x0000000002d988f6: mov    %eax,0xdc(%rbx)
  0x0000000002d988fc: movabs $0x19567e90,%rbx   ;   {metadata({method} {0x0000000019567e98} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x0000000002d98906: and    $0x1ff8,%eax
  0x0000000002d9890c: cmp    $0x0,%eax
  0x0000000002d9890f: je     0x0000000002d98c67  ;*iconst_0
                                                ; - sun.instrument.TransformerManager::transform@0 (line 175)

  0x0000000002d98915: mov    %rdx,%rbx
  0x0000000002d98918: movabs $0x1969a6b8,%rax   ;   {metadata(method data for {method} {0x0000000019567e98} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x0000000002d98922: addq   $0x1,0x108(%rax)
  0x0000000002d9892a: mov    0x10(%rdx),%ebx
  0x0000000002d9892d: shl    $0x3,%rbx          ;*getfield mTransformerList
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@1 (line 166)
                                                ; - sun.instrument.TransformerManager::transform@4 (line 177)

  0x0000000002d98931: mov    %rbx,0x78(%rsp)
  0x0000000002d98936: mov    $0x0,%eax
  0x0000000002d9893b: mov    $0x0,%r11d         ;*iload
                                                ; - sun.instrument.TransformerManager::transform@16 (line 182)

  0x0000000002d98941: mov    %rcx,0x68(%rsp)
  0x0000000002d98946: mov    %r11d,0x70(%rsp)
  0x0000000002d9894b: nopl   0x0(%rax,%rax,1)
  0x0000000002d98950: mov    0xc(%rbx),%edx     ;*arraylength
                                                ; - sun.instrument.TransformerManager::transform@20 (line 182)
                                                ; implicit exception: dispatches to 0x0000000002d98c7e
  0x0000000002d98953: cmp    %edx,%eax
  0x0000000002d98955: movabs $0x1969a6b8,%rdx   ;   {metadata(method data for {method} {0x0000000019567e98} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x0000000002d9895f: movabs $0x118,%r13
  0x0000000002d98969: jge    0x0000000002d98979
  0x0000000002d9896f: movabs $0x128,%r13
  0x0000000002d98979: mov    (%rdx,%r13,1),%r14
  0x0000000002d9897d: lea    0x1(%r14),%r14
  0x0000000002d98981: mov    %r14,(%rdx,%r13,1)
  0x0000000002d98985: jge    0x0000000002d98bf2  ;*if_icmpge
                                                ; - sun.instrument.TransformerManager::transform@21 (line 182)

  0x0000000002d9898b: movslq %eax,%rdx
  0x0000000002d9898e: mov    0x10(%rbx,%rdx,4),%edx
  0x0000000002d98992: shl    $0x3,%rdx          ;*aaload
                                                ; - sun.instrument.TransformerManager::transform@28 (line 183)

  0x0000000002d98996: cmp    (%rdx),%rax        ;*invokevirtual transformer
                                                ; - sun.instrument.TransformerManager::transform@33 (line 184)
                                                ; implicit exception: dispatches to 0x0000000002d98c83
  0x0000000002d98999: mov    %rdx,%r13
  0x0000000002d9899c: movabs $0x1969a6b8,%r14   ;   {metadata(method data for {method} {0x0000000019567e98} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x0000000002d989a6: mov    0x8(%r13),%r13d
  0x0000000002d989aa: shl    $0x3,%r13
  0x0000000002d989ae: cmp    0x140(%r14),%r13
  0x0000000002d989b5: jne    0x0000000002d989c4
  0x0000000002d989b7: addq   $0x1,0x148(%r14)
  0x0000000002d989bf: jmpq   0x0000000002d98a2a
  0x0000000002d989c4: cmp    0x150(%r14),%r13
  0x0000000002d989cb: jne    0x0000000002d989da
  0x0000000002d989cd: addq   $0x1,0x158(%r14)
  0x0000000002d989d5: jmpq   0x0000000002d98a2a
  0x0000000002d989da: cmpq   $0x0,0x140(%r14)
  0x0000000002d989e5: jne    0x0000000002d989fe
  0x0000000002d989e7: mov    %r13,0x140(%r14)
  0x0000000002d989ee: movq   $0x1,0x148(%r14)
  0x0000000002d989f9: jmpq   0x0000000002d98a2a
  0x0000000002d989fe: cmpq   $0x0,0x150(%r14)
  0x0000000002d98a09: jne    0x0000000002d98a22
  0x0000000002d98a0b: mov    %r13,0x150(%r14)
  0x0000000002d98a12: movq   $0x1,0x158(%r14)
  0x0000000002d98a1d: jmpq   0x0000000002d98a2a
  0x0000000002d98a22: addq   $0x1,0x138(%r14)
  0x0000000002d98a2a: mov    %eax,0x74(%rsp)
  0x0000000002d98a2e: nop
  0x0000000002d98a2f: nop
  0x0000000002d98a30: nop
  0x0000000002d98a31: nop
  0x0000000002d98a32: nop
  0x0000000002d98a33: nop
  0x0000000002d98a34: nop
  0x0000000002d98a35: movabs $0xffffffffffffffff,%rax
  0x0000000002d98a3f: callq  0x0000000002cb63e0  ; OopMap{[104]=Oop [72]=Oop [96]=Oop [88]=Oop [80]=Oop [120]=Oop off=420}
                                                ;*invokevirtual transformer
                                                ; - sun.instrument.TransformerManager::transform@33 (line 184)
                                                ;   {virtual_call}
  0x0000000002d98a44: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002d98c88
  0x0000000002d98a47: mov    %rax,%r8
  0x0000000002d98a4a: movabs $0x1969a6b8,%r9    ;   {metadata(method data for {method} {0x0000000019567e98} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x0000000002d98a54: mov    0x8(%r8),%r8d
  0x0000000002d98a58: shl    $0x3,%r8
  0x0000000002d98a5c: cmp    0x170(%r9),%r8
  0x0000000002d98a63: jne    0x0000000002d98a72
  0x0000000002d98a65: addq   $0x1,0x178(%r9)
  0x0000000002d98a6d: jmpq   0x0000000002d98ad8
  0x0000000002d98a72: cmp    0x180(%r9),%r8
  0x0000000002d98a79: jne    0x0000000002d98a88
  0x0000000002d98a7b: addq   $0x1,0x188(%r9)
  0x0000000002d98a83: jmpq   0x0000000002d98ad8
  0x0000000002d98a88: cmpq   $0x0,0x170(%r9)
  0x0000000002d98a93: jne    0x0000000002d98aac
  0x0000000002d98a95: mov    %r8,0x170(%r9)
  0x0000000002d98a9c: movq   $0x1,0x178(%r9)
  0x0000000002d98aa7: jmpq   0x0000000002d98ad8
  0x0000000002d98aac: cmpq   $0x0,0x180(%r9)
  0x0000000002d98ab7: jne    0x0000000002d98ad0
  0x0000000002d98ab9: mov    %r8,0x180(%r9)
  0x0000000002d98ac0: movq   $0x1,0x188(%r9)
  0x0000000002d98acb: jmpq   0x0000000002d98ad8
  0x0000000002d98ad0: addq   $0x1,0x168(%r9)
  0x0000000002d98ad8: mov    0x50(%rsp),%r8
  0x0000000002d98add: mov    0x58(%rsp),%r9
  0x0000000002d98ae2: mov    0x60(%rsp),%rdi
  0x0000000002d98ae7: mov    0x48(%rsp),%rsi
  0x0000000002d98aec: mov    0x68(%rsp),%rcx
  0x0000000002d98af1: mov    %rax,%rdx          ;*invokeinterface transform
                                                ; - sun.instrument.TransformerManager::transform@50 (line 188)

  0x0000000002d98af4: nop
  0x0000000002d98af5: movabs $0xffffffffffffffff,%rax
  0x0000000002d98aff: callq  0x0000000002cb63e0  ; OopMap{[104]=Oop [72]=Oop [96]=Oop [88]=Oop [80]=Oop [120]=Oop off=612}
                                                ;*invokeinterface transform
                                                ; - sun.instrument.TransformerManager::transform@50 (line 188)
                                                ;   {virtual_call}
  0x0000000002d98b04: movabs $0x1969a6b8,%rsi   ;   {metadata(method data for {method} {0x0000000019567e98} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x0000000002d98b0e: incl   0x198(%rsi)
  0x0000000002d98b14: jmpq   0x0000000002d98b3e  ;*goto
                                                ; - sun.instrument.TransformerManager::transform@57 (line 197)

  0x0000000002d98b19: mov    0x2a8(%r15),%rax
  0x0000000002d98b20: xor    %r10,%r10
  0x0000000002d98b23: mov    %r10,0x2a8(%r15)
  0x0000000002d98b2a: xor    %r10,%r10
  0x0000000002d98b2d: mov    %r10,0x2b0(%r15)
  0x0000000002d98b34: movabs $0x0,%rax          ;*aload
                                                ; - sun.instrument.TransformerManager::transform@62 (line 199)
                                                ;   {oop(NULL)}
  0x0000000002d98b3e: cmp    $0x0,%rax
  0x0000000002d98b42: movabs $0x1969a6b8,%rsi   ;   {metadata(method data for {method} {0x0000000019567e98} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x0000000002d98b4c: movabs $0x1b0,%rdi
  0x0000000002d98b56: je     0x0000000002d98b66
  0x0000000002d98b5c: movabs $0x1c0,%rdi
  0x0000000002d98b66: mov    (%rsi,%rdi,1),%rbx
  0x0000000002d98b6a: lea    0x1(%rbx),%rbx
  0x0000000002d98b6e: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002d98b72: jne    0x0000000002d98b87  ;*ifnull
                                                ; - sun.instrument.TransformerManager::transform@64 (line 199)

  0x0000000002d98b78: mov    0x68(%rsp),%rcx
  0x0000000002d98b7d: mov    0x70(%rsp),%r11d
  0x0000000002d98b82: jmpq   0x0000000002d98b90
  0x0000000002d98b87: mov    %rax,%rcx
  0x0000000002d98b8a: mov    $0x1,%r11d         ;*iinc
                                                ; - sun.instrument.TransformerManager::transform@74 (line 182)

  0x0000000002d98b90: mov    0x74(%rsp),%eax
  0x0000000002d98b94: inc    %eax
  0x0000000002d98b96: movabs $0x1969a6b8,%rsi   ;   {metadata(method data for {method} {0x0000000019567e98} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x0000000002d98ba0: mov    0xe0(%rsi),%edi
  0x0000000002d98ba6: add    $0x8,%edi
  0x0000000002d98ba9: mov    %edi,0xe0(%rsi)
  0x0000000002d98baf: movabs $0x19567e90,%rsi   ;   {metadata({method} {0x0000000019567e98} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x0000000002d98bb9: and    $0xfff8,%edi
  0x0000000002d98bbf: cmp    $0x0,%edi
  0x0000000002d98bc2: je     0x0000000002d98c8d  ; OopMap{[72]=Oop [96]=Oop [88]=Oop [80]=Oop [120]=Oop rcx=Oop off=808}
                                                ;*goto
                                                ; - sun.instrument.TransformerManager::transform@77 (line 182)

  0x0000000002d98bc8: test   %eax,-0x408ace(%rip)        # 0x0000000002990100
                                                ;   {poll}
  0x0000000002d98bce: movabs $0x1969a6b8,%rsi   ;   {metadata(method data for {method} {0x0000000019567e98} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x0000000002d98bd8: incl   0x1d0(%rsi)
  0x0000000002d98bde: mov    %rcx,0x68(%rsp)
  0x0000000002d98be3: mov    %r11d,0x70(%rsp)
  0x0000000002d98be8: mov    0x78(%rsp),%rbx
  0x0000000002d98bed: jmpq   0x0000000002d98950  ;*goto
                                                ; - sun.instrument.TransformerManager::transform@77 (line 182)

  0x0000000002d98bf2: mov    0x68(%rsp),%rcx
  0x0000000002d98bf7: mov    0x70(%rsp),%r11d
  0x0000000002d98bfc: cmp    $0x0,%r11d
  0x0000000002d98c00: movabs $0x1969a6b8,%rax   ;   {metadata(method data for {method} {0x0000000019567e98} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x0000000002d98c0a: movabs $0x1e8,%rsi
  0x0000000002d98c14: je     0x0000000002d98c24
  0x0000000002d98c1a: movabs $0x1f8,%rsi
  0x0000000002d98c24: mov    (%rax,%rsi,1),%rdi
  0x0000000002d98c28: lea    0x1(%rdi),%rdi
  0x0000000002d98c2c: mov    %rdi,(%rax,%rsi,1)
  0x0000000002d98c30: je     0x0000000002d98c4b  ;*ifeq
                                                ; - sun.instrument.TransformerManager::transform@82 (line 208)

  0x0000000002d98c36: movabs $0x1969a6b8,%rax   ;   {metadata(method data for {method} {0x0000000019567e98} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x0000000002d98c40: incl   0x208(%rax)
  0x0000000002d98c46: jmpq   0x0000000002d98c55  ;*goto
                                                ; - sun.instrument.TransformerManager::transform@89 (line 209)

  0x0000000002d98c4b: movabs $0x0,%rcx          ;*aload
                                                ; - sun.instrument.TransformerManager::transform@95 (line 215)
                                                ;   {oop(NULL)}
  0x0000000002d98c55: mov    %rcx,%rax
  0x0000000002d98c58: add    $0x90,%rsp
  0x0000000002d98c5f: pop    %rbp
  0x0000000002d98c60: test   %eax,-0x408b66(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d98c66: retq   
  0x0000000002d98c67: mov    %rbx,0x8(%rsp)
  0x0000000002d98c6c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d98c74: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop [80]=Oop r9=Oop [88]=Oop rdi=Oop [96]=Oop rsi=Oop [72]=Oop rcx=Oop off=985}
                                                ;*synchronization entry
                                                ; - sun.instrument.TransformerManager::transform@-1 (line 175)
                                                ;   {runtime_call}
  0x0000000002d98c79: jmpq   0x0000000002d98915
  0x0000000002d98c7e: callq  0x0000000002cdff40  ; OopMap{rbx=Oop [120]=Oop [80]=Oop [104]=Oop [72]=Oop [96]=Oop [88]=Oop off=995}
                                                ;*arraylength
                                                ; - sun.instrument.TransformerManager::transform@20 (line 182)
                                                ;   {runtime_call}
  0x0000000002d98c83: callq  0x0000000002cdff40  ; OopMap{rbx=Oop [120]=Oop [72]=Oop [96]=Oop [88]=Oop [80]=Oop [104]=Oop rdx=Oop off=1000}
                                                ;*invokevirtual transformer
                                                ; - sun.instrument.TransformerManager::transform@33 (line 184)
                                                ;   {runtime_call}
  0x0000000002d98c88: callq  0x0000000002cdff40  ; OopMap{[104]=Oop [72]=Oop [96]=Oop [88]=Oop [80]=Oop [120]=Oop rax=Oop off=1005}
                                                ;*invokeinterface transform
                                                ; - sun.instrument.TransformerManager::transform@50 (line 188)
                                                ;   {runtime_call}
  0x0000000002d98c8d: mov    %rsi,0x8(%rsp)
  0x0000000002d98c92: movq   $0x4d,(%rsp)
  0x0000000002d98c9a: callq  0x0000000002d710e0  ; OopMap{[72]=Oop [96]=Oop [88]=Oop [80]=Oop [120]=Oop rcx=Oop off=1023}
                                                ;*goto
                                                ; - sun.instrument.TransformerManager::transform@77 (line 182)
                                                ;   {runtime_call}
  0x0000000002d98c9f: jmpq   0x0000000002d98bc8
  0x0000000002d98ca4: nop
  0x0000000002d98ca5: nop
  0x0000000002d98ca6: mov    0x2a8(%r15),%rax
  0x0000000002d98cad: movabs $0x0,%r10
  0x0000000002d98cb7: mov    %r10,0x2a8(%r15)
  0x0000000002d98cbe: movabs $0x0,%r10
  0x0000000002d98cc8: mov    %r10,0x2b0(%r15)
  0x0000000002d98ccf: add    $0x90,%rsp
  0x0000000002d98cd6: pop    %rbp
  0x0000000002d98cd7: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d98cdc: hlt    
  0x0000000002d98cdd: hlt    
  0x0000000002d98cde: hlt    
  0x0000000002d98cdf: hlt    
[Stub Code]
  0x0000000002d98ce0: nop                       ;   {no_reloc}
  0x0000000002d98ce1: nop
  0x0000000002d98ce2: nop
  0x0000000002d98ce3: nop
  0x0000000002d98ce4: nop
  0x0000000002d98ce5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d98cef: jmpq   0x0000000002d98cef  ;   {runtime_call}
  0x0000000002d98cf4: nop
  0x0000000002d98cf5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d98cff: jmpq   0x0000000002d98cff  ;   {runtime_call}
[Exception Handler]
  0x0000000002d98d04: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d98d09: mov    %rsp,-0x28(%rsp)
  0x0000000002d98d0e: sub    $0x80,%rsp
  0x0000000002d98d15: mov    %rax,0x78(%rsp)
  0x0000000002d98d1a: mov    %rcx,0x70(%rsp)
  0x0000000002d98d1f: mov    %rdx,0x68(%rsp)
  0x0000000002d98d24: mov    %rbx,0x60(%rsp)
  0x0000000002d98d29: mov    %rbp,0x50(%rsp)
  0x0000000002d98d2e: mov    %rsi,0x48(%rsp)
  0x0000000002d98d33: mov    %rdi,0x40(%rsp)
  0x0000000002d98d38: mov    %r8,0x38(%rsp)
  0x0000000002d98d3d: mov    %r9,0x30(%rsp)
  0x0000000002d98d42: mov    %r10,0x28(%rsp)
  0x0000000002d98d47: mov    %r11,0x20(%rsp)
  0x0000000002d98d4c: mov    %r12,0x18(%rsp)
  0x0000000002d98d51: mov    %r13,0x10(%rsp)
  0x0000000002d98d56: mov    %r14,0x8(%rsp)
  0x0000000002d98d5b: mov    %r15,(%rsp)
  0x0000000002d98d5f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d98d69: movabs $0x2d98d09,%rdx    ;   {internal_word}
  0x0000000002d98d73: mov    %rsp,%r8
  0x0000000002d98d76: and    $0xfffffffffffffff0,%rsp
  0x0000000002d98d7a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d98d7f: hlt    
[Deopt Handler Code]
  0x0000000002d98d80: movabs $0x2d98d80,%r10    ;   {section_word}
  0x0000000002d98d8a: push   %r10
  0x0000000002d98d8c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d98d91: hlt    
  0x0000000002d98d92: hlt    
  0x0000000002d98d93: hlt    
  0x0000000002d98d94: hlt    
  0x0000000002d98d95: hlt    
  0x0000000002d98d96: hlt    
  0x0000000002d98d97: hlt    
<nmethod compile_id='62' compiler='C1' level='3' entry='0x0000000002d988a0' size='2528' address='0x0000000002d98710' relocation_offset='288' insts_offset='400' stub_offset='1488' scopes_data_offset='1704' scopes_pcs_offset='2024' dependencies_offset='2440' handler_table_offset='2448' nul_chk_table_offset='2496' method='sun/instrument/TransformerManager transform (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B' bytes='98' count='260' iicount='260' stamp='8.510'/>
<writer thread='21476'/>
<task_queued compile_id='63' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='384' iicount='384' level='3' stamp='8.510' comment='tiered' hot_count='384'/>
<task_queued compile_id='64' method='sun/util/locale/LocaleUtils isUpper (C)Z' bytes='18' count='256' iicount='256' level='3' stamp='8.510' comment='tiered' hot_count='256'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d98290:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001945db50} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap$Node&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d983e0: mov    0x8(%rdx),%r10d
  0x0000000002d983e4: shl    $0x3,%r10
  0x0000000002d983e8: cmp    %rax,%r10
  0x0000000002d983eb: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d983f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d983fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d98400: mov    %eax,-0x6000(%rsp)
  0x0000000002d98407: push   %rbp
  0x0000000002d98408: sub    $0x30,%rsp
  0x0000000002d9840c: movabs $0x1969f4d0,%rbx   ;   {metadata(method data for {method} {0x000000001945db50} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002d98416: mov    0xdc(%rbx),%eax
  0x0000000002d9841c: add    $0x8,%eax
  0x0000000002d9841f: mov    %eax,0xdc(%rbx)
  0x0000000002d98425: movabs $0x1945db48,%rbx   ;   {metadata({method} {0x000000001945db50} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002d9842f: and    $0x1ff8,%eax
  0x0000000002d98435: cmp    $0x0,%eax
  0x0000000002d98438: je     0x0000000002d984de  ;*aload_0
                                                ; - java.util.HashMap$Node::&lt;init&gt;@0 (line 285)

  0x0000000002d9843e: mov    %rdx,%rbx
  0x0000000002d98441: movabs $0x1969f4d0,%rax   ;   {metadata(method data for {method} {0x000000001945db50} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002d9844b: addq   $0x1,0x108(%rax)
  0x0000000002d98453: movabs $0x194a47d8,%rbx   ;   {metadata(method data for {method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d9845d: mov    0xdc(%rbx),%eax
  0x0000000002d98463: add    $0x8,%eax
  0x0000000002d98466: mov    %eax,0xdc(%rbx)
  0x0000000002d9846c: movabs $0x19370480,%rbx   ;   {metadata({method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d98476: and    $0x7ffff8,%eax
  0x0000000002d9847c: cmp    $0x0,%eax
  0x0000000002d9847f: je     0x0000000002d984f5
  0x0000000002d98485: mov    %r8d,0xc(%rdx)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 286)

  0x0000000002d98489: mov    %r9,%r10
  0x0000000002d9848c: shr    $0x3,%r10
  0x0000000002d98490: mov    %r10d,0x10(%rdx)
  0x0000000002d98494: mov    %rdx,%rbx
  0x0000000002d98497: shr    $0x9,%rbx
  0x0000000002d9849b: movabs $0xe824000,%rax
  0x0000000002d984a5: movb   $0x0,(%rbx,%rax,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)

  0x0000000002d984a9: mov    %rdi,%r10
  0x0000000002d984ac: shr    $0x3,%r10
  0x0000000002d984b0: mov    %r10d,0x14(%rdx)
  0x0000000002d984b4: mov    %rdx,%rdi
  0x0000000002d984b7: shr    $0x9,%rdi
  0x0000000002d984bb: movb   $0x0,(%rdi,%rax,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)

  0x0000000002d984bf: mov    %rsi,%r10
  0x0000000002d984c2: shr    $0x3,%r10
  0x0000000002d984c6: mov    %r10d,0x18(%rdx)
  0x0000000002d984ca: shr    $0x9,%rdx
  0x0000000002d984ce: movb   $0x0,(%rdx,%rax,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)

  0x0000000002d984d2: add    $0x30,%rsp
  0x0000000002d984d6: pop    %rbp
  0x0000000002d984d7: test   %eax,-0x4083dd(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d984dd: retq   
  0x0000000002d984de: mov    %rbx,0x8(%rsp)
  0x0000000002d984e3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d984eb: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=272}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 285)
                                                ;   {runtime_call}
  0x0000000002d984f0: jmpq   0x0000000002d9843e
  0x0000000002d984f5: mov    %rbx,0x8(%rsp)
  0x0000000002d984fa: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d98502: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=295}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 285)
                                                ;   {runtime_call}
  0x0000000002d98507: jmpq   0x0000000002d98485
  0x0000000002d9850c: nop
  0x0000000002d9850d: nop
  0x0000000002d9850e: mov    0x2a8(%r15),%rax
  0x0000000002d98515: movabs $0x0,%r10
  0x0000000002d9851f: mov    %r10,0x2a8(%r15)
  0x0000000002d98526: movabs $0x0,%r10
  0x0000000002d98530: mov    %r10,0x2b0(%r15)
  0x0000000002d98537: add    $0x30,%rsp
  0x0000000002d9853b: pop    %rbp
  0x0000000002d9853c: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d98541: hlt    
  0x0000000002d98542: hlt    
  0x0000000002d98543: hlt    
  0x0000000002d98544: hlt    
  0x0000000002d98545: hlt    
  0x0000000002d98546: hlt    
  0x0000000002d98547: hlt    
  0x0000000002d98548: hlt    
  0x0000000002d98549: hlt    
  0x0000000002d9854a: hlt    
  0x0000000002d9854b: hlt    
  0x0000000002d9854c: hlt    
  0x0000000002d9854d: hlt    
  0x0000000002d9854e: hlt    
  0x0000000002d9854f: hlt    
  0x0000000002d98550: hlt    
  0x0000000002d98551: hlt    
  0x0000000002d98552: hlt    
  0x0000000002d98553: hlt    
  0x0000000002d98554: hlt    
  0x0000000002d98555: hlt    
  0x0000000002d98556: hlt    
  0x0000000002d98557: hlt    
  0x0000000002d98558: hlt    
  0x0000000002d98559: hlt    
  0x0000000002d9855a: hlt    
  0x0000000002d9855b: hlt    
  0x0000000002d9855c: hlt    
  0x0000000002d9855d: hlt    
  0x0000000002d9855e: hlt    
  0x0000000002d9855f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d98560: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d98565: mov    %rsp,-0x28(%rsp)
  0x0000000002d9856a: sub    $0x80,%rsp
  0x0000000002d98571: mov    %rax,0x78(%rsp)
  0x0000000002d98576: mov    %rcx,0x70(%rsp)
  0x0000000002d9857b: mov    %rdx,0x68(%rsp)
  0x0000000002d98580: mov    %rbx,0x60(%rsp)
  0x0000000002d98585: mov    %rbp,0x50(%rsp)
  0x0000000002d9858a: mov    %rsi,0x48(%rsp)
  0x0000000002d9858f: mov    %rdi,0x40(%rsp)
  0x0000000002d98594: mov    %r8,0x38(%rsp)
  0x0000000002d98599: mov    %r9,0x30(%rsp)
  0x0000000002d9859e: mov    %r10,0x28(%rsp)
  0x0000000002d985a3: mov    %r11,0x20(%rsp)
  0x0000000002d985a8: mov    %r12,0x18(%rsp)
  0x0000000002d985ad: mov    %r13,0x10(%rsp)
  0x0000000002d985b2: mov    %r14,0x8(%rsp)
  0x0000000002d985b7: mov    %r15,(%rsp)
  0x0000000002d985bb: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d985c5: movabs $0x2d98565,%rdx    ;   {internal_word}
  0x0000000002d985cf: mov    %rsp,%r8
  0x0000000002d985d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002d985d6: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d985db: hlt    
[Deopt Handler Code]
  0x0000000002d985dc: movabs $0x2d985dc,%r10    ;   {section_word}
  0x0000000002d985e6: push   %r10
  0x0000000002d985e8: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d985ed: hlt    
  0x0000000002d985ee: hlt    
  0x0000000002d985ef: hlt    
<nmethod compile_id='63' compiler='C1' level='3' entry='0x0000000002d983e0' size='1112' address='0x0000000002d98290' relocation_offset='288' insts_offset='336' stub_offset='720' scopes_data_offset='888' scopes_pcs_offset='960' dependencies_offset='1104' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='406' iicount='406' stamp='8.533'/>
Decoding compiled method 0x0000000002d9b3d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000019541bd0} &apos;isUpper&apos; &apos;(C)Z&apos; in &apos;sun/util/locale/LocaleUtils&apos;
  # parm0:    rdx       = char
  #           [sp+0x40]  (sp of caller)
  0x0000000002d9b520: mov    %eax,-0x6000(%rsp)
  0x0000000002d9b527: push   %rbp
  0x0000000002d9b528: sub    $0x30,%rsp
  0x0000000002d9b52c: movabs $0x196a0050,%rax   ;   {metadata(method data for {method} {0x0000000019541bd0} &apos;isUpper&apos; &apos;(C)Z&apos; in &apos;sun/util/locale/LocaleUtils&apos;)}
  0x0000000002d9b536: mov    0xdc(%rax),%esi
  0x0000000002d9b53c: add    $0x8,%esi
  0x0000000002d9b53f: mov    %esi,0xdc(%rax)
  0x0000000002d9b545: movabs $0x19541bc8,%rax   ;   {metadata({method} {0x0000000019541bd0} &apos;isUpper&apos; &apos;(C)Z&apos; in &apos;sun/util/locale/LocaleUtils&apos;)}
  0x0000000002d9b54f: and    $0x1ff8,%esi
  0x0000000002d9b555: cmp    $0x0,%esi
  0x0000000002d9b558: je     0x0000000002d9b5fe  ;*iload_0
                                                ; - sun.util.locale.LocaleUtils::isUpper@0 (line 160)

  0x0000000002d9b55e: cmp    $0x41,%edx
  0x0000000002d9b561: movabs $0x196a0050,%rax   ;   {metadata(method data for {method} {0x0000000019541bd0} &apos;isUpper&apos; &apos;(C)Z&apos; in &apos;sun/util/locale/LocaleUtils&apos;)}
  0x0000000002d9b56b: movabs $0x108,%rsi
  0x0000000002d9b575: jl     0x0000000002d9b585
  0x0000000002d9b57b: movabs $0x118,%rsi
  0x0000000002d9b585: mov    (%rax,%rsi,1),%rdi
  0x0000000002d9b589: lea    0x1(%rdi),%rdi
  0x0000000002d9b58d: mov    %rdi,(%rax,%rsi,1)
  0x0000000002d9b591: jl     0x0000000002d9b5d0  ;*if_icmplt
                                                ; - sun.util.locale.LocaleUtils::isUpper@3 (line 160)

  0x0000000002d9b597: cmp    $0x5a,%edx
  0x0000000002d9b59a: movabs $0x196a0050,%rax   ;   {metadata(method data for {method} {0x0000000019541bd0} &apos;isUpper&apos; &apos;(C)Z&apos; in &apos;sun/util/locale/LocaleUtils&apos;)}
  0x0000000002d9b5a4: movabs $0x128,%rsi
  0x0000000002d9b5ae: jg     0x0000000002d9b5be
  0x0000000002d9b5b4: movabs $0x138,%rsi
  0x0000000002d9b5be: mov    (%rax,%rsi,1),%rdi
  0x0000000002d9b5c2: lea    0x1(%rdi),%rdi
  0x0000000002d9b5c6: mov    %rdi,(%rax,%rsi,1)
  0x0000000002d9b5ca: jle    0x0000000002d9b5da  ;*if_icmpgt
                                                ; - sun.util.locale.LocaleUtils::isUpper@9 (line 160)

  0x0000000002d9b5d0: mov    $0x0,%eax
  0x0000000002d9b5d5: jmpq   0x0000000002d9b5ef  ;*ireturn
                                                ; - sun.util.locale.LocaleUtils::isUpper@17 (line 160)

  0x0000000002d9b5da: movabs $0x196a0050,%rax   ;   {metadata(method data for {method} {0x0000000019541bd0} &apos;isUpper&apos; &apos;(C)Z&apos; in &apos;sun/util/locale/LocaleUtils&apos;)}
  0x0000000002d9b5e4: incl   0x148(%rax)
  0x0000000002d9b5ea: mov    $0x1,%eax          ;*goto
                                                ; - sun.util.locale.LocaleUtils::isUpper@13 (line 160)

  0x0000000002d9b5ef: and    $0x1,%eax
  0x0000000002d9b5f2: add    $0x30,%rsp
  0x0000000002d9b5f6: pop    %rbp
  0x0000000002d9b5f7: test   %eax,-0x40b4fd(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9b5fd: retq   
  0x0000000002d9b5fe: mov    %rax,0x8(%rsp)
  0x0000000002d9b603: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9b60b: callq  0x0000000002d710e0  ; OopMap{off=240}
                                                ;*synchronization entry
                                                ; - sun.util.locale.LocaleUtils::isUpper@-1 (line 160)
                                                ;   {runtime_call}
  0x0000000002d9b610: jmpq   0x0000000002d9b55e
  0x0000000002d9b615: nop
  0x0000000002d9b616: nop
  0x0000000002d9b617: mov    0x2a8(%r15),%rax
  0x0000000002d9b61e: movabs $0x0,%r10
  0x0000000002d9b628: mov    %r10,0x2a8(%r15)
  0x0000000002d9b62f: movabs $0x0,%r10
  0x0000000002d9b639: mov    %r10,0x2b0(%r15)
  0x0000000002d9b640: add    $0x30,%rsp
  0x0000000002d9b644: pop    %rbp
  0x0000000002d9b645: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9b64a: hlt    
  0x0000000002d9b64b: hlt    
  0x0000000002d9b64c: hlt    
  0x0000000002d9b64d: hlt    
  0x0000000002d9b64e: hlt    
  0x0000000002d9b64f: hlt    
  0x0000000002d9b650: hlt    
  0x0000000002d9b651: hlt    
  0x0000000002d9b652: hlt    
  0x0000000002d9b653: hlt    
  0x0000000002d9b654: hlt    
  0x0000000002d9b655: hlt    
  0x0000000002d9b656: hlt    
  0x0000000002d9b657: hlt    
  0x0000000002d9b658: hlt    
  0x0000000002d9b659: hlt    
  0x0000000002d9b65a: hlt    
  0x0000000002d9b65b: hlt    
  0x0000000002d9b65c: hlt    
  0x0000000002d9b65d: hlt    
  0x0000000002d9b65e: hlt    
  0x0000000002d9b65f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d9b660: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d9b665: mov    %rsp,-0x28(%rsp)
  0x0000000002d9b66a: sub    $0x80,%rsp
  0x0000000002d9b671: mov    %rax,0x78(%rsp)
  0x0000000002d9b676: mov    %rcx,0x70(%rsp)
  0x0000000002d9b67b: mov    %rdx,0x68(%rsp)
  0x0000000002d9b680: mov    %rbx,0x60(%rsp)
  0x0000000002d9b685: mov    %rbp,0x50(%rsp)
  0x0000000002d9b68a: mov    %rsi,0x48(%rsp)
  0x0000000002d9b68f: mov    %rdi,0x40(%rsp)
  0x0000000002d9b694: mov    %r8,0x38(%rsp)
  0x0000000002d9b699: mov    %r9,0x30(%rsp)
  0x0000000002d9b69e: mov    %r10,0x28(%rsp)
  0x0000000002d9b6a3: mov    %r11,0x20(%rsp)
  0x0000000002d9b6a8: mov    %r12,0x18(%rsp)
  0x0000000002d9b6ad: mov    %r13,0x10(%rsp)
  0x0000000002d9b6b2: mov    %r14,0x8(%rsp)
  0x0000000002d9b6b7: mov    %r15,(%rsp)
  0x0000000002d9b6bb: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d9b6c5: movabs $0x2d9b665,%rdx    ;   {internal_word}
  0x0000000002d9b6cf: mov    %rsp,%r8
  0x0000000002d9b6d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9b6d6: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9b6db: hlt    
[Deopt Handler Code]
  0x0000000002d9b6dc: movabs $0x2d9b6dc,%r10    ;   {section_word}
  0x0000000002d9b6e6: push   %r10
  0x0000000002d9b6e8: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d9b6ed: hlt    
  0x0000000002d9b6ee: hlt    
  0x0000000002d9b6ef: hlt    
<nmethod compile_id='64' compiler='C1' level='3' entry='0x0000000002d9b520' size='984' address='0x0000000002d9b3d0' relocation_offset='288' insts_offset='336' stub_offset='656' scopes_data_offset='808' scopes_pcs_offset='848' dependencies_offset='976' method='sun/util/locale/LocaleUtils isUpper (C)Z' bytes='18' count='262' iicount='262' stamp='8.558'/>
<writer thread='21476'/>
<task_queued compile_id='65' method='java/util/LinkedHashMap removeEldestEntry (Ljava/util/Map$Entry;)Z' bytes='2' count='128' iicount='128' level='1' stamp='8.562' comment='tiered' hot_count='128'/>
<task_queued compile_id='66' method='java/util/LinkedHashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='23' count='256' iicount='256' level='3' stamp='8.562' comment='tiered' hot_count='256'/>
<task_queued compile_id='67' method='java/util/LinkedHashMap$Entry &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='10' count='256' iicount='256' level='3' stamp='8.562' comment='tiered' hot_count='256'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d9b7d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000194f4368} &apos;removeEldestEntry&apos; &apos;(Ljava/util/Map$Entry;)Z&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    r8:r8     = &apos;java/util/Map$Entry&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d9b920: mov    0x8(%rdx),%r10d
  0x0000000002d9b924: shl    $0x3,%r10
  0x0000000002d9b928: cmp    %rax,%r10
  0x0000000002d9b92b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d9b931: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d9b93c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d9b940: mov    %eax,-0x6000(%rsp)
  0x0000000002d9b947: push   %rbp
  0x0000000002d9b948: sub    $0x30,%rsp         ;*iconst_0
                                                ; - java.util.LinkedHashMap::removeEldestEntry@0 (line 509)

  0x0000000002d9b94c: mov    $0x0,%eax
  0x0000000002d9b951: add    $0x30,%rsp
  0x0000000002d9b955: pop    %rbp
  0x0000000002d9b956: test   %eax,-0x40b85c(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9b95c: retq   
  0x0000000002d9b95d: nop
  0x0000000002d9b95e: nop
  0x0000000002d9b95f: mov    0x2a8(%r15),%rax
  0x0000000002d9b966: movabs $0x0,%r10
  0x0000000002d9b970: mov    %r10,0x2a8(%r15)
  0x0000000002d9b977: movabs $0x0,%r10
  0x0000000002d9b981: mov    %r10,0x2b0(%r15)
  0x0000000002d9b988: add    $0x30,%rsp
  0x0000000002d9b98c: pop    %rbp
  0x0000000002d9b98d: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9b992: hlt    
  0x0000000002d9b993: hlt    
  0x0000000002d9b994: hlt    
  0x0000000002d9b995: hlt    
  0x0000000002d9b996: hlt    
  0x0000000002d9b997: hlt    
  0x0000000002d9b998: hlt    
  0x0000000002d9b999: hlt    
  0x0000000002d9b99a: hlt    
  0x0000000002d9b99b: hlt    
  0x0000000002d9b99c: hlt    
  0x0000000002d9b99d: hlt    
  0x0000000002d9b99e: hlt    
  0x0000000002d9b99f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d9b9a0: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d9b9a5: mov    %rsp,-0x28(%rsp)
  0x0000000002d9b9aa: sub    $0x80,%rsp
  0x0000000002d9b9b1: mov    %rax,0x78(%rsp)
  0x0000000002d9b9b6: mov    %rcx,0x70(%rsp)
  0x0000000002d9b9bb: mov    %rdx,0x68(%rsp)
  0x0000000002d9b9c0: mov    %rbx,0x60(%rsp)
  0x0000000002d9b9c5: mov    %rbp,0x50(%rsp)
  0x0000000002d9b9ca: mov    %rsi,0x48(%rsp)
  0x0000000002d9b9cf: mov    %rdi,0x40(%rsp)
  0x0000000002d9b9d4: mov    %r8,0x38(%rsp)
  0x0000000002d9b9d9: mov    %r9,0x30(%rsp)
  0x0000000002d9b9de: mov    %r10,0x28(%rsp)
  0x0000000002d9b9e3: mov    %r11,0x20(%rsp)
  0x0000000002d9b9e8: mov    %r12,0x18(%rsp)
  0x0000000002d9b9ed: mov    %r13,0x10(%rsp)
  0x0000000002d9b9f2: mov    %r14,0x8(%rsp)
  0x0000000002d9b9f7: mov    %r15,(%rsp)
  0x0000000002d9b9fb: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d9ba05: movabs $0x2d9b9a5,%rdx    ;   {internal_word}
  0x0000000002d9ba0f: mov    %rsp,%r8
  0x0000000002d9ba12: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9ba16: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9ba1b: hlt    
[Deopt Handler Code]
  0x0000000002d9ba1c: movabs $0x2d9ba1c,%r10    ;   {section_word}
  0x0000000002d9ba26: push   %r10
  0x0000000002d9ba28: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d9ba2d: hlt    
  0x0000000002d9ba2e: hlt    
  0x0000000002d9ba2f: hlt    
<nmethod compile_id='65' compiler='C1' level='1' entry='0x0000000002d9b920' size='680' address='0x0000000002d9b7d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/util/LinkedHashMap removeEldestEntry (Ljava/util/Map$Entry;)Z' bytes='2' count='342' iicount='342' stamp='8.565'/>
<writer thread='21476'/>
<task_queued compile_id='68' method='java/util/LinkedHashMap linkNodeLast (Ljava/util/LinkedHashMap$Entry;)V' bytes='33' count='384' iicount='384' level='3' stamp='8.565' comment='tiered' hot_count='384'/>
<task_queued compile_id='69' method='java/util/LinkedHashMap afterNodeInsertion (Z)V' bytes='40' count='384' iicount='384' level='3' stamp='8.565' comment='tiered' hot_count='384'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d9ba90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000194f3750} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  #           [sp+0xa0]  (sp of caller)
  0x0000000002d9bc20: 
<writer thread='27984'/>
<uncommon_trap thread='27984' reason='unstable_if' action='reinterpret' compile_id='47' compile_kind='osr' compiler='C2' level='4' stamp='8.571'>
<jvms bci='9' method='com/zju/leetcode/multiThread/testThread$1 run ()V' bytes='26' count='1' backedge_count='8343552' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='27984' compile_id='47' compile_kind='osr' compiler='C2' level='4' stamp='8.571'/>
<writer thread='28032'/>
mov    0x8(%rdx),%r10d
  0x0000000002d9bc24: shl    $0x3,%r10
  0x0000000002d9bc28: cmp    %rax,%r10
  0x0000000002d9bc2b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d9bc31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d9bc3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d9bc40: mov    %eax,-0x6000(%rsp)
  0x0000000002d9bc47: push   %rbp
  0x0000000002d9bc48: sub    $0x90,%rsp
  0x0000000002d9bc4f: mov    %rdx,%rbx
  0x0000000002d9bc52: mov    %rdi,%r11
  0x0000000002d9bc55: mov    %rsi,%r13
  0x0000000002d9bc58: movabs $0x196ad7b0,%rdx   ;   {metadata(method data for {method} {0x00000000194f3750} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9bc62: mov    0xdc(%rdx),%esi
  0x0000000002d9bc68: add    $0x8,%esi
  0x0000000002d9bc6b: mov    %esi,0xdc(%rdx)
  0x0000000002d9bc71: movabs $0x194f3748,%rdx   ;   {metadata({method} {0x00000000194f3750} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9bc7b: and    $0x1ff8,%esi
  0x0000000002d9bc81: cmp    $0x0,%esi
  0x0000000002d9bc84: je     0x0000000002d9bf14
  0x0000000002d9bc8a: movabs $0x7c0030138,%rdx  ;   {metadata(&apos;java/util/LinkedHashMap$Entry&apos;)}
  0x0000000002d9bc94: mov    0x60(%r15),%rax
  0x0000000002d9bc98: lea    0x28(%rax),%rdi
  0x0000000002d9bc9c: cmp    0x70(%r15),%rdi
  0x0000000002d9bca0: ja     0x0000000002d9bf2b
  0x0000000002d9bca6: mov    %rdi,0x60(%r15)
  0x0000000002d9bcaa: mov    0xa8(%rdx),%rcx
  0x0000000002d9bcb1: mov    %rcx,(%rax)
  0x0000000002d9bcb4: mov    %rdx,%rcx
  0x0000000002d9bcb7: shr    $0x3,%rcx
  0x0000000002d9bcbb: mov    %ecx,0x8(%rax)
  0x0000000002d9bcbe: xor    %rcx,%rcx
  0x0000000002d9bcc1: mov    %ecx,0xc(%rax)
  0x0000000002d9bcc4: xor    %rcx,%rcx
  0x0000000002d9bcc7: mov    %rcx,0x10(%rax)
  0x0000000002d9bccb: mov    %rcx,0x18(%rax)
  0x0000000002d9bccf: mov    %rcx,0x20(%rax)    ;*new  ; - java.util.LinkedHashMap::newNode@0 (line 256)

  0x0000000002d9bcd3: mov    %rax,%rsi
  0x0000000002d9bcd6: movabs $0x196ad7b0,%rdi   ;   {metadata(method data for {method} {0x00000000194f3750} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9bce0: addq   $0x1,0x108(%rdi)
  0x0000000002d9bce8: movabs $0x196ad910,%rsi   ;   {metadata(method data for {method} {0x0000000019502b88} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x0000000002d9bcf2: mov    0xdc(%rsi),%edi
  0x0000000002d9bcf8: add    $0x8,%edi
  0x0000000002d9bcfb: mov    %edi,0xdc(%rsi)
  0x0000000002d9bd01: movabs $0x19502b80,%rsi   ;   {metadata({method} {0x0000000019502b88} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x0000000002d9bd0b: and    $0x7ffff8,%edi
  0x0000000002d9bd11: cmp    $0x0,%edi
  0x0000000002d9bd14: je     0x0000000002d9bf38
  0x0000000002d9bd1a: mov    %rax,%rsi
  0x0000000002d9bd1d: movabs $0x196ad910,%rdi   ;   {metadata(method data for {method} {0x0000000019502b88} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x0000000002d9bd27: addq   $0x1,0x108(%rdi)
  0x0000000002d9bd2f: movabs $0x1969f4d0,%rsi   ;   {metadata(method data for {method} {0x000000001945db50} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002d9bd39: mov    0xdc(%rsi),%edi
  0x0000000002d9bd3f: add    $0x8,%edi
  0x0000000002d9bd42: mov    %edi,0xdc(%rsi)
  0x0000000002d9bd48: movabs $0x1945db48,%rsi   ;   {metadata({method} {0x000000001945db50} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002d9bd52: and    $0x7ffff8,%edi
  0x0000000002d9bd58: cmp    $0x0,%edi
  0x0000000002d9bd5b: je     0x0000000002d9bf4f
  0x0000000002d9bd61: mov    %rax,%rsi
  0x0000000002d9bd64: movabs $0x1969f4d0,%rdi   ;   {metadata(method data for {method} {0x000000001945db50} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002d9bd6e: addq   $0x1,0x108(%rdi)
  0x0000000002d9bd76: movabs $0x194a47d8,%rsi   ;   {metadata(method data for {method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d9bd80: mov    0xdc(%rsi),%edi
  0x0000000002d9bd86: add    $0x8,%edi
  0x0000000002d9bd89: mov    %edi,0xdc(%rsi)
  0x0000000002d9bd8f: movabs $0x19370480,%rsi   ;   {metadata({method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d9bd99: and    $0x7ffff8,%edi
  0x0000000002d9bd9f: cmp    $0x0,%edi
  0x0000000002d9bda2: je     0x0000000002d9bf66
  0x0000000002d9bda8: mov    %r8d,0xc(%rax)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 286)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x0000000002d9bdac: mov    %r9,%r10
  0x0000000002d9bdaf: shr    $0x3,%r10
  0x0000000002d9bdb3: mov    %r10d,0x10(%rax)
  0x0000000002d9bdb7: mov    %rax,%rsi
  0x0000000002d9bdba: shr    $0x9,%rsi
  0x0000000002d9bdbe: movabs $0xe824000,%rdi
  0x0000000002d9bdc8: movb   $0x0,(%rsi,%rdi,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x0000000002d9bdcc: mov    %r11,%r10
  0x0000000002d9bdcf: shr    $0x3,%r10
  0x0000000002d9bdd3: mov    %r10d,0x14(%rax)
  0x0000000002d9bdd7: mov    %rax,%rsi
  0x0000000002d9bdda: shr    $0x9,%rsi
  0x0000000002d9bdde: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x0000000002d9bde2: mov    %r13,%r10
  0x0000000002d9bde5: shr    $0x3,%r10
  0x0000000002d9bde9: mov    %r10d,0x18(%rax)
  0x0000000002d9bded: mov    %rax,%rsi
  0x0000000002d9bdf0: shr    $0x9,%rsi
  0x0000000002d9bdf4: movb   $0x0,(%rsi,%rdi,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x0000000002d9bdf8: mov    %rbx,%rsi
  0x0000000002d9bdfb: movabs $0x196ad7b0,%rdx   ;   {metadata(method data for {method} {0x00000000194f3750} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9be05: addq   $0x1,0x118(%rdx)
  0x0000000002d9be0d: movabs $0x196ada60,%rsi   ;   {metadata(method data for {method} {0x00000000194f3530} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9be17: mov    0xdc(%rsi),%edx
  0x0000000002d9be1d: add    $0x8,%edx
  0x0000000002d9be20: mov    %edx,0xdc(%rsi)
  0x0000000002d9be26: movabs $0x194f3528,%rsi   ;   {metadata({method} {0x00000000194f3530} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9be30: and    $0x7ffff8,%edx
  0x0000000002d9be36: cmp    $0x0,%edx
  0x0000000002d9be39: je     0x0000000002d9bf7d
  0x0000000002d9be3f: mov    0x34(%rbx),%esi
  0x0000000002d9be42: shl    $0x3,%rsi          ;*getfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@1 (line 223)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x0000000002d9be46: mov    %rax,%r10
  0x0000000002d9be49: shr    $0x3,%r10
  0x0000000002d9be4d: mov    %r10d,0x34(%rbx)
  0x0000000002d9be51: mov    %rbx,%rdx
  0x0000000002d9be54: shr    $0x9,%rdx
  0x0000000002d9be58: movb   $0x0,(%rdx,%rdi,1)  ;*putfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@7 (line 224)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x0000000002d9be5c: cmp    $0x0,%rsi
  0x0000000002d9be60: movabs $0x196ada60,%rdi   ;   {metadata(method data for {method} {0x00000000194f3530} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9be6a: movabs $0x108,%rdx
  0x0000000002d9be74: jne    0x0000000002d9be84
  0x0000000002d9be7a: movabs $0x118,%rdx
  0x0000000002d9be84: mov    (%rdi,%rdx,1),%rcx
  0x0000000002d9be88: lea    0x1(%rcx),%rcx
  0x0000000002d9be8c: mov    %rcx,(%rdi,%rdx,1)
  0x0000000002d9be90: jne    0x0000000002d9bed2  ;*ifnonnull
                                                ; - java.util.LinkedHashMap::linkNodeLast@11 (line 225)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x0000000002d9be96: mov    %rax,%r10
  0x0000000002d9be99: shr    $0x3,%r10
  0x0000000002d9be9d: mov    %r10d,0x30(%rbx)
  0x0000000002d9bea1: shr    $0x9,%rbx
  0x0000000002d9bea5: movabs $0xe824000,%rsi
  0x0000000002d9beaf: movb   $0x0,(%rbx,%rsi,1)  ;*putfield head
                                                ; - java.util.LinkedHashMap::linkNodeLast@16 (line 226)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x0000000002d9beb3: movabs $0x196ada60,%rsi   ;   {metadata(method data for {method} {0x00000000194f3530} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9bebd: incl   0x128(%rsi)        ;*goto
                                                ; - java.util.LinkedHashMap::linkNodeLast@19 (line 226)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x0000000002d9bec3: add    $0x90,%rsp
  0x0000000002d9beca: pop    %rbp
  0x0000000002d9becb: test   %eax,-0x40bdd1(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9bed1: retq   
  0x0000000002d9bed2: mov    %rsi,%r10
  0x0000000002d9bed5: shr    $0x3,%r10
  0x0000000002d9bed9: mov    %r10d,0x1c(%rax)
  0x0000000002d9bedd: mov    %rax,%rdi
  0x0000000002d9bee0: shr    $0x9,%rdi
  0x0000000002d9bee4: movabs $0xe824000,%rbx
  0x0000000002d9beee: movb   $0x0,(%rdi,%rbx,1)  ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x0000000002d9bef2: mov    %rax,%r10
  0x0000000002d9bef5: shr    $0x3,%r10
  0x0000000002d9bef9: mov    %r10d,0x20(%rsi)   ; implicit exception: dispatches to 0x0000000002d9bf94
  0x0000000002d9befd: shr    $0x9,%rsi
  0x0000000002d9bf01: movb   $0x0,(%rsi,%rbx,1)  ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x0000000002d9bf05: add    $0x90,%rsp
  0x0000000002d9bf0c: pop    %rbp
  0x0000000002d9bf0d: test   %eax,-0x40be13(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9bf13: retq   
  0x0000000002d9bf14: mov    %rdx,0x8(%rsp)
  0x0000000002d9bf19: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9bf21: callq  0x0000000002d710e0  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop off=774}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::newNode@-1 (line 256)
                                                ;   {runtime_call}
  0x0000000002d9bf26: jmpq   0x0000000002d9bc8a
  0x0000000002d9bf2b: mov    %rdx,%rdx
  0x0000000002d9bf2e: callq  0x0000000002cdf600  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop off=787}
                                                ;*new  ; - java.util.LinkedHashMap::newNode@0 (line 256)
                                                ;   {runtime_call}
  0x0000000002d9bf33: jmpq   0x0000000002d9bcd3
  0x0000000002d9bf38: mov    %rsi,0x8(%rsp)
  0x0000000002d9bf3d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9bf45: callq  0x0000000002d710e0  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop rax=Oop off=810}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@-1 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x0000000002d9bf4a: jmpq   0x0000000002d9bd1a
  0x0000000002d9bf4f: mov    %rsi,0x8(%rsp)
  0x0000000002d9bf54: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9bf5c: callq  0x0000000002d710e0  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop rax=Oop off=833}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 285)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x0000000002d9bf61: jmpq   0x0000000002d9bd61
  0x0000000002d9bf66: mov    %rsi,0x8(%rsp)
  0x0000000002d9bf6b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9bf73: callq  0x0000000002d710e0  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop rax=Oop off=856}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 285)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x0000000002d9bf78: jmpq   0x0000000002d9bda8
  0x0000000002d9bf7d: mov    %rsi,0x8(%rsp)
  0x0000000002d9bf82: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9bf8a: callq  0x0000000002d710e0  ; OopMap{rbx=Oop rax=Oop off=879}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::linkNodeLast@-1 (line 223)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)
                                                ;   {runtime_call}
  0x0000000002d9bf8f: jmpq   0x0000000002d9be3f
  0x0000000002d9bf94: callq  0x0000000002cdff40  ; OopMap{rax=Oop rsi=Oop off=889}
                                                ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)
                                                ;   {runtime_call}
  0x0000000002d9bf99: nop
  0x0000000002d9bf9a: nop
  0x0000000002d9bf9b: mov    0x2a8(%r15),%rax
  0x0000000002d9bfa2: movabs $0x0,%r10
  0x0000000002d9bfac: mov    %r10,0x2a8(%r15)
  0x0000000002d9bfb3: movabs $0x0,%r10
  0x0000000002d9bfbd: mov    %r10,0x2b0(%r15)
  0x0000000002d9bfc4: add    $0x90,%rsp
  0x0000000002d9bfcb: pop    %rbp
  0x0000000002d9bfcc: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9bfd1: hlt    
  0x0000000002d9bfd2: hlt    
  0x0000000002d9bfd3: hlt    
  0x0000000002d9bfd4: hlt    
  0x0000000002d9bfd5: hlt    
  0x0000000002d9bfd6: hlt    
  0x0000000002d9bfd7: hlt    
  0x0000000002d9bfd8: hlt    
  0x0000000002d9bfd9: hlt    
  0x0000000002d9bfda: hlt    
  0x0000000002d9bfdb: hlt    
  0x0000000002d9bfdc: hlt    
  0x0000000002d9bfdd: hlt    
  0x0000000002d9bfde: hlt    
  0x0000000002d9bfdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d9bfe0: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d9bfe5: mov    %rsp,-0x28(%rsp)
  0x0000000002d9bfea: sub    $0x80,%rsp
  0x0000000002d9bff1: mov    %rax,0x78(%rsp)
  0x0000000002d9bff6: mov    %rcx,0x70(%rsp)
  0x0000000002d9bffb: mov    %rdx,0x68(%rsp)
  0x0000000002d9c000: mov    %rbx,0x60(%rsp)
  0x0000000002d9c005: mov    %rbp,0x50(%rsp)
  0x0000000002d9c00a: mov    %rsi,0x48(%rsp)
  0x0000000002d9c00f: mov    %rdi,0x40(%rsp)
  0x0000000002d9c014: mov    %r8,0x38(%rsp)
  0x0000000002d9c019: mov    %r9,0x30(%rsp)
  0x0000000002d9c01e: mov    %r10,0x28(%rsp)
  0x0000000002d9c023: mov    %r11,0x20(%rsp)
  0x0000000002d9c028: mov    %r12,0x18(%rsp)
  0x0000000002d9c02d: mov    %r13,0x10(%rsp)
  0x0000000002d9c032: mov    %r14,0x8(%rsp)
  0x0000000002d9c037: mov    %r15,(%rsp)
  0x0000000002d9c03b: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d9c045: movabs $0x2d9bfe5,%rdx    ;   {internal_word}
  0x0000000002d9c04f: mov    %rsp,%r8
  0x0000000002d9c052: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9c056: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9c05b: hlt    
[Deopt Handler Code]
  0x0000000002d9c05c: movabs $0x2d9c05c,%r10    ;   {section_word}
  0x0000000002d9c066: push   %r10
  0x0000000002d9c068: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d9c06d: hlt    
  0x0000000002d9c06e: hlt    
  0x0000000002d9c06f: hlt    
<nmethod compile_id='66' compiler='C1' level='3' entry='0x0000000002d9bc20' size='2160' address='0x0000000002d9ba90' relocation_offset='288' insts_offset='400' stub_offset='1360' scopes_data_offset='1544' scopes_pcs_offset='1800' dependencies_offset='2136' nul_chk_table_offset='2144' method='java/util/LinkedHashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='23' count='628' iicount='628' stamp='8.585'/>
<writer thread='21476'/>
<task_queued compile_id='70' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='554' iicount='554' level='3' stamp='8.585' comment='tiered' hot_count='554'/>
<task_queued compile_id='71' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='5632' iicount='5632' stamp='8.585' comment='tiered' hot_count='5632'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d9c310:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000194f3b00} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    r8        = boolean
  #           [sp+0x90]  (sp of caller)
  0x0000000002d9c4a0: mov    0x8(%rdx),%r10d
  0x0000000002d9c4a4: shl    $0x3,%r10
  0x0000000002d9c4a8: cmp    %rax,%r10
  0x0000000002d9c4ab: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d9c4b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d9c4bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d9c4c0: mov    %eax,-0x6000(%rsp)
  0x0000000002d9c4c7: push   %rbp
  0x0000000002d9c4c8: sub    $0x80,%rsp
  0x0000000002d9c4cf: movabs $0x196adbc0,%rsi   ;   {metadata(method data for {method} {0x00000000194f3b00} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9c4d9: mov    0xdc(%rsi),%edi
  0x0000000002d9c4df: add    $0x8,%edi
  0x0000000002d9c4e2: mov    %edi,0xdc(%rsi)
  0x0000000002d9c4e8: movabs $0x194f3af8,%rsi   ;   {metadata({method} {0x00000000194f3b00} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9c4f2: and    $0x1ff8,%edi
  0x0000000002d9c4f8: cmp    $0x0,%edi
  0x0000000002d9c4fb: je     0x0000000002d9c89b  ;*iload_1
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@0 (line 299)

  0x0000000002d9c501: cmp    $0x0,%r8d
  0x0000000002d9c505: movabs $0x196adbc0,%r8    ;   {metadata(method data for {method} {0x00000000194f3b00} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9c50f: movabs $0x108,%rsi
  0x0000000002d9c519: je     0x0000000002d9c529
  0x0000000002d9c51f: movabs $0x118,%rsi
  0x0000000002d9c529: mov    (%r8,%rsi,1),%rdi
  0x0000000002d9c52d: lea    0x1(%rdi),%rdi
  0x0000000002d9c531: mov    %rdi,(%r8,%rsi,1)
  0x0000000002d9c535: je     0x0000000002d9c88c  ;*ifeq
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@1 (line 299)

  0x0000000002d9c53b: mov    0x30(%rdx),%esi
  0x0000000002d9c53e: shl    $0x3,%rsi          ;*getfield head
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@5 (line 299)

  0x0000000002d9c542: cmp    $0x0,%rsi
  0x0000000002d9c546: movabs $0x196adbc0,%r8    ;   {metadata(method data for {method} {0x00000000194f3b00} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9c550: movabs $0x128,%rdi
  0x0000000002d9c55a: je     0x0000000002d9c56a
  0x0000000002d9c560: movabs $0x138,%rdi
  0x0000000002d9c56a: mov    (%r8,%rdi,1),%rbx
  0x0000000002d9c56e: lea    0x1(%rbx),%rbx
  0x0000000002d9c572: mov    %rbx,(%r8,%rdi,1)
  0x0000000002d9c576: je     0x0000000002d9c88c  ;*ifnull
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@10 (line 299)

  0x0000000002d9c57c: mov    %rdx,%r8
  0x0000000002d9c57f: movabs $0x196adbc0,%rdi   ;   {metadata(method data for {method} {0x00000000194f3b00} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9c589: mov    0x8(%r8),%r8d
  0x0000000002d9c58d: shl    $0x3,%r8
  0x0000000002d9c591: cmp    0x150(%rdi),%r8
  0x0000000002d9c598: jne    0x0000000002d9c5a7
  0x0000000002d9c59a: addq   $0x1,0x158(%rdi)
  0x0000000002d9c5a2: jmpq   0x0000000002d9c60d
  0x0000000002d9c5a7: cmp    0x160(%rdi),%r8
  0x0000000002d9c5ae: jne    0x0000000002d9c5bd
  0x0000000002d9c5b0: addq   $0x1,0x168(%rdi)
  0x0000000002d9c5b8: jmpq   0x0000000002d9c60d
  0x0000000002d9c5bd: cmpq   $0x0,0x150(%rdi)
  0x0000000002d9c5c8: jne    0x0000000002d9c5e1
  0x0000000002d9c5ca: mov    %r8,0x150(%rdi)
  0x0000000002d9c5d1: movq   $0x1,0x158(%rdi)
  0x0000000002d9c5dc: jmpq   0x0000000002d9c60d
  0x0000000002d9c5e1: cmpq   $0x0,0x160(%rdi)
  0x0000000002d9c5ec: jne    0x0000000002d9c605
  0x0000000002d9c5ee: mov    %r8,0x160(%rdi)
  0x0000000002d9c5f5: movq   $0x1,0x168(%rdi)
  0x0000000002d9c600: jmpq   0x0000000002d9c60d
  0x0000000002d9c605: addq   $0x1,0x148(%rdi)
  0x0000000002d9c60d: mov    %rsi,%r8
  0x0000000002d9c610: mov    %rdx,%rdi
  0x0000000002d9c613: mov    %rdi,%rdx          ;*invokevirtual removeEldestEntry
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@15 (line 299)

  0x0000000002d9c616: mov    %rdi,0x60(%rsp)
  0x0000000002d9c61b: mov    %rsi,0x58(%rsp)
  0x0000000002d9c620: nop
  0x0000000002d9c621: nop
  0x0000000002d9c622: nop
  0x0000000002d9c623: nop
  0x0000000002d9c624: nop
  0x0000000002d9c625: movabs $0xffffffffffffffff,%rax
  0x0000000002d9c62f: callq  0x0000000002cb63e0  ; OopMap{[88]=Oop [96]=Oop off=404}
                                                ;*invokevirtual removeEldestEntry
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@15 (line 299)
                                                ;   {virtual_call}
  0x0000000002d9c634: cmp    $0x0,%eax
  0x0000000002d9c637: movabs $0x196adbc0,%rdx   ;   {metadata(method data for {method} {0x00000000194f3b00} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9c641: movabs $0x178,%rsi
  0x0000000002d9c64b: je     0x0000000002d9c65b
  0x0000000002d9c651: movabs $0x188,%rsi
  0x0000000002d9c65b: mov    (%rdx,%rsi,1),%rdi
  0x0000000002d9c65f: lea    0x1(%rdi),%rdi
  0x0000000002d9c663: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002d9c667: je     0x0000000002d9c88c  ;*ifeq
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@18 (line 299)

  0x0000000002d9c66d: mov    0x58(%rsp),%rsi
  0x0000000002d9c672: mov    0x10(%rsi),%esi    ; implicit exception: dispatches to 0x0000000002d9c8b2
  0x0000000002d9c675: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@22 (line 300)

  0x0000000002d9c679: movabs $0x196adbc0,%rdx   ;   {metadata(method data for {method} {0x00000000194f3b00} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9c683: addq   $0x1,0x198(%rdx)
  0x0000000002d9c68b: movabs $0x19657650,%rdx   ;   {metadata(method data for {method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d9c695: mov    0xdc(%rdx),%edi
  0x0000000002d9c69b: add    $0x8,%edi
  0x0000000002d9c69e: mov    %edi,0xdc(%rdx)
  0x0000000002d9c6a4: movabs $0x19458c48,%rdx   ;   {metadata({method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d9c6ae: and    $0x7ffff8,%edi
  0x0000000002d9c6b4: cmp    $0x0,%edi
  0x0000000002d9c6b7: je     0x0000000002d9c8b7
  0x0000000002d9c6bd: cmp    $0x0,%rsi
  0x0000000002d9c6c1: movabs $0x19657650,%rdx   ;   {metadata(method data for {method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d9c6cb: movabs $0x108,%rdi
  0x0000000002d9c6d5: jne    0x0000000002d9c6e5
  0x0000000002d9c6db: movabs $0x118,%rdi
  0x0000000002d9c6e5: mov    (%rdx,%rdi,1),%rbx
  0x0000000002d9c6e9: lea    0x1(%rbx),%rbx
  0x0000000002d9c6ed: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002d9c6f1: jne    0x0000000002d9c716  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x0000000002d9c6f7: movabs $0x19657650,%rdx   ;   {metadata(method data for {method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d9c701: incl   0x128(%rdx)
  0x0000000002d9c707: mov    $0x0,%edi
  0x0000000002d9c70c: mov    %rsi,0x68(%rsp)
  0x0000000002d9c711: jmpq   0x0000000002d9c7d1  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x0000000002d9c716: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002d9c8ce
  0x0000000002d9c719: mov    %rsi,%rdx
  0x0000000002d9c71c: movabs $0x19657650,%rdi   ;   {metadata(method data for {method} {0x0000000019458c50} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002d9c726: mov    0x8(%rdx),%edx
  0x0000000002d9c729: shl    $0x3,%rdx
  0x0000000002d9c72d: cmp    0x148(%rdi),%rdx
  0x0000000002d9c734: jne    0x0000000002d9c743
  0x0000000002d9c736: addq   $0x1,0x150(%rdi)
  0x0000000002d9c73e: jmpq   0x0000000002d9c7a9
  0x0000000002d9c743: cmp    0x158(%rdi),%rdx
  0x0000000002d9c74a: jne    0x0000000002d9c759
  0x0000000002d9c74c: addq   $0x1,0x160(%rdi)
  0x0000000002d9c754: jmpq   0x0000000002d9c7a9
  0x0000000002d9c759: cmpq   $0x0,0x148(%rdi)
  0x0000000002d9c764: jne    0x0000000002d9c77d
  0x0000000002d9c766: mov    %rdx,0x148(%rdi)
  0x0000000002d9c76d: movq   $0x1,0x150(%rdi)
  0x0000000002d9c778: jmpq   0x0000000002d9c7a9
  0x0000000002d9c77d: cmpq   $0x0,0x158(%rdi)
  0x0000000002d9c788: jne    0x0000000002d9c7a1
  0x0000000002d9c78a: mov    %rdx,0x158(%rdi)
  0x0000000002d9c791: movq   $0x1,0x160(%rdi)
  0x0000000002d9c79c: jmpq   0x0000000002d9c7a9
  0x0000000002d9c7a1: addq   $0x1,0x140(%rdi)
  0x0000000002d9c7a9: mov    %rsi,%rdx          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x0000000002d9c7ac: mov    %rsi,0x68(%rsp)
  0x0000000002d9c7b1: nop
  0x0000000002d9c7b2: nop
  0x0000000002d9c7b3: nop
  0x0000000002d9c7b4: nop
  0x0000000002d9c7b5: movabs $0xffffffffffffffff,%rax
  0x0000000002d9c7bf: callq  0x0000000002cb63e0  ; OopMap{[96]=Oop [104]=Oop off=804}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)
                                                ;   {virtual_call}
  0x0000000002d9c7c4: mov    %rax,%r8
  0x0000000002d9c7c7: shr    $0x10,%r8d
  0x0000000002d9c7cb: xor    %rax,%r8
  0x0000000002d9c7ce: mov    %r8,%rdi           ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x0000000002d9c7d1: mov    0x68(%rsp),%rsi
  0x0000000002d9c7d6: mov    0x60(%rsp),%rdx
  0x0000000002d9c7db: mov    %rdx,%r8
  0x0000000002d9c7de: movabs $0x196adbc0,%r9    ;   {metadata(method data for {method} {0x00000000194f3b00} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9c7e8: mov    0x8(%r8),%r8d
  0x0000000002d9c7ec: shl    $0x3,%r8
  0x0000000002d9c7f0: cmp    0x1b0(%r9),%r8
  0x0000000002d9c7f7: jne    0x0000000002d9c806
  0x0000000002d9c7f9: addq   $0x1,0x1b8(%r9)
  0x0000000002d9c801: jmpq   0x0000000002d9c86c
  0x0000000002d9c806: cmp    0x1c0(%r9),%r8
  0x0000000002d9c80d: jne    0x0000000002d9c81c
  0x0000000002d9c80f: addq   $0x1,0x1c8(%r9)
  0x0000000002d9c817: jmpq   0x0000000002d9c86c
  0x0000000002d9c81c: cmpq   $0x0,0x1b0(%r9)
  0x0000000002d9c827: jne    0x0000000002d9c840
  0x0000000002d9c829: mov    %r8,0x1b0(%r9)
  0x0000000002d9c830: movq   $0x1,0x1b8(%r9)
  0x0000000002d9c83b: jmpq   0x0000000002d9c86c
  0x0000000002d9c840: cmpq   $0x0,0x1c0(%r9)
  0x0000000002d9c84b: jne    0x0000000002d9c864
  0x0000000002d9c84d: mov    %r8,0x1c0(%r9)
  0x0000000002d9c854: movq   $0x1,0x1c8(%r9)
  0x0000000002d9c85f: jmpq   0x0000000002d9c86c
  0x0000000002d9c864: addq   $0x1,0x1a8(%r9)
  0x0000000002d9c86c: mov    %rdi,%r8
  0x0000000002d9c86f: mov    %rsi,%r9
  0x0000000002d9c872: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x0000000002d9c87c: mov    $0x0,%esi
  0x0000000002d9c881: mov    $0x1,%ecx          ;*invokevirtual removeNode
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@35 (line 301)

  0x0000000002d9c886: nop
  0x0000000002d9c887: callq  0x0000000002cb61a0  ; OopMap{off=1004}
                                                ;*invokevirtual removeNode
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@35 (line 301)
                                                ;   {optimized virtual_call}
  0x0000000002d9c88c: add    $0x80,%rsp
  0x0000000002d9c893: pop    %rbp
  0x0000000002d9c894: test   %eax,-0x40c79a(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9c89a: retq   
  0x0000000002d9c89b: mov    %rsi,0x8(%rsp)
  0x0000000002d9c8a0: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9c8a8: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=1037}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@-1 (line 299)
                                                ;   {runtime_call}
  0x0000000002d9c8ad: jmpq   0x0000000002d9c501
  0x0000000002d9c8b2: callq  0x0000000002cdff40  ; OopMap{[96]=Oop off=1047}
                                                ;*getfield key
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@22 (line 300)
                                                ;   {runtime_call}
  0x0000000002d9c8b7: mov    %rdx,0x8(%rsp)
  0x0000000002d9c8bc: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9c8c4: callq  0x0000000002d710e0  ; OopMap{[96]=Oop rsi=Oop off=1065}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)
                                                ;   {runtime_call}
  0x0000000002d9c8c9: jmpq   0x0000000002d9c6bd
  0x0000000002d9c8ce: callq  0x0000000002cdff40  ; OopMap{[96]=Oop rsi=Oop off=1075}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)
                                                ;   {runtime_call}
  0x0000000002d9c8d3: nop
  0x0000000002d9c8d4: nop
  0x0000000002d9c8d5: mov    0x2a8(%r15),%rax
  0x0000000002d9c8dc: movabs $0x0,%r10
  0x0000000002d9c8e6: mov    %r10,0x2a8(%r15)
  0x0000000002d9c8ed: movabs $0x0,%r10
  0x0000000002d9c8f7: mov    %r10,0x2b0(%r15)
  0x0000000002d9c8fe: add    $0x80,%rsp
  0x0000000002d9c905: pop    %rbp
  0x0000000002d9c906: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9c90b: hlt    
  0x0000000002d9c90c: hlt    
  0x0000000002d9c90d: hlt    
  0x0000000002d9c90e: hlt    
  0x0000000002d9c90f: hlt    
  0x0000000002d9c910: hlt    
  0x0000000002d9c911: hlt    
  0x0000000002d9c912: hlt    
  0x0000000002d9c913: hlt    
  0x0000000002d9c914: hlt    
  0x0000000002d9c915: hlt    
  0x0000000002d9c916: hlt    
  0x0000000002d9c917: hlt    
  0x0000000002d9c918: hlt    
  0x0000000002d9c919: hlt    
  0x0000000002d9c91a: hlt    
  0x0000000002d9c91b: hlt    
  0x0000000002d9c91c: hlt    
  0x0000000002d9c91d: hlt    
  0x0000000002d9c91e: hlt    
  0x0000000002d9c91f: hlt    
[Stub Code]
  0x0000000002d9c920: nop                       ;   {no_reloc}
  0x0000000002d9c921: nop
  0x0000000002d9c922: nop
  0x0000000002d9c923: nop
  0x0000000002d9c924: nop
  0x0000000002d9c925: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9c92f: jmpq   0x0000000002d9c92f  ;   {runtime_call}
  0x0000000002d9c934: nop
  0x0000000002d9c935: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9c93f: jmpq   0x0000000002d9c93f  ;   {runtime_call}
  0x0000000002d9c944: nop
  0x0000000002d9c945: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9c94f: jmpq   0x0000000002d9c94f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d9c954: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d9c959: mov    %rsp,-0x28(%rsp)
  0x0000000002d9c95e: sub    $0x80,%rsp
  0x0000000002d9c965: mov    %rax,0x78(%rsp)
  0x0000000002d9c96a: mov    %rcx,0x70(%rsp)
  0x0000000002d9c96f: mov    %rdx,0x68(%rsp)
  0x0000000002d9c974: mov    %rbx,0x60(%rsp)
  0x0000000002d9c979: mov    %rbp,0x50(%rsp)
  0x0000000002d9c97e: mov    %rsi,0x48(%rsp)
  0x0000000002d9c983: mov    %rdi,0x40(%rsp)
  0x0000000002d9c988: mov    %r8,0x38(%rsp)
  0x0000000002d9c98d: mov    %r9,0x30(%rsp)
  0x0000000002d9c992: mov    %r10,0x28(%rsp)
  0x0000000002d9c997: mov    %r11,0x20(%rsp)
  0x0000000002d9c99c: mov    %r12,0x18(%rsp)
  0x0000000002d9c9a1: mov    %r13,0x10(%rsp)
  0x0000000002d9c9a6: mov    %r14,0x8(%rsp)
  0x0000000002d9c9ab: mov    %r15,(%rsp)
  0x0000000002d9c9af: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d9c9b9: movabs $0x2d9c959,%rdx    ;   {internal_word}
  0x0000000002d9c9c3: mov    %rsp,%r8
  0x0000000002d9c9c6: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9c9ca: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9c9cf: hlt    
[Deopt Handler Code]
  0x0000000002d9c9d0: movabs $0x2d9c9d0,%r10    ;   {section_word}
  0x0000000002d9c9da: push   %r10
  0x0000000002d9c9dc: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d9c9e1: hlt    
  0x0000000002d9c9e2: hlt    
  0x0000000002d9c9e3: hlt    
  0x0000000002d9c9e4: hlt    
  0x0000000002d9c9e5: hlt    
  0x0000000002d9c9e6: hlt    
  0x0000000002d9c9e7: hlt    
<nmethod compile_id='69' compiler='C1' level='3' entry='0x0000000002d9c4a0' size='2336' address='0x0000000002d9c310' relocation_offset='288' insts_offset='400' stub_offset='1552' scopes_data_offset='1768' scopes_pcs_offset='1968' dependencies_offset='2304' nul_chk_table_offset='2312' method='java/util/LinkedHashMap afterNodeInsertion (Z)V' bytes='40' count='628' iicount='628' stamp='8.611'/>
Decoding compiled method 0x0000000002d9cc50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002d9cdc0: mov    0x8(%rdx),%r10d
  0x0000000002d9cdc4: shl    $0x3,%r10
  0x0000000002d9cdc8: cmp    %rax,%r10
  0x0000000002d9cdcb: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d9cdd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d9cddc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d9cde0: mov    %eax,-0x6000(%rsp)
  0x0000000002d9cde7: push   %rbp
  0x0000000002d9cde8: sub    $0x30,%rsp
  0x0000000002d9cdec: mov    %rdx,%r9
  0x0000000002d9cdef: movabs $0x19647308,%rbx   ;   {metadata(method data for {method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d9cdf9: mov    0xdc(%rbx),%edx
  0x0000000002d9cdff: add    $0x8,%edx
  0x0000000002d9ce02: mov    %edx,0xdc(%rbx)
  0x0000000002d9ce08: movabs $0x193e4978,%rbx   ;   {metadata({method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d9ce12: and    $0x1ff8,%edx
  0x0000000002d9ce18: cmp    $0x0,%edx
  0x0000000002d9ce1b: je     0x0000000002d9cf0c  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@0 (line 67)

  0x0000000002d9ce21: mov    %r9,%rbx
  0x0000000002d9ce24: movabs $0x19647308,%rdx   ;   {metadata(method data for {method} {0x00000000193e4980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002d9ce2e: addq   $0x1,0x108(%rdx)
  0x0000000002d9ce36: movabs $0x194a47d8,%rbx   ;   {metadata(method data for {method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d9ce40: mov    0xdc(%rbx),%edx
  0x0000000002d9ce46: add    $0x8,%edx
  0x0000000002d9ce49: mov    %edx,0xdc(%rbx)
  0x0000000002d9ce4f: movabs $0x19370480,%rbx   ;   {metadata({method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d9ce59: and    $0x7ffff8,%edx
  0x0000000002d9ce5f: cmp    $0x0,%edx
  0x0000000002d9ce62: je     0x0000000002d9cf23
  0x0000000002d9ce68: mov    %r8,%rbx
  0x0000000002d9ce6b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002d9ce75: movslq %ebx,%rbx
  0x0000000002d9ce78: mov    %rbx,%rdi
  0x0000000002d9ce7b: cmp    $0xffffff,%rbx
  0x0000000002d9ce82: ja     0x0000000002d9cf3a
  0x0000000002d9ce88: movabs $0x17,%rsi
  0x0000000002d9ce92: lea    (%rsi,%rbx,2),%rsi
  0x0000000002d9ce96: and    $0xfffffffffffffff8,%rsi
  0x0000000002d9ce9a: mov    0x60(%r15),%rax
  0x0000000002d9ce9e: lea    (%rax,%rsi,1),%rsi
  0x0000000002d9cea2: cmp    0x70(%r15),%rsi
  0x0000000002d9cea6: ja     0x0000000002d9cf3a
  0x0000000002d9ceac: mov    %rsi,0x60(%r15)
  0x0000000002d9ceb0: sub    %rax,%rsi
  0x0000000002d9ceb3: movq   $0x1,(%rax)
  0x0000000002d9ceba: mov    %rdx,%rcx
  0x0000000002d9cebd: shr    $0x3,%rcx
  0x0000000002d9cec1: mov    %ecx,0x8(%rax)
  0x0000000002d9cec4: mov    %ebx,0xc(%rax)
  0x0000000002d9cec7: sub    $0x10,%rsi
  0x0000000002d9cecb: je     0x0000000002d9cee2
  0x0000000002d9ced1: xor    %rbx,%rbx
  0x0000000002d9ced4: shr    $0x3,%rsi
  0x0000000002d9ced8: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002d9cedd: dec    %rsi
  0x0000000002d9cee0: jne    0x0000000002d9ced8  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)

  0x0000000002d9cee2: mov    %rax,%r10
  0x0000000002d9cee5: shr    $0x3,%r10
  0x0000000002d9cee9: mov    %r10d,0x10(%r9)
  0x0000000002d9ceed: shr    $0x9,%r9
  0x0000000002d9cef1: movabs $0xe824000,%rsi
  0x0000000002d9cefb: movb   $0x0,(%r9,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)

  0x0000000002d9cf00: add    $0x30,%rsp
  0x0000000002d9cf04: pop    %rbp
  0x0000000002d9cf05: test   %eax,-0x40ce0b(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9cf0b: retq   
  0x0000000002d9cf0c: mov    %rbx,0x8(%rsp)
  0x0000000002d9cf11: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9cf19: callq  0x0000000002d710e0  ; OopMap{r9=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ;   {runtime_call}
  0x0000000002d9cf1e: jmpq   0x0000000002d9ce21
  0x0000000002d9cf23: mov    %rbx,0x8(%rsp)
  0x0000000002d9cf28: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9cf30: callq  0x0000000002d710e0  ; OopMap{r9=Oop off=373}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ;   {runtime_call}
  0x0000000002d9cf35: jmpq   0x0000000002d9ce68
  0x0000000002d9cf3a: callq  0x0000000002d6e600  ; OopMap{r9=Oop off=383}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ;   {runtime_call}
  0x0000000002d9cf3f: jmp    0x0000000002d9cee2
  0x0000000002d9cf41: nop
  0x0000000002d9cf42: nop
  0x0000000002d9cf43: mov    0x2a8(%r15),%rax
  0x0000000002d9cf4a: movabs $0x0,%r10
  0x0000000002d9cf54: mov    %r10,0x2a8(%r15)
  0x0000000002d9cf5b: movabs $0x0,%r10
  0x0000000002d9cf65: mov    %r10,0x2b0(%r15)
  0x0000000002d9cf6c: add    $0x30,%rsp
  0x0000000002d9cf70: pop    %rbp
  0x0000000002d9cf71: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9cf76: hlt    
  0x0000000002d9cf77: hlt    
  0x0000000002d9cf78: hlt    
  0x0000000002d9cf79: hlt    
  0x0000000002d9cf7a: hlt    
  0x0000000002d9cf7b: hlt    
  0x0000000002d9cf7c: hlt    
  0x0000000002d9cf7d: hlt    
  0x0000000002d9cf7e: hlt    
  0x0000000002d9cf7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d9cf80: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d9cf85: mov    %rsp,-0x28(%rsp)
  0x0000000002d9cf8a: sub    $0x80,%rsp
  0x0000000002d9cf91: mov    %rax,0x78(%rsp)
  0x0000000002d9cf96: mov    %rcx,0x70(%rsp)
  0x0000000002d9cf9b: mov    %rdx,0x68(%rsp)
  0x0000000002d9cfa0: mov    %rbx,0x60(%rsp)
  0x0000000002d9cfa5: mov    %rbp,0x50(%rsp)
  0x0000000002d9cfaa: mov    %rsi,0x48(%rsp)
  0x0000000002d9cfaf: mov    %rdi,0x40(%rsp)
  0x0000000002d9cfb4: mov    %r8,0x38(%rsp)
  0x0000000002d9cfb9: mov    %r9,0x30(%rsp)
  0x0000000002d9cfbe: mov    %r10,0x28(%rsp)
  0x0000000002d9cfc3: mov    %r11,0x20(%rsp)
  0x0000000002d9cfc8: mov    %r12,0x18(%rsp)
  0x0000000002d9cfcd: mov    %r13,0x10(%rsp)
  0x0000000002d9cfd2: mov    %r14,0x8(%rsp)
  0x0000000002d9cfd7: mov    %r15,(%rsp)
  0x0000000002d9cfdb: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d9cfe5: movabs $0x2d9cf85,%rdx    ;   {internal_word}
  0x0000000002d9cfef: mov    %rsp,%r8
  0x0000000002d9cff2: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9cff6: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9cffb: hlt    
[Deopt Handler Code]
  0x0000000002d9cffc: movabs $0x2d9cffc,%r10    ;   {section_word}
  0x0000000002d9d006: push   %r10
  0x0000000002d9d008: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d9d00d: hlt    
  0x0000000002d9d00e: hlt    
  0x0000000002d9d00f: hlt    
<nmethod compile_id='70' compiler='C1' level='3' entry='0x0000000002d9cdc0' size='1184' address='0x0000000002d9cc50' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='984' scopes_pcs_offset='1048' dependencies_offset='1176' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='680' iicount='680' stamp='8.622'/>
<writer thread='27984'/>
<task_queued compile_id='72' method='java/nio/ByteBuffer arrayOffset ()I' bytes='35' count='256' iicount='256' level='3' stamp='8.622' comment='tiered' hot_count='256'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d9d110:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019502b88} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap$Entry&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000002d9d280: mov    0x8(%rdx),%r10d
  0x0000000002d9d284: shl    $0x3,%r10
  0x0000000002d9d288: cmp    %rax,%r10
  0x0000000002d9d28b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d9d291: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d9d29c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d9d2a0: mov    %eax,-0x6000(%rsp)
  0x0000000002d9d2a7: push   %rbp
  0x0000000002d9d2a8: sub    $0x60,%rsp
  0x0000000002d9d2ac: movabs $0x196ad910,%rbx   ;   {metadata(method data for {method} {0x0000000019502b88} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x0000000002d9d2b6: mov    0xdc(%rbx),%eax
  0x0000000002d9d2bc: add    $0x8,%eax
  0x0000000002d9d2bf: mov    %eax,0xdc(%rbx)
  0x0000000002d9d2c5: movabs $0x19502b80,%rbx   ;   {metadata({method} {0x0000000019502b88} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x0000000002d9d2cf: and    $0x1ff8,%eax
  0x0000000002d9d2d5: cmp    $0x0,%eax
  0x0000000002d9d2d8: je     0x0000000002d9d3c5  ;*aload_0
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@0 (line 195)

  0x0000000002d9d2de: mov    %rdx,%rbx
  0x0000000002d9d2e1: movabs $0x196ad910,%rax   ;   {metadata(method data for {method} {0x0000000019502b88} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x0000000002d9d2eb: addq   $0x1,0x108(%rax)
  0x0000000002d9d2f3: movabs $0x1969f4d0,%rbx   ;   {metadata(method data for {method} {0x000000001945db50} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002d9d2fd: mov    0xdc(%rbx),%eax
  0x0000000002d9d303: add    $0x8,%eax
  0x0000000002d9d306: mov    %eax,0xdc(%rbx)
  0x0000000002d9d30c: movabs $0x1945db48,%rbx   ;   {metadata({method} {0x000000001945db50} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002d9d316: and    $0x7ffff8,%eax
  0x0000000002d9d31c: cmp    $0x0,%eax
  0x0000000002d9d31f: je     0x0000000002d9d3dc
  0x0000000002d9d325: mov    %rdx,%rbx
  0x0000000002d9d328: movabs $0x1969f4d0,%rax   ;   {metadata(method data for {method} {0x000000001945db50} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002d9d332: addq   $0x1,0x108(%rax)
  0x0000000002d9d33a: movabs $0x194a47d8,%rbx   ;   {metadata(method data for {method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d9d344: mov    0xdc(%rbx),%eax
  0x0000000002d9d34a: add    $0x8,%eax
  0x0000000002d9d34d: mov    %eax,0xdc(%rbx)
  0x0000000002d9d353: movabs $0x19370480,%rbx   ;   {metadata({method} {0x0000000019370488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002d9d35d: and    $0x7ffff8,%eax
  0x0000000002d9d363: cmp    $0x0,%eax
  0x0000000002d9d366: je     0x0000000002d9d3f3
  0x0000000002d9d36c: mov    %r8d,0xc(%rdx)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 286)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x0000000002d9d370: mov    %r9,%r10
  0x0000000002d9d373: shr    $0x3,%r10
  0x0000000002d9d377: mov    %r10d,0x10(%rdx)
  0x0000000002d9d37b: mov    %rdx,%rbx
  0x0000000002d9d37e: shr    $0x9,%rbx
  0x0000000002d9d382: movabs $0xe824000,%rax
  0x0000000002d9d38c: movb   $0x0,(%rbx,%rax,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x0000000002d9d390: mov    %rdi,%r10
  0x0000000002d9d393: shr    $0x3,%r10
  0x0000000002d9d397: mov    %r10d,0x14(%rdx)
  0x0000000002d9d39b: mov    %rdx,%rdi
  0x0000000002d9d39e: shr    $0x9,%rdi
  0x0000000002d9d3a2: movb   $0x0,(%rdi,%rax,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x0000000002d9d3a6: mov    %rsi,%r10
  0x0000000002d9d3a9: shr    $0x3,%r10
  0x0000000002d9d3ad: mov    %r10d,0x18(%rdx)
  0x0000000002d9d3b1: shr    $0x9,%rdx
  0x0000000002d9d3b5: movb   $0x0,(%rdx,%rax,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x0000000002d9d3b9: add    $0x60,%rsp
  0x0000000002d9d3bd: pop    %rbp
  0x0000000002d9d3be: test   %eax,-0x40d2c4(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9d3c4: retq   
  0x0000000002d9d3c5: mov    %rbx,0x8(%rsp)
  0x0000000002d9d3ca: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9d3d2: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=343}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@-1 (line 195)
                                                ;   {runtime_call}
  0x0000000002d9d3d7: jmpq   0x0000000002d9d2de
  0x0000000002d9d3dc: mov    %rbx,0x8(%rsp)
  0x0000000002d9d3e1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9d3e9: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=366}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 285)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ;   {runtime_call}
  0x0000000002d9d3ee: jmpq   0x0000000002d9d325
  0x0000000002d9d3f3: mov    %rbx,0x8(%rsp)
  0x0000000002d9d3f8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9d400: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=389}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 285)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ;   {runtime_call}
  0x0000000002d9d405: jmpq   0x0000000002d9d36c
  0x0000000002d9d40a: nop
  0x0000000002d9d40b: nop
  0x0000000002d9d40c: mov    0x2a8(%r15),%rax
  0x0000000002d9d413: movabs $0x0,%r10
  0x0000000002d9d41d: mov    %r10,0x2a8(%r15)
  0x0000000002d9d424: movabs $0x0,%r10
  0x0000000002d9d42e: mov    %r10,0x2b0(%r15)
  0x0000000002d9d435: add    $0x60,%rsp
  0x0000000002d9d439: pop    %rbp
  0x0000000002d9d43a: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9d43f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d9d440: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d9d445: mov    %rsp,-0x28(%rsp)
  0x0000000002d9d44a: sub    $0x80,%rsp
  0x0000000002d9d451: mov    %rax,0x78(%rsp)
  0x0000000002d9d456: mov    %rcx,0x70(%rsp)
  0x0000000002d9d45b: mov    %rdx,0x68(%rsp)
  0x0000000002d9d460: mov    %rbx,0x60(%rsp)
  0x0000000002d9d465: mov    %rbp,0x50(%rsp)
  0x0000000002d9d46a: mov    %rsi,0x48(%rsp)
  0x0000000002d9d46f: mov    %rdi,0x40(%rsp)
  0x0000000002d9d474: mov    %r8,0x38(%rsp)
  0x0000000002d9d479: mov    %r9,0x30(%rsp)
  0x0000000002d9d47e: mov    %r10,0x28(%rsp)
  0x0000000002d9d483: mov    %r11,0x20(%rsp)
  0x0000000002d9d488: mov    %r12,0x18(%rsp)
  0x0000000002d9d48d: mov    %r13,0x10(%rsp)
  0x0000000002d9d492: mov    %r14,0x8(%rsp)
  0x0000000002d9d497: mov    %r15,(%rsp)
  0x0000000002d9d49b: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d9d4a5: movabs $0x2d9d445,%rdx    ;   {internal_word}
  0x0000000002d9d4af: mov    %rsp,%r8
  0x0000000002d9d4b2: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9d4b6: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9d4bb: hlt    
[Deopt Handler Code]
  0x0000000002d9d4bc: movabs $0x2d9d4bc,%r10    ;   {section_word}
  0x0000000002d9d4c6: push   %r10
  0x0000000002d9d4c8: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d9d4cd: hlt    
  0x0000000002d9d4ce: hlt    
  0x0000000002d9d4cf: hlt    
<nmethod compile_id='67' compiler='C1' level='3' entry='0x0000000002d9d280' size='1256' address='0x0000000002d9d110' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='992' scopes_pcs_offset='1088' dependencies_offset='1248' method='java/util/LinkedHashMap$Entry &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='10' count='628' iicount='628' stamp='8.655'/>
Decoding compiled method 0x0000000002d9d610:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000194f3530} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    r8:r8     = &apos;java/util/LinkedHashMap$Entry&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d9d780: mov    0x8(%rdx),%r10d
  0x0000000002d9d784: shl    $0x3,%r10
  0x0000000002d9d788: cmp    %rax,%r10
  0x0000000002d9d78b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d9d791: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d9d79c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d9d7a0: mov    %eax,-0x6000(%rsp)
  0x0000000002d9d7a7: push   %rbp
  0x0000000002d9d7a8: sub    $0x30,%rsp
  0x0000000002d9d7ac: movabs $0x196ada60,%rsi   ;   {metadata(method data for {method} {0x00000000194f3530} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9d7b6: mov    0xdc(%rsi),%edi
  0x0000000002d9d7bc: add    $0x8,%edi
  0x0000000002d9d7bf: mov    %edi,0xdc(%rsi)
  0x0000000002d9d7c5: movabs $0x194f3528,%rsi   ;   {metadata({method} {0x00000000194f3530} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9d7cf: and    $0x1ff8,%edi
  0x0000000002d9d7d5: cmp    $0x0,%edi
  0x0000000002d9d7d8: je     0x0000000002d9d8b7  ;*aload_0
                                                ; - java.util.LinkedHashMap::linkNodeLast@0 (line 223)

  0x0000000002d9d7de: mov    0x34(%rdx),%esi
  0x0000000002d9d7e1: shl    $0x3,%rsi          ;*getfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@1 (line 223)

  0x0000000002d9d7e5: mov    %r8,%r10
  0x0000000002d9d7e8: shr    $0x3,%r10
  0x0000000002d9d7ec: mov    %r10d,0x34(%rdx)
  0x0000000002d9d7f0: mov    %rdx,%rdi
  0x0000000002d9d7f3: shr    $0x9,%rdi
  0x0000000002d9d7f7: movabs $0xe824000,%rbx
  0x0000000002d9d801: movb   $0x0,(%rdi,%rbx,1)  ;*putfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@7 (line 224)

  0x0000000002d9d805: cmp    $0x0,%rsi
  0x0000000002d9d809: movabs $0x196ada60,%rdi   ;   {metadata(method data for {method} {0x00000000194f3530} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9d813: movabs $0x108,%rbx
  0x0000000002d9d81d: jne    0x0000000002d9d82d
  0x0000000002d9d823: movabs $0x118,%rbx
  0x0000000002d9d82d: mov    (%rdi,%rbx,1),%rax
  0x0000000002d9d831: lea    0x1(%rax),%rax
  0x0000000002d9d835: mov    %rax,(%rdi,%rbx,1)
  0x0000000002d9d839: jne    0x0000000002d9d878  ;*ifnonnull
                                                ; - java.util.LinkedHashMap::linkNodeLast@11 (line 225)

  0x0000000002d9d83f: mov    %r8,%r10
  0x0000000002d9d842: shr    $0x3,%r10
  0x0000000002d9d846: mov    %r10d,0x30(%rdx)
  0x0000000002d9d84a: shr    $0x9,%rdx
  0x0000000002d9d84e: movabs $0xe824000,%rsi
  0x0000000002d9d858: movb   $0x0,(%rdx,%rsi,1)  ;*putfield head
                                                ; - java.util.LinkedHashMap::linkNodeLast@16 (line 226)

  0x0000000002d9d85c: movabs $0x196ada60,%rsi   ;   {metadata(method data for {method} {0x00000000194f3530} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002d9d866: incl   0x128(%rsi)        ;*goto
                                                ; - java.util.LinkedHashMap::linkNodeLast@19 (line 226)

  0x0000000002d9d86c: add    $0x30,%rsp
  0x0000000002d9d870: pop    %rbp
  0x0000000002d9d871: test   %eax,-0x40d777(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9d877: retq   
  0x0000000002d9d878: mov    %rsi,%r10
  0x0000000002d9d87b: shr    $0x3,%r10
  0x0000000002d9d87f: mov    %r10d,0x1c(%r8)    ; implicit exception: dispatches to 0x0000000002d9d8ce
  0x0000000002d9d883: mov    %r8,%rdi
  0x0000000002d9d886: shr    $0x9,%rdi
  0x0000000002d9d88a: movabs $0xe824000,%rbx
  0x0000000002d9d894: movb   $0x0,(%rdi,%rbx,1)  ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)

  0x0000000002d9d898: mov    %r8,%r10
  0x0000000002d9d89b: shr    $0x3,%r10
  0x0000000002d9d89f: mov    %r10d,0x20(%rsi)   ; implicit exception: dispatches to 0x0000000002d9d8d3
  0x0000000002d9d8a3: shr    $0x9,%rsi
  0x0000000002d9d8a7: movb   $0x0,(%rsi,%rbx,1)  ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)

  0x0000000002d9d8ab: add    $0x30,%rsp
  0x0000000002d9d8af: pop    %rbp
  0x0000000002d9d8b0: test   %eax,-0x40d7b6(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9d8b6: retq   
  0x0000000002d9d8b7: mov    %rsi,0x8(%rsp)
  0x0000000002d9d8bc: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9d8c4: callq  0x0000000002d710e0  ; OopMap{rdx=Oop r8=Oop off=329}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::linkNodeLast@-1 (line 223)
                                                ;   {runtime_call}
  0x0000000002d9d8c9: jmpq   0x0000000002d9d7de
  0x0000000002d9d8ce: callq  0x0000000002cdff40  ; OopMap{rsi=Oop r8=Oop off=339}
                                                ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)
                                                ;   {runtime_call}
  0x0000000002d9d8d3: callq  0x0000000002cdff40  ; OopMap{rsi=Oop off=344}
                                                ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ;   {runtime_call}
  0x0000000002d9d8d8: nop
  0x0000000002d9d8d9: nop
  0x0000000002d9d8da: mov    0x2a8(%r15),%rax
  0x0000000002d9d8e1: movabs $0x0,%r10
  0x0000000002d9d8eb: mov    %r10,0x2a8(%r15)
  0x0000000002d9d8f2: movabs $0x0,%r10
  0x0000000002d9d8fc: mov    %r10,0x2b0(%r15)
  0x0000000002d9d903: add    $0x30,%rsp
  0x0000000002d9d907: pop    %rbp
  0x0000000002d9d908: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9d90d: hlt    
  0x0000000002d9d90e: hlt    
  0x0000000002d9d90f: hlt    
  0x0000000002d9d910: hlt    
  0x0000000002d9d911: hlt    
  0x0000000002d9d912: hlt    
  0x0000000002d9d913: hlt    
  0x0000000002d9d914: hlt    
  0x0000000002d9d915: hlt    
  0x0000000002d9d916: hlt    
  0x0000000002d9d917: hlt    
  0x0000000002d9d918: hlt    
  0x0000000002d9d919: hlt    
  0x0000000002d9d91a: hlt    
  0x0000000002d9d91b: hlt    
  0x0000000002d9d91c: hlt    
  0x0000000002d9d91d: hlt    
  0x0000000002d9d91e: hlt    
  0x0000000002d9d91f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d9d920: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d9d925: mov    %rsp,-0x28(%rsp)
  0x0000000002d9d92a: sub    $0x80,%rsp
  0x0000000002d9d931: mov    %rax,0x78(%rsp)
  0x0000000002d9d936: mov    %rcx,0x70(%rsp)
  0x0000000002d9d93b: mov    %rdx,0x68(%rsp)
  0x0000000002d9d940: mov    %rbx,0x60(%rsp)
  0x0000000002d9d945: mov    %rbp,0x50(%rsp)
  0x0000000002d9d94a: mov    %rsi,0x48(%rsp)
  0x0000000002d9d94f: mov    %rdi,0x40(%rsp)
  0x0000000002d9d954: mov    %r8,0x38(%rsp)
  0x0000000002d9d959: mov    %r9,0x30(%rsp)
  0x0000000002d9d95e: mov    %r10,0x28(%rsp)
  0x0000000002d9d963: mov    %r11,0x20(%rsp)
  0x0000000002d9d968: mov    %r12,0x18(%rsp)
  0x0000000002d9d96d: mov    %r13,0x10(%rsp)
  0x0000000002d9d972: mov    %r14,0x8(%rsp)
  0x0000000002d9d977: mov    %r15,(%rsp)
  0x0000000002d9d97b: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d9d985: movabs $0x2d9d925,%rdx    ;   {internal_word}
  0x0000000002d9d98f: mov    %rsp,%r8
  0x0000000002d9d992: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9d996: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9d99b: hlt    
[Deopt Handler Code]
  0x0000000002d9d99c: movabs $0x2d9d99c,%r10    ;   {section_word}
  0x0000000002d9d9a6: push   %r10
  0x0000000002d9d9a8: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d9d9ad: hlt    
  0x0000000002d9d9ae: hlt    
  0x0000000002d9d9af: hlt    
<nmethod compile_id='68' compiler='C1' level='3' entry='0x0000000002d9d780' size='1264' address='0x0000000002d9d610' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='936' scopes_pcs_offset='1024' dependencies_offset='1232' nul_chk_table_offset='1240' method='java/util/LinkedHashMap linkNodeLast (Ljava/util/LinkedHashMap$Entry;)V' bytes='33' count='628' iicount='628' stamp='8.674'/>
<writer thread='5912'/>
<task_queued compile_id='73' method='java/nio/Buffer limit ()I' bytes='5' count='256' iicount='256' level='1' stamp='8.674' comment='tiered' hot_count='256'/>
<task_queued compile_id='74' method='java/nio/CharBuffer arrayOffset ()I' bytes='35' count='256' iicount='256' level='3' stamp='8.674' comment='tiered' hot_count='256'/>
<writer thread='28032'/>
Decoding compiled method 0x0000000002d9db10:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000194da128} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002d9dca0: mov    0x8(%rdx),%r10d
  0x0000000002d9dca4: shl    $0x3,%r10
  0x0000000002d9dca8: cmp    %rax,%r10
  0x0000000002d9dcab: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d9dcb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d9dcbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d9dcc0: mov    %eax,-0x6000(%rsp)
  0x0000000002d9dcc7: push   %rbp
  0x0000000002d9dcc8: sub    $0x40,%rsp
  0x0000000002d9dccc: movabs $0x196aee78,%rax   ;   {metadata(method data for {method} {0x00000000194da128} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000002d9dcd6: mov    0xdc(%rax),%esi
  0x0000000002d9dcdc: add    $0x8,%esi
  0x0000000002d9dcdf: mov    %esi,0xdc(%rax)
  0x0000000002d9dce5: movabs $0x194da120,%rax   ;   {metadata({method} {0x00000000194da128} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000002d9dcef: and    $0x1ff8,%esi
  0x0000000002d9dcf5: cmp    $0x0,%esi
  0x0000000002d9dcf8: je     0x0000000002d9de0e  ;*aload_0
                                                ; - java.nio.ByteBuffer::arrayOffset@0 (line 1021)

  0x0000000002d9dcfe: mov    0x2c(%rdx),%eax
  0x0000000002d9dd01: shl    $0x3,%rax          ;*getfield hb
                                                ; - java.nio.ByteBuffer::arrayOffset@1 (line 1021)

  0x0000000002d9dd05: cmp    $0x0,%rax
  0x0000000002d9dd09: movabs $0x196aee78,%rax   ;   {metadata(method data for {method} {0x00000000194da128} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000002d9dd13: movabs $0x108,%rsi
  0x0000000002d9dd1d: jne    0x0000000002d9dd2d
  0x0000000002d9dd23: movabs $0x118,%rsi
  0x0000000002d9dd2d: mov    (%rax,%rsi,1),%rdi
  0x0000000002d9dd31: lea    0x1(%rdi),%rdi
  0x0000000002d9dd35: mov    %rdi,(%rax,%rsi,1)
  0x0000000002d9dd39: je     0x0000000002d9ddce  ;*ifnonnull
                                                ; - java.nio.ByteBuffer::arrayOffset@4 (line 1021)

  0x0000000002d9dd3f: movsbl 0x28(%rdx),%eax    ;*getfield isReadOnly
                                                ; - java.nio.ByteBuffer::arrayOffset@16 (line 1023)

  0x0000000002d9dd43: cmp    $0x0,%eax
  0x0000000002d9dd46: movabs $0x196aee78,%rax   ;   {metadata(method data for {method} {0x00000000194da128} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000002d9dd50: movabs $0x138,%rsi
  0x0000000002d9dd5a: je     0x0000000002d9dd6a
  0x0000000002d9dd60: movabs $0x148,%rsi
  0x0000000002d9dd6a: mov    (%rax,%rsi,1),%rdi
  0x0000000002d9dd6e: lea    0x1(%rdi),%rdi
  0x0000000002d9dd72: mov    %rdi,(%rax,%rsi,1)
  0x0000000002d9dd76: jne    0x0000000002d9dd8b  ;*ifeq
                                                ; - java.nio.ByteBuffer::arrayOffset@19 (line 1023)

  0x0000000002d9dd7c: mov    0x24(%rdx),%eax    ;*getfield offset
                                                ; - java.nio.ByteBuffer::arrayOffset@31 (line 1025)

  0x0000000002d9dd7f: add    $0x40,%rsp
  0x0000000002d9dd83: pop    %rbp
  0x0000000002d9dd84: test   %eax,-0x40dc8a(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9dd8a: retq                      ;*ireturn
                                                ; - java.nio.ByteBuffer::arrayOffset@34 (line 1025)

  0x0000000002d9dd8b: nopl   0x0(%rax,%rax,1)
  0x0000000002d9dd90: jmpq   0x0000000002d9de34  ;   {no_reloc}
  0x0000000002d9dd95: add    %al,(%rax)
  0x0000000002d9dd97: add    %al,(%rax)
  0x0000000002d9dd99: add    %ch,%cl
  0x0000000002d9dd9b: lahf   
  0x0000000002d9dd9c: add    %al,(%rax)
  0x0000000002d9dd9e: add    %cl,-0x75(%rax)    ;*new  ; - java.nio.ByteBuffer::arrayOffset@22 (line 1024)

  0x0000000002d9dda1: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00000000194da128} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000002d9dda4: js     0x0000000002d9dd94
  0x0000000002d9dda6: pushq  $0x19
  0x0000000002d9dda8: add    %al,(%rax)
  0x0000000002d9ddaa: add    %al,(%rax)
  0x0000000002d9ddac: addq   $0x1,0x158(%rsi)
  0x0000000002d9ddb4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.ByteBuffer::arrayOffset@26 (line 1024)

  0x0000000002d9ddb7: mov    %rax,0x20(%rsp)
  0x0000000002d9ddbc: nop
  0x0000000002d9ddbd: nop
  0x0000000002d9ddbe: nop
  0x0000000002d9ddbf: callq  0x0000000002cb61a0  ; OopMap{[32]=Oop off=292}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.ByteBuffer::arrayOffset@26 (line 1024)
                                                ;   {optimized virtual_call}
  0x0000000002d9ddc4: mov    0x20(%rsp),%rax
  0x0000000002d9ddc9: jmpq   0x0000000002d9de9c  ;*athrow
                                                ; - java.nio.ByteBuffer::arrayOffset@29 (line 1024)

  0x0000000002d9ddce: xchg   %ax,%ax
  0x0000000002d9ddd0: jmpq   0x0000000002d9de5a  ;   {no_reloc}
  0x0000000002d9ddd5: add    %al,(%rax)
  0x0000000002d9ddd7: add    %al,(%rax)
  0x0000000002d9ddd9: add    %ch,%cl
  0x0000000002d9dddb: test   %eax,(%rax)
  0x0000000002d9dddd: add    %al,(%rax)         ;*new  ; - java.nio.ByteBuffer::arrayOffset@7 (line 1022)

  0x0000000002d9dddf: mov    %rax,%rdx
  0x0000000002d9dde2: movabs $0x196aee78,%rsi   ;   {metadata(method data for {method} {0x00000000194da128} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000002d9ddec: addq   $0x1,0x128(%rsi)
  0x0000000002d9ddf4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.ByteBuffer::arrayOffset@11 (line 1022)

  0x0000000002d9ddf7: mov    %rax,0x28(%rsp)
  0x0000000002d9ddfc: nop
  0x0000000002d9ddfd: nop
  0x0000000002d9ddfe: nop
  0x0000000002d9ddff: callq  0x0000000002cb61a0  ; OopMap{[40]=Oop off=356}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.ByteBuffer::arrayOffset@11 (line 1022)
                                                ;   {optimized virtual_call}
  0x0000000002d9de04: mov    0x28(%rsp),%rax
  0x0000000002d9de09: jmpq   0x0000000002d9de9c
  0x0000000002d9de0e: mov    %rax,0x8(%rsp)
  0x0000000002d9de13: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9de1b: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=384}
                                                ;*synchronization entry
                                                ; - java.nio.ByteBuffer::arrayOffset@-1 (line 1021)
                                                ;   {runtime_call}
  0x0000000002d9de20: jmpq   0x0000000002d9dcfe
  0x0000000002d9de25: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d9de2f: mov    $0xa050f00,%eax
  0x0000000002d9de34: callq  0x0000000002d72160  ; OopMap{off=409}
                                                ;*new  ; - java.nio.ByteBuffer::arrayOffset@22 (line 1024)
                                                ;   {runtime_call}
  0x0000000002d9de39: jmpq   0x0000000002d9dd90
  0x0000000002d9de3e: mov    %rdx,%rdx
  0x0000000002d9de41: callq  0x0000000002cdfa20  ; OopMap{off=422}
                                                ;*new  ; - java.nio.ByteBuffer::arrayOffset@22 (line 1024)
                                                ;   {runtime_call}
  0x0000000002d9de46: jmpq   0x0000000002d9dd9f
  0x0000000002d9de4b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d9de55: mov    $0xa050f00,%eax
  0x0000000002d9de5a: callq  0x0000000002d72160  ; OopMap{off=447}
                                                ;*new  ; - java.nio.ByteBuffer::arrayOffset@7 (line 1022)
                                                ;   {runtime_call}
  0x0000000002d9de5f: jmpq   0x0000000002d9ddd0
  0x0000000002d9de64: mov    %rdx,%rdx
  0x0000000002d9de67: callq  0x0000000002cdfa20  ; OopMap{off=460}
                                                ;*new  ; - java.nio.ByteBuffer::arrayOffset@7 (line 1022)
                                                ;   {runtime_call}
  0x0000000002d9de6c: jmpq   0x0000000002d9dddf
  0x0000000002d9de71: nop
  0x0000000002d9de72: nop
  0x0000000002d9de73: mov    0x2a8(%r15),%rax
  0x0000000002d9de7a: movabs $0x0,%r10
  0x0000000002d9de84: mov    %r10,0x2a8(%r15)
  0x0000000002d9de8b: movabs $0x0,%r10
  0x0000000002d9de95: mov    %r10,0x2b0(%r15)
  0x0000000002d9de9c: add    $0x40,%rsp
  0x0000000002d9dea0: pop    %rbp
  0x0000000002d9dea1: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9dea6: hlt    
  0x0000000002d9dea7: hlt    
  0x0000000002d9dea8: hlt    
  0x0000000002d9dea9: hlt    
  0x0000000002d9deaa: hlt    
  0x0000000002d9deab: hlt    
  0x0000000002d9deac: hlt    
  0x0000000002d9dead: hlt    
  0x0000000002d9deae: hlt    
  0x0000000002d9deaf: hlt    
  0x0000000002d9deb0: hlt    
  0x0000000002d9deb1: hlt    
  0x0000000002d9deb2: hlt    
  0x0000000002d9deb3: hlt    
  0x0000000002d9deb4: hlt    
  0x0000000002d9deb5: hlt    
  0x0000000002d9deb6: hlt    
  0x0000000002d9deb7: hlt    
  0x0000000002d9deb8: hlt    
  0x0000000002d9deb9: hlt    
  0x0000000002d9deba: hlt    
  0x0000000002d9debb: hlt    
  0x0000000002d9debc: hlt    
  0x0000000002d9debd: hlt    
  0x0000000002d9debe: hlt    
  0x0000000002d9debf: hlt    
[Stub Code]
  0x0000000002d9dec0: nop                       ;   {no_reloc}
  0x0000000002d9dec1: nop
  0x0000000002d9dec2: nop
  0x0000000002d9dec3: nop
  0x0000000002d9dec4: nop
  0x0000000002d9dec5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9decf: jmpq   0x0000000002d9decf  ;   {runtime_call}
  0x0000000002d9ded4: nop
  0x0000000002d9ded5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9dedf: jmpq   0x0000000002d9dedf  ;   {runtime_call}
[Exception Handler]
  0x0000000002d9dee4: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d9dee9: mov    %rsp,-0x28(%rsp)
  0x0000000002d9deee: sub    $0x80,%rsp
  0x0000000002d9def5: mov    %rax,0x78(%rsp)
  0x0000000002d9defa: mov    %rcx,0x70(%rsp)
  0x0000000002d9deff: mov    %rdx,0x68(%rsp)
  0x0000000002d9df04: mov    %rbx,0x60(%rsp)
  0x0000000002d9df09: mov    %rbp,0x50(%rsp)
  0x0000000002d9df0e: mov    %rsi,0x48(%rsp)
  0x0000000002d9df13: mov    %rdi,0x40(%rsp)
  0x0000000002d9df18: mov    %r8,0x38(%rsp)
  0x0000000002d9df1d: mov    %r9,0x30(%rsp)
  0x0000000002d9df22: mov    %r10,0x28(%rsp)
  0x0000000002d9df27: mov    %r11,0x20(%rsp)
  0x0000000002d9df2c: mov    %r12,0x18(%rsp)
  0x0000000002d9df31: mov    %r13,0x10(%rsp)
  0x0000000002d9df36: mov    %r14,0x8(%rsp)
  0x0000000002d9df3b: mov    %r15,(%rsp)
  0x0000000002d9df3f: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d9df49: movabs $0x2d9dee9,%rdx    ;   {internal_word}
  0x0000000002d9df53: mov    %rsp,%r8
  0x0000000002d9df56: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9df5a: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9df5f: hlt    
[Deopt Handler Code]
  0x0000000002d9df60: movabs $0x2d9df60,%r10    ;   {section_word}
  0x0000000002d9df6a: push   %r10
  0x0000000002d9df6c: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d9df71: hlt    
  0x0000000002d9df72: hlt    
  0x0000000002d9df73: hlt    
  0x0000000002d9df74: hlt    
  0x0000000002d9df75: hlt    
  0x0000000002d9df76: hlt    
  0x0000000002d9df77: hlt    
<nmethod compile_id='72' compiler='C1' level='3' entry='0x0000000002d9dca0' size='1600' address='0x0000000002d9db10' relocation_offset='288' insts_offset='400' stub_offset='944' scopes_data_offset='1136' scopes_pcs_offset='1256' dependencies_offset='1592' method='java/nio/ByteBuffer arrayOffset ()I' bytes='35' count='270' iicount='270' stamp='8.689'/>
Decoding compiled method 0x0000000002d9e190:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000194057d8} &apos;limit&apos; &apos;()I&apos; in &apos;java/nio/Buffer&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002d9e2e0: mov    0x8(%rdx),%r10d
  0x0000000002d9e2e4: shl    $0x3,%r10
  0x0000000002d9e2e8: cmp    %rax,%r10
  0x0000000002d9e2eb: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d9e2f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d9e2fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d9e300: mov    %eax,-0x6000(%rsp)
  0x0000000002d9e307: push   %rbp
  0x0000000002d9e308: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.nio.Buffer::limit@0 (line 256)

  0x0000000002d9e30c: mov    0x1c(%rdx),%eax    ;*getfield limit
                                                ; - java.nio.Buffer::limit@1 (line 256)

  0x0000000002d9e30f: add    $0x30,%rsp
  0x0000000002d9e313: pop    %rbp
  0x0000000002d9e314: test   %eax,-0x40e21a(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9e31a: retq   
  0x0000000002d9e31b: nop
  0x0000000002d9e31c: nop
  0x0000000002d9e31d: mov    0x2a8(%r15),%rax
  0x0000000002d9e324: movabs $0x0,%r10
  0x0000000002d9e32e: mov    %r10,0x2a8(%r15)
  0x0000000002d9e335: movabs $0x0,%r10
  0x0000000002d9e33f: mov    %r10,0x2b0(%r15)
  0x0000000002d9e346: add    $0x30,%rsp
  0x0000000002d9e34a: pop    %rbp
  0x0000000002d9e34b: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9e350: hlt    
  0x0000000002d9e351: hlt    
  0x0000000002d9e352: hlt    
  0x0000000002d9e353: hlt    
  0x0000000002d9e354: hlt    
  0x0000000002d9e355: hlt    
  0x0000000002d9e356: hlt    
  0x0000000002d9e357: hlt    
  0x0000000002d9e358: hlt    
  0x0000000002d9e359: hlt    
  0x0000000002d9e35a: hlt    
  0x0000000002d9e35b: hlt    
  0x0000000002d9e35c: hlt    
  0x0000000002d9e35d: hlt    
  0x0000000002d9e35e: hlt    
  0x0000000002d9e35f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002d9e360: callq  0x0000000002d6da60  ;   {no_reloc}
  0x0000000002d9e365: mov    %rsp,-0x28(%rsp)
  0x0000000002d9e36a: sub    $0x80,%rsp
  0x0000000002d9e371: mov    %rax,0x78(%rsp)
  0x0000000002d9e376: mov    %rcx,0x70(%rsp)
  0x0000000002d9e37b: mov    %rdx,0x68(%rsp)
  0x0000000002d9e380: mov    %rbx,0x60(%rsp)
  0x0000000002d9e385: mov    %rbp,0x50(%rsp)
  0x0000000002d9e38a: mov    %rsi,0x48(%rsp)
  0x0000000002d9e38f: mov    %rdi,0x40(%rsp)
  0x0000000002d9e394: mov    %r8,0x38(%rsp)
  0x0000000002d9e399: mov    %r9,0x30(%rsp)
  0x0000000002d9e39e: mov    %r10,0x28(%rsp)
  0x0000000002d9e3a3: mov    %r11,0x20(%rsp)
  0x0000000002d9e3a8: mov    %r12,0x18(%rsp)
  0x0000000002d9e3ad: mov    %r13,0x10(%rsp)
  0x0000000002d9e3b2: mov    %r14,0x8(%rsp)
  0x0000000002d9e3b7: mov    %r15,(%rsp)
  0x0000000002d9e3bb: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d9e3c5: movabs $0x2d9e365,%rdx    ;   {internal_word}
  0x0000000002d9e3cf: mov    %rsp,%r8
  0x0000000002d9e3d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9e3d6: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9e3db: hlt    
[Deopt Handler Code]
  0x0000000002d9e3dc: movabs $0x2d9e3dc,%r10    ;   {section_word}
  0x0000000002d9e3e6: push   %r10
  0x0000000002d9e3e8: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d9e3ed: hlt    
  0x0000000002d9e3ee: hlt    
  0x0000000002d9e3ef: hlt    
<nmethod compile_id='73' compiler='C1' level='1' entry='0x0000000002d9e2e0' size='704' address='0x0000000002d9e190' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/nio/Buffer limit ()I' bytes='5' count='261' iicount='261' stamp='8.692'/>
Decoding compiled method 0x0000000002d9e490:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000194fc298} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/CharBuffer&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002d9e620: mov    0x8(%rdx),%r10d
  0x0000000002d9e624: shl    $0x3,%r10
  0x0000000002d9e628: cmp    %rax,%r10
  0x0000000002d9e62b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002d9e631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002d9e63c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002d9e640: mov    %eax,-0x6000(%rsp)
  0x0000000002d9e647: push   %rbp
  0x0000000002d9e648: sub    $0x40,%rsp
  0x0000000002d9e64c: movabs $0x196b0428,%rax   ;   {metadata(method data for {method} {0x00000000194fc298} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000002d9e656: mov    0xdc(%rax),%esi
  0x0000000002d9e65c: add    $0x8,%esi
  0x0000000002d9e65f: mov    %esi,0xdc(%rax)
  0x0000000002d9e665: movabs $0x194fc290,%rax   ;   {metadata({method} {0x00000000194fc298} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000002d9e66f: and    $0x1ff8,%esi
  0x0000000002d9e675: cmp    $0x0,%esi
  0x0000000002d9e678: je     0x0000000002d9e78e  ;*aload_0
                                                ; - java.nio.CharBuffer::arrayOffset@0 (line 1021)

  0x0000000002d9e67e: mov    0x2c(%rdx),%eax
  0x0000000002d9e681: shl    $0x3,%rax          ;*getfield hb
                                                ; - java.nio.CharBuffer::arrayOffset@1 (line 1021)

  0x0000000002d9e685: cmp    $0x0,%rax
  0x0000000002d9e689: movabs $0x196b0428,%rax   ;   {metadata(method data for {method} {0x00000000194fc298} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000002d9e693: movabs $0x108,%rsi
  0x0000000002d9e69d: jne    0x0000000002d9e6ad
  0x0000000002d9e6a3: movabs $0x118,%rsi
  0x0000000002d9e6ad: mov    (%rax,%rsi,1),%rdi
  0x0000000002d9e6b1: lea    0x1(%rdi),%rdi
  0x0000000002d9e6b5: mov    %rdi,(%rax,%rsi,1)
  0x0000000002d9e6b9: je     0x0000000002d9e74e  ;*ifnonnull
                                                ; - java.nio.CharBuffer::arrayOffset@4 (line 1021)

  0x0000000002d9e6bf: movsbl 0x28(%rdx),%eax    ;*getfield isReadOnly
                                                ; - java.nio.CharBuffer::arrayOffset@16 (line 1023)

  0x0000000002d9e6c3: cmp    $0x0,%eax
  0x0000000002d9e6c6: movabs $0x196b0428,%rax   ;   {metadata(method data for {method} {0x00000000194fc298} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000002d9e6d0: movabs $0x138,%rsi
  0x0000000002d9e6da: je     0x0000000002d9e6ea
  0x0000000002d9e6e0: movabs $0x148,%rsi
  0x0000000002d9e6ea: mov    (%rax,%rsi,1),%rdi
  0x0000000002d9e6ee: lea    0x1(%rdi),%rdi
  0x0000000002d9e6f2: mov    %rdi,(%rax,%rsi,1)
  0x0000000002d9e6f6: jne    0x0000000002d9e70b  ;*ifeq
                                                ; - java.nio.CharBuffer::arrayOffset@19 (line 1023)

  0x0000000002d9e6fc: mov    0x24(%rdx),%eax    ;*getfield offset
                                                ; - java.nio.CharBuffer::arrayOffset@31 (line 1025)

  0x0000000002d9e6ff: add    $0x40,%rsp
  0x0000000002d9e703: pop    %rbp
  0x0000000002d9e704: test   %eax,-0x40e60a(%rip)        # 0x0000000002990100
                                                ;   {poll_return}
  0x0000000002d9e70a: retq                      ;*ireturn
                                                ; - java.nio.CharBuffer::arrayOffset@34 (line 1025)

  0x0000000002d9e70b: nopl   0x0(%rax,%rax,1)
  0x0000000002d9e710: jmpq   0x0000000002d9e7b4  ;   {no_reloc}
  0x0000000002d9e715: add    %al,(%rax)
  0x0000000002d9e717: add    %al,(%rax)
  0x0000000002d9e719: add    %ch,%cl
  0x0000000002d9e71b: lahf   
  0x0000000002d9e71c: add    %al,(%rax)
  0x0000000002d9e71e: add    %cl,-0x75(%rax)    ;*new  ; - java.nio.CharBuffer::arrayOffset@22 (line 1024)

  0x0000000002d9e721: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00000000194fc298} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000002d9e724: sub    %al,(%rbx,%rbp,2)
  0x0000000002d9e727: sbb    %eax,(%rax)
  0x0000000002d9e729: add    %al,(%rax)
  0x0000000002d9e72b: add    %cl,-0x7d(%rax)
  0x0000000002d9e72e: xchg   %bl,0x1(%rax)
  0x0000000002d9e731: add    %al,(%rax)
  0x0000000002d9e733: add    %ecx,-0x75(%rax)
  0x0000000002d9e736: rorb   -0x77(%rax)        ;*invokespecial &lt;init&gt;
                                                ; - java.nio.CharBuffer::arrayOffset@26 (line 1024)

  0x0000000002d9e739: rex.R and $0x20,%al
  0x0000000002d9e73c: nop
  0x0000000002d9e73d: nop
  0x0000000002d9e73e: nop
  0x0000000002d9e73f: callq  0x0000000002cb61a0  ; OopMap{[32]=Oop off=292}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.CharBuffer::arrayOffset@26 (line 1024)
                                                ;   {optimized virtual_call}
  0x0000000002d9e744: mov    0x20(%rsp),%rax
  0x0000000002d9e749: jmpq   0x0000000002d9e81c  ;*athrow
                                                ; - java.nio.CharBuffer::arrayOffset@29 (line 1024)

  0x0000000002d9e74e: xchg   %ax,%ax
  0x0000000002d9e750: jmpq   0x0000000002d9e7da  ;   {no_reloc}
  0x0000000002d9e755: add    %al,(%rax)
  0x0000000002d9e757: add    %al,(%rax)
  0x0000000002d9e759: add    %ch,%cl
  0x0000000002d9e75b: test   %eax,(%rax)
  0x0000000002d9e75d: add    %al,(%rax)         ;*new  ; - java.nio.CharBuffer::arrayOffset@7 (line 1022)

  0x0000000002d9e75f: mov    %rax,%rdx
  0x0000000002d9e762: movabs $0x196b0428,%rsi   ;   {metadata(method data for {method} {0x00000000194fc298} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000002d9e76c: addq   $0x1,0x128(%rsi)
  0x0000000002d9e774: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.CharBuffer::arrayOffset@11 (line 1022)

  0x0000000002d9e777: mov    %rax,0x28(%rsp)
  0x0000000002d9e77c: nop
  0x0000000002d9e77d: nop
  0x0000000002d9e77e: nop
  0x0000000002d9e77f: callq  0x0000000002cb61a0  ; OopMap{[40]=Oop off=356}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.CharBuffer::arrayOffset@11 (line 1022)
                                                ;   {optimized virtual_call}
  0x0000000002d9e784: mov    0x28(%rsp),%rax
  0x0000000002d9e789: jmpq   0x0000000002d9e81c
  0x0000000002d9e78e: mov    %rax,0x8(%rsp)
  0x0000000002d9e793: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002d9e79b: callq  0x0000000002d710e0  ; OopMap{rdx=Oop off=384}
                                                ;*synchronization entry
                                                ; - java.nio.CharBuffer::arrayOffset@-1 (line 1021)
                                                ;   {runtime_call}
  0x0000000002d9e7a0: jmpq   0x0000000002d9e67e
  0x0000000002d9e7a5: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d9e7af: mov    $0xa050f00,%eax
  0x0000000002d9e7b4: callq  0x0000000002d72160  ; OopMap{off=409}
                                                ;*new  ; - java.nio.CharBuffer::arrayOffset@22 (line 1024)
                                                ;   {runtime_call}
  0x0000000002d9e7b9: jmpq   0x0000000002d9e710
  0x0000000002d9e7be: mov    %rdx,%rdx
  0x0000000002d9e7c1: callq  0x0000000002cdfa20  ; OopMap{off=422}
                                                ;*new  ; - java.nio.CharBuffer::arrayOffset@22 (line 1024)
                                                ;   {runtime_call}
  0x0000000002d9e7c6: jmpq   0x0000000002d9e71f
  0x0000000002d9e7cb: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002d9e7d5: mov    $0xa050f00,%eax
  0x0000000002d9e7da: callq  0x0000000002d72160  ; OopMap{off=447}
                                                ;*new  ; - java.nio.CharBuffer::arrayOffset@7 (line 1022)
                                                ;   {runtime_call}
  0x0000000002d9e7df: jmpq   0x0000000002d9e750
  0x0000000002d9e7e4: mov    %rdx,%rdx
  0x0000000002d9e7e7: callq  0x0000000002cdfa20  ; OopMap{off=460}
                                                ;*new  ; - java.nio.CharBuffer::arrayOffset@7 (line 1022)
                                                ;   {runtime_call}
  0x0000000002d9e7ec: jmpq   0x0000000002d9e75f
  0x0000000002d9e7f1: nop
  0x0000000002d9e7f2: nop
  0x0000000002d9e7f3: mov    0x2a8(%r15),%rax
  0x0000000002d9e7fa: movabs $0x0,%r10
  0x0000000002d9e804: mov    %r10,0x2a8(%r15)
  0x0000000002d9e80b: movabs $0x0,%r10
  0x0000000002d9e815: mov    %r10,0x2b0(%r15)
  0x0000000002d9e81c: add    $0x40,%rsp
  0x0000000002d9e820: pop    %rbp
  0x0000000002d9e821: jmpq   0x0000000002cdede0  ;   {runtime_call}
  0x0000000002d9e826: hlt    
  0x0000000002d9e827: hlt    
  0x0000000002d9e828: hlt    
  0x0000000002d9e829: hlt    
  0x0000000002d9e82a: hlt    
  0x0000000002d9e82b: hlt    
  0x0000000002d9e82c: hlt    
  0x0000000002d9e82d: hlt    
  0x0000000002d9e82e: hlt    
  0x0000000002d9e82f: hlt    
  0x0000000002d9e830: hlt    
  0x0000000002d9e831: hlt    
  0x0000000002d9e832: hlt    
  0x0000000002d9e833: hlt    
  0x0000000002d9e834: hlt    
  0x0000000002d9e835: hlt    
  0x0000000002d9e836: hlt    
  0x0000000002d9e837: hlt    
  0x0000000002d9e838: hlt    
  0x0000000002d9e839: hlt    
  0x0000000002d9e83a: hlt    
  0x0000000002d9e83b: hlt    
  0x0000000002d9e83c: hlt    
  0x0000000002d9e83d: hlt    
  0x0000000002d9e83e: hlt    
  0x0000000002d9e83f: hlt    
[Stub Code]
  0x0000000002d9e840: nop                       ;   {no_reloc}
  0x0000000002d9e841: nop
  0x0000000002d9e842: nop
  0x0000000002d9e843: nop
  0x0000000002d9e844: nop
  0x0000000002d9e845: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9e84f: jmpq   0x0000000002d9e84f  ;   {runtime_call}
  0x0000000002d9e854: nop
  0x0000000002d9e855: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002d9e85f: jmpq   0x0000000002d9e85f  ;   {runtime_call}
[Exception Handler]
  0x0000000002d9e864: callq  0x0000000002d6da60  ;   {runtime_call}
  0x0000000002d9e869: mov    %rsp,-0x28(%rsp)
  0x0000000002d9e86e: sub    $0x80,%rsp
  0x0000000002d9e875: mov    %rax,0x78(%rsp)
  0x0000000002d9e87a: mov    %rcx,0x70(%rsp)
  0x0000000002d9e87f: mov    %rdx,0x68(%rsp)
  0x0000000002d9e884: mov    %rbx,0x60(%rsp)
  0x0000000002d9e889: mov    %rbp,0x50(%rsp)
  0x0000000002d9e88e: mov    %rsi,0x48(%rsp)
  0x0000000002d9e893: mov    %rdi,0x40(%rsp)
  0x0000000002d9e898: mov    %r8,0x38(%rsp)
  0x0000000002d9e89d: mov    %r9,0x30(%rsp)
  0x0000000002d9e8a2: mov    %r10,0x28(%rsp)
  0x0000000002d9e8a7: mov    %r11,0x20(%rsp)
  0x0000000002d9e8ac: mov    %r12,0x18(%rsp)
  0x0000000002d9e8b1: mov    %r13,0x10(%rsp)
  0x0000000002d9e8b6: mov    %r14,0x8(%rsp)
  0x0000000002d9e8bb: mov    %r15,(%rsp)
  0x0000000002d9e8bf: movabs $0x5e4e0790,%rcx   ;   {external_word}
  0x0000000002d9e8c9: movabs $0x2d9e869,%rdx    ;   {internal_word}
  0x0000000002d9e8d3: mov    %rsp,%r8
  0x0000000002d9e8d6: and    $0xfffffffffffffff0,%rsp
  0x0000000002d9e8da: callq  0x000000005e196d10  ;   {runtime_call}
  0x0000000002d9e8df: hlt    
[Deopt Handler Code]
  0x0000000002d9e8e0: movabs $0x2d9e8e0,%r10    ;   {section_word}
  0x0000000002d9e8ea: push   %r10
  0x0000000002d9e8ec: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002d9e8f1: hlt    
  0x0000000002d9e8f2: hlt    
  0x0000000002d9e8f3: hlt    
  0x0000000002d9e8f4: hlt    
  0x0000000002d9e8f5: hlt    
  0x0000000002d9e8f6: hlt    
  0x0000000002d9e8f7: hlt    
<nmethod compile_id='74' compiler='C1' level='3' entry='0x0000000002d9e620' size='1600' address='0x0000000002d9e490' relocation_offset='288' insts_offset='400' stub_offset='944' scopes_data_offset='1136' scopes_pcs_offset='1256' dependencies_offset='1592' method='java/nio/CharBuffer arrayOffset ()I' bytes='35' count='257' iicount='257' stamp='8.711'/>
<writer thread='1944'/>
Decoding compiled method 0x0000000002da1d10:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000193e0f58} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0xa0]  (sp of caller)
  0x0000000002da1e60: mov    0x8(%rdx),%r10d
  0x0000000002da1e64: shl    $0x3,%r10
  0x0000000002da1e68: cmp    %r10,%rax
  0x0000000002da1e6b: jne    0x0000000002cb5f60  ;   {runtime_call}
  0x0000000002da1e71: data16 xchg %ax,%ax
  0x0000000002da1e74: nopl   0x0(%rax,%rax,1)
  0x0000000002da1e7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002da1e80: mov    %eax,-0x6000(%rsp)
  0x0000000002da1e87: push   %rbp
  0x0000000002da1e88: sub    $0x90,%rsp
  0x0000000002da1e8f: mov    %r8d,0x30(%rsp)
  0x0000000002da1e94: mov    %rdx,%rbp
  0x0000000002da1e97: mov    (%rdx),%rax
  0x0000000002da1e9a: mov    %rax,%r10
  0x0000000002da1e9d: and    $0x7,%r10
  0x0000000002da1ea1: cmp    $0x5,%r10
  0x0000000002da1ea5: jne    0x0000000002da21a2
  0x0000000002da1eab: mov    $0xf8001b17,%r11d  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x0000000002da1eb1: movabs $0x0,%r10
  0x0000000002da1ebb: lea    (%r10,%r11,8),%r10
  0x0000000002da1ebf: mov    0xa8(%r10),%r10
  0x0000000002da1ec6: mov    %r10,%r11
  0x0000000002da1ec9: or     %r15,%r11
  0x0000000002da1ecc: mov    %r11,%r8
  0x0000000002da1ecf: xor    %rax,%r8
  0x0000000002da1ed2: test   $0xffffffffffffff87,%r8
  0x0000000002da1ed9: jne    0x0000000002da220d  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x0000000002da1edf: mov    0x10(%rbp),%ecx    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1ee2: mov    %r12d,0x14(%rbp)   ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)

  0x0000000002da1ee6: mov    0xc(%r12,%rcx,8),%r9d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; implicit exception: dispatches to 0x0000000002da2337
  0x0000000002da1eeb: mov    0xc(%rbp),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1eef: mov    %r11d,%r10d
  0x0000000002da1ef2: sub    %r9d,%r10d
  0x0000000002da1ef5: mov    %rcx,%rdi
  0x0000000002da1ef8: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1efc: inc    %r10d
  0x0000000002da1eff: mov    %r11d,%r8d
  0x0000000002da1f02: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1f05: test   %r10d,%r10d
  0x0000000002da1f08: jg     0x0000000002da1f55  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1f0a: mov    %r8d,0xc(%rbp)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1f0e: test   %rdi,%rdi
  0x0000000002da1f11: je     0x0000000002da2172
  0x0000000002da1f17: mov    0xc(%rdi),%r10d
  0x0000000002da1f1b: cmp    %r10d,%r11d
  0x0000000002da1f1e: jae    0x0000000002da2185
  0x0000000002da1f24: mov    0x30(%rsp),%r10d
  0x0000000002da1f29: mov    %r10w,0x10(%rdi,%r11,2)
  0x0000000002da1f2f: mov    $0x7,%r10d
  0x0000000002da1f35: and    0x0(%rbp),%r10
  0x0000000002da1f39: cmp    $0x5,%r10
  0x0000000002da1f3d: jne    0x0000000002da2238  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x0000000002da1f43: mov    %rbp,%rax
  0x0000000002da1f46: add    $0x90,%rsp
  0x0000000002da1f4d: pop    %rbp
  0x0000000002da1f4e: test   %eax,-0x411f54(%rip)        # 0x0000000002990000
                                                ;   {poll_return}
  0x0000000002da1f54: retq   
  0x0000000002da1f55: mov    %r9d,%r10d
  0x0000000002da1f58: shl    %r10d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1f5b: mov    %r10d,%edx
  0x0000000002da1f5e: sub    %r11d,%edx
  0x0000000002da1f61: inc    %edx
  0x0000000002da1f63: test   %edx,%edx
  0x0000000002da1f65: jge    0x0000000002da20b6  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1f6b: mov    %r8d,%r10d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1f6e: test   %r10d,%r10d
  0x0000000002da1f71: jle    0x0000000002da1f7f  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1f73: mov    $0x7ffffff7,%edx
  0x0000000002da1f78: sub    %r10d,%edx
  0x0000000002da1f7b: test   %edx,%edx
  0x0000000002da1f7d: jge    0x0000000002da1fa9  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1f7f: mov    %r9d,0x48(%rsp)
  0x0000000002da1f84: mov    %ecx,0x34(%rsp)
  0x0000000002da1f88: mov    %rdi,0x20(%rsp)    ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1f8d: mov    %rbp,%rdx
  0x0000000002da1f90: data16 xchg %ax,%ax
  0x0000000002da1f93: callq  0x0000000002cb61a0  ; OopMap{rbp=Oop [32]=Oop [52]=NarrowOop off=312}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {optimized virtual_call}
  0x0000000002da1f98: mov    0x20(%rsp),%rdi
  0x0000000002da1f9d: mov    %eax,%r10d
  0x0000000002da1fa0: mov    0x34(%rsp),%ecx
  0x0000000002da1fa4: mov    0x48(%rsp),%r9d    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1fa9: cmp    $0x80000,%r10d
  0x0000000002da1fb0: ja     0x0000000002da22e6
  0x0000000002da1fb6: movslq %r10d,%rax         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1fb9: cmp    %r10d,%r9d
  0x0000000002da1fbc: mov    %r10d,%r11d
  0x0000000002da1fbf: cmovl  %r9d,%r11d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1fc3: shl    %rax
  0x0000000002da1fc6: lea    (%r12,%rcx,8),%r14  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1fca: add    $0x17,%rax         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1fce: mov    %rax,%rsi
  0x0000000002da1fd1: shr    $0x3,%rsi          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1fd5: and    $0xfffffffffffffff8,%rax  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1fd9: mov    %rsi,%r13
  0x0000000002da1fdc: add    $0xfffffffffffffffe,%r13  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da1fe0: cmp    $0x80000,%r10d
  0x0000000002da1fe7: ja     0x0000000002da20ff
  0x0000000002da1fed: mov    0x60(%r15),%rbx
  0x0000000002da1ff1: mov    %rbx,%r8
  0x0000000002da1ff4: add    %rax,%r8
  0x0000000002da1ff7: cmp    0x70(%r15),%r8
  0x0000000002da1ffb: jae    0x0000000002da20ff
  0x0000000002da2001: mov    %r8,0x60(%r15)
  0x0000000002da2005: prefetchw 0xc0(%r8)
  0x0000000002da200d: movq   $0x1,(%rbx)
  0x0000000002da2014: prefetchw 0x100(%r8)
  0x0000000002da201c: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x0000000002da2023: mov    %r10d,0xc(%rbx)
  0x0000000002da2027: prefetchw 0x140(%r8)
  0x0000000002da202f: prefetchw 0x180(%r8)      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da2037: mov    %rbx,%rdx
  0x0000000002da203a: add    $0x10,%rdx         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da203e: mov    %rbx,%r8
  0x0000000002da2041: shr    $0x3,%r8           ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da2045: mov    %r8d,0x34(%rsp)
  0x0000000002da204a: cmp    %r11d,%r9d
  0x0000000002da204d: jb     0x0000000002da22ee
  0x0000000002da2053: cmp    %r11d,%r10d
  0x0000000002da2056: jb     0x0000000002da22ee
  0x0000000002da205c: test   %r11d,%r11d
  0x0000000002da205f: jle    0x0000000002da2322
  0x0000000002da2065: lea    0x10(%r12,%rcx,8),%r9
  0x0000000002da206a: cmp    %r10d,%r11d
  0x0000000002da206d: jl     0x0000000002da20bf
  0x0000000002da206f: add    $0xfffffffffffffff0,%rax
  0x0000000002da2073: shr    $0x3,%rax
  0x0000000002da2077: mov    %r9,%rcx
  0x0000000002da207a: mov    %rax,%r8
  0x0000000002da207d: movabs $0x2cc2ca0,%r10
  0x0000000002da2087: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da208a: mov    0x34(%rsp),%r11d
  0x0000000002da208f: mov    %r11d,0x10(%rbp)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da2093: mov    0xc(%rbp),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da2097: mov    %rbp,%r10
  0x0000000002da209a: mov    %r11d,%r8d
  0x0000000002da209d: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da20a0: shr    $0x9,%r10
  0x0000000002da20a4: mov    $0xe824000,%r9d
  0x0000000002da20aa: mov    %r12b,(%r9,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da20ae: mov    %rbx,%rdi
  0x0000000002da20b1: jmpq   0x0000000002da1f0a
  0x0000000002da20b6: add    $0x2,%r10d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da20ba: jmpq   0x0000000002da1f6e
  0x0000000002da20bf: movslq %r11d,%r8
  0x0000000002da20c2: mov    %r8,%r10
  0x0000000002da20c5: shl    %r10
  0x0000000002da20c8: add    $0x10,%r10
  0x0000000002da20cc: mov    %r10,%r11
  0x0000000002da20cf: and    $0xfffffffffffffff9,%r11
  0x0000000002da20d3: mov    %rbx,%rdi
  0x0000000002da20d6: add    %r11,%rdi
  0x0000000002da20d9: shr    $0x3,%r10
  0x0000000002da20dd: sub    %r10,%rsi
  0x0000000002da20e0: mov    %rsi,%rcx
  0x0000000002da20e3: xor    %rax,%rax
  0x0000000002da20e6: shl    $0x3,%rcx
  0x0000000002da20ea: rep rex.W stos %al,%es:(%rdi)
  0x0000000002da20ed: mov    %r9,%rcx
  0x0000000002da20f0: movabs $0x2cc2980,%r10
  0x0000000002da20fa: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da20fd: jmp    0x0000000002da208a
  0x0000000002da20ff: mov    %r9d,0x70(%rsp)
  0x0000000002da2104: mov    %ecx,0x34(%rsp)
  0x0000000002da2108: mov    %r13,0x48(%rsp)
  0x0000000002da210d: mov    %rsi,0x40(%rsp)
  0x0000000002da2112: mov    %r14,0x38(%rsp)
  0x0000000002da2117: mov    %r11d,0x24(%rsp)
  0x0000000002da211c: mov    %rax,0x28(%rsp)
  0x0000000002da2121: mov    %r10d,0x20(%rsp)   ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da2126: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002da2130: mov    0x20(%rsp),%r8d
  0x0000000002da2135: mov    %rdi,0x68(%rsp)
  0x0000000002da213a: nop
  0x0000000002da213b: callq  0x0000000002d70d60  ; OopMap{rbp=Oop [52]=NarrowOop [56]=Oop [104]=Oop off=736}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002da2140: mov    %rax,%r8
  0x0000000002da2143: mov    0x20(%rsp),%r10d
  0x0000000002da2148: mov    0x28(%rsp),%rax
  0x0000000002da214d: mov    0x24(%rsp),%r11d
  0x0000000002da2152: mov    0x38(%rsp),%r14
  0x0000000002da2157: mov    0x40(%rsp),%rsi
  0x0000000002da215c: mov    0x48(%rsp),%r13
  0x0000000002da2161: mov    %r8,%rbx
  0x0000000002da2164: mov    0x34(%rsp),%ecx
  0x0000000002da2168: mov    0x70(%rsp),%r9d
  0x0000000002da216d: jmpq   0x0000000002da2037
  0x0000000002da2172: mov    $0xfffffff6,%edx
  0x0000000002da2177: mov    %r11d,0x24(%rsp)
  0x0000000002da217c: data16 xchg %ax,%ax
  0x0000000002da217f: callq  0x0000000002cb57a0  ; OopMap{rbp=Oop off=804}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002da2184: int3   
  0x0000000002da2185: mov    $0xffffffe4,%edx
  0x0000000002da218a: mov    %rdi,0x38(%rsp)
  0x0000000002da218f: mov    %r11d,0x34(%rsp)
  0x0000000002da2194: data16 xchg %ax,%ax
  0x0000000002da2197: callq  0x0000000002cb57a0  ; OopMap{rbp=Oop [56]=Oop off=828}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002da219c: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da219d: lock cmpxchg %r10,(%rdx)
  0x0000000002da21a2: lea    0x80(%rsp),%rbx
  0x0000000002da21aa: mov    (%rdx),%rax
  0x0000000002da21ad: test   $0x2,%rax
  0x0000000002da21b3: jne    0x0000000002da21d9
  0x0000000002da21b5: or     $0x1,%rax
  0x0000000002da21b9: mov    %rax,(%rbx)
  0x0000000002da21bc: lock cmpxchg %rbx,(%rdx)
  0x0000000002da21c1: je     0x0000000002da21f2
  0x0000000002da21c7: sub    %rsp,%rax
  0x0000000002da21ca: and    $0xfffffffffffff007,%rax
  0x0000000002da21d1: mov    %rax,(%rbx)
  0x0000000002da21d4: jmpq   0x0000000002da21f2
  0x0000000002da21d9: movq   $0x3,(%rbx)
  0x0000000002da21e0: mov    %rax,%rbx
  0x0000000002da21e3: mov    0x16(%rbx),%rax
  0x0000000002da21e7: test   %rax,%rax
  0x0000000002da21ea: jne    0x0000000002da21f2
  0x0000000002da21ec: lock cmpxchg %r15,0x16(%rbx)
  0x0000000002da21f2: je     0x0000000002da1edf
  0x0000000002da21f8: lea    0x80(%rsp),%r8
  0x0000000002da2200: data16 xchg %ax,%ax
  0x0000000002da2203: callq  0x0000000002d73460  ; OopMap{rbp=Oop off=936}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x0000000002da2208: jmpq   0x0000000002da1edf
  0x0000000002da220d: test   $0x7,%r8
  0x0000000002da2214: jne    0x0000000002da219d
  0x0000000002da2216: test   $0x300,%r8
  0x0000000002da221d: jne    0x0000000002da222c
  0x0000000002da221f: and    $0x37f,%rax
  0x0000000002da2226: mov    %rax,%r11
  0x0000000002da2229: or     %r15,%r11
  0x0000000002da222c: lock cmpxchg %r11,(%rdx)
  0x0000000002da2231: jne    0x0000000002da21f8
  0x0000000002da2233: jmpq   0x0000000002da1edf
  0x0000000002da2238: lea    0x80(%rsp),%rax
  0x0000000002da2240: cmpq   $0x0,(%rax)
  0x0000000002da2247: je     0x0000000002da22c3
  0x0000000002da224d: mov    0x0(%rbp),%r10
  0x0000000002da2251: test   $0x2,%r10
  0x0000000002da2258: je     0x0000000002da22ba
  0x0000000002da225a: mov    0x16(%r10),%rax
  0x0000000002da225e: xor    %r15,%rax
  0x0000000002da2261: or     0x26(%r10),%rax
  0x0000000002da2265: jne    0x0000000002da22c3
  0x0000000002da2267: mov    0x36(%r10),%rax
  0x0000000002da226b: or     0x3e(%r10),%rax
  0x0000000002da226f: jne    0x0000000002da227b
  0x0000000002da2271: movq   $0x0,0x16(%r10)
  0x0000000002da2279: jmp    0x0000000002da22c3
  0x0000000002da227b: cmpq   $0x0,0x46(%r10)
  0x0000000002da2283: je     0x0000000002da22ae
  0x0000000002da2285: movq   $0x0,0x16(%r10)
  0x0000000002da228d: lock addl $0x0,(%rsp)
  0x0000000002da2292: cmpq   $0x0,0x46(%r10)
  0x0000000002da229a: jne    0x0000000002da22b3
  0x0000000002da229c: movabs $0x0,%rax
  0x0000000002da22a6: lock cmpxchg %r15,0x16(%r10)
  0x0000000002da22ac: jne    0x0000000002da22b3
  0x0000000002da22ae: or     $0x1,%eax
  0x0000000002da22b1: jmp    0x0000000002da22c3
  0x0000000002da22b3: test   $0x0,%eax
  0x0000000002da22b8: jmp    0x0000000002da22c3
  0x0000000002da22ba: mov    (%rax),%r10
  0x0000000002da22bd: lock cmpxchg %r10,0x0(%rbp)
  0x0000000002da22c3: je     0x0000000002da1f43
  0x0000000002da22c9: mov    %rbp,%rcx
  0x0000000002da22cc: lea    0x80(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x0000000002da22d4: movabs $0x5e0cded0,%r10
  0x0000000002da22de: callq  *%r10              ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x0000000002da22e1: jmpq   0x0000000002da1f43
  0x0000000002da22e6: movslq %r10d,%rax         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da22e9: jmpq   0x0000000002da1fb9
  0x0000000002da22ee: mov    %rbx,0x20(%rsp)
  0x0000000002da22f3: mov    %r13,%rcx
  0x0000000002da22f6: mov    %rdx,%rdi
  0x0000000002da22f9: xor    %rax,%rax
  0x0000000002da22fc: shl    $0x3,%rcx
  0x0000000002da2300: rep rex.W stos %al,%es:(%rdi)
  0x0000000002da2303: mov    %r14,%rdx
  0x0000000002da2306: xor    %r8d,%r8d
  0x0000000002da2309: mov    %rbx,%r9
  0x0000000002da230c: xor    %edi,%edi
  0x0000000002da230e: mov    %r11d,%esi
  0x0000000002da2311: xchg   %ax,%ax
  0x0000000002da2313: callq  0x0000000002d767e0  ; OopMap{rbp=Oop [32]=Oop [52]=NarrowOop off=1208}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002da2318: mov    0x20(%rsp),%rbx
  0x0000000002da231d: jmpq   0x0000000002da208a
  0x0000000002da2322: mov    %r13,%rcx
  0x0000000002da2325: mov    %rdx,%rdi
  0x0000000002da2328: xor    %rax,%rax
  0x0000000002da232b: shl    $0x3,%rcx
  0x0000000002da232f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da2332: jmpq   0x0000000002da208a
  0x0000000002da2337: mov    $0xfffffff6,%edx
  0x0000000002da233c: data16 xchg %ax,%ax
  0x0000000002da233f: callq  0x0000000002cb57a0  ; OopMap{rbp=Oop off=1252}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002da2344: int3   
  0x0000000002da2345: jmp    0x0000000002da2347  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da2347: mov    %rax,%rbx
  0x0000000002da234a: jmp    0x0000000002da234f  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da234c: mov    %rax,%rbx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002da234f: mov    %rbp,%r11
  0x0000000002da2352: mov    $0x7,%r10d
  0x0000000002da2358: and    (%r11),%r10
  0x0000000002da235b: cmp    $0x5,%r10
  0x0000000002da235f: jne    0x0000000002da2371
  0x0000000002da2361: mov    %rbx,%rdx
  0x0000000002da2364: add    $0x90,%rsp
  0x0000000002da236b: pop    %rbp
  0x0000000002da236c: jmpq   0x0000000002d72f60  ;   {runtime_call}
  0x0000000002da2371: lea    0x80(%rsp),%rax
  0x0000000002da2379: cmpq   $0x0,(%rax)
  0x0000000002da2380: je     0x0000000002da23fa
  0x0000000002da2386: mov    (%r11),%r10
  0x0000000002da2389: test   $0x2,%r10
  0x0000000002da2390: je     0x0000000002da23f2
  0x0000000002da2392: mov    0x16(%r10),%rax
  0x0000000002da2396: xor    %r15,%rax
  0x0000000002da2399: or     0x26(%r10),%rax
  0x0000000002da239d: jne    0x0000000002da23fa
  0x0000000002da239f: mov    0x36(%r10),%rax
  0x0000000002da23a3: or     0x3e(%r10),%rax
  0x0000000002da23a7: jne    0x0000000002da23b3
  0x0000000002da23a9: movq   $0x0,0x16(%r10)
  0x0000000002da23b1: jmp    0x0000000002da23fa
  0x0000000002da23b3: cmpq   $0x0,0x46(%r10)
  0x0000000002da23bb: je     0x0000000002da23e6
  0x0000000002da23bd: movq   $0x0,0x16(%r10)
  0x0000000002da23c5: lock addl $0x0,(%rsp)
  0x0000000002da23ca: cmpq   $0x0,0x46(%r10)
  0x0000000002da23d2: jne    0x0000000002da23eb
  0x0000000002da23d4: movabs $0x0,%rax
  0x0000000002da23de: lock cmpxchg %r15,0x16(%r10)
  0x0000000002da23e4: jne    0x0000000002da23eb
  0x0000000002da23e6: or     $0x1,%eax
  0x0000000002da23e9: jmp    0x0000000002da23fa
  0x0000000002da23eb: test   $0x0,%eax
  0x0000000002da23f0: jmp    0x0000000002da23fa
  0x0000000002da23f2: mov    (%rax),%r10
  0x0000000002da23f5: lock cmpxchg %r10,(%r11)
  0x0000000002da23fa: je     0x0000000002da2361
  0x0000000002da2400: mov    %r11,%rcx
  0x0000000002da2403: lea    0x80(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x0000000002da240b: movabs $0x5e0cded0,%r10
  0x0000000002da2415: callq  *%r10
  0x0000000002da2418: jmpq   0x0000000002da2361
  0x0000000002da241d: hlt    
  0x0000000002da241e: hlt    
  0x0000000002da241f: hlt    
[Stub Code]
  0x0000000002da2420: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002da242a: jmpq   0x0000000002da242a  ;   {runtime_call}
[Exception Handler]
  0x0000000002da242f: jmpq   0x0000000002cdf4a0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002da2434: callq  0x0000000002da2439
  0x0000000002da2439: subq   $0x5,(%rsp)
  0x0000000002da243e: jmpq   0x0000000002cb7600  ;   {runtime_call}
  0x0000000002da2443: hlt    
  0x0000000002da2444: hlt    
  0x0000000002da2445: hlt    
  0x0000000002da2446: hlt    
  0x0000000002da2447: hlt    
<nmethod compile_id='71' compiler='C2' level='4' entry='0x0000000002da1e60' size='3200' address='0x0000000002da1d10' relocation_offset='288' insts_offset='336' stub_offset='1808' scopes_data_offset='1904' scopes_pcs_offset='2256' dependencies_offset='3104' handler_table_offset='3112' nul_chk_table_offset='3184' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='10029' iicount='10029' stamp='8.759'/>
<make_not_entrant thread='1944' compile_id='30' compiler='C1' level='3' stamp='8.759'/>
<writer thread='28568'/>
<destroy_vm stamp='8.759'/>
<tty_done stamp='9.098'/>
</tty>
<compilation_log thread='28032'>
<start_compile_thread name='C1 CompilerThread2' thread='28032' process='9412' stamp='4.845'/>
<task compile_id='2' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='914' iicount='914' level='3' stamp='4.847'>
<phase name='buildIR' stamp='4.847'>
<type id='733' name='int'/>
<type id='728' name='char'/>
<klass id='844' name='sun/nio/cs/ext/DoubleByte$Encoder' flags='9'/>
<method id='845' holder='844' name='encodeChar' return='733' arguments='728' flags='1' bytes='21' iicount='914'/>
<parse method='845'  stamp='4.847'>
<parse_done stamp='4.848'/>
</parse>
<phase name='optimize_blocks' stamp='4.848'>
<phase_done name='optimize_blocks' stamp='4.848'/>
</phase>
<phase name='rangeCheckElimination' stamp='4.848'>
<phase_done name='rangeCheckElimination' stamp='4.848'/>
</phase>
<phase name='optimize_null_checks' stamp='4.848'>
<phase_done name='optimize_null_checks' stamp='4.848'/>
</phase>
<phase_done name='buildIR' stamp='4.848'/>
</phase>
<phase name='emit_lir' stamp='4.848'>
<phase name='lirGeneration' stamp='4.848'>
<phase_done name='lirGeneration' stamp='4.848'/>
</phase>
<phase name='linearScan' stamp='4.848'>
<phase_done name='linearScan' stamp='4.848'/>
</phase>
<phase_done name='emit_lir' stamp='4.848'/>
</phase>
<phase name='codeemit' stamp='4.848'>
<phase_done name='codeemit' stamp='4.848'/>
</phase>
<phase name='codeinstall' stamp='4.848'>
<phase_done name='codeinstall' stamp='4.875'/>
</phase>
<code_cache total_blobs='224' nmethods='2' adapters='145' free_code_cache='250589376'/>
<task_done success='1' nmsize='432' count='914' stamp='4.876'/>
</task>
<task compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='731' backedge_count='14336' iicount='731' level='3' stamp='4.877'>
<phase name='buildIR' stamp='4.877'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='hashCode' return='733' flags='1' bytes='55' iicount='731'/>
<parse method='844'  stamp='4.877'>
<parse_done stamp='4.877'/>
</parse>
<phase name='optimize_blocks' stamp='4.877'>
<phase_done name='optimize_blocks' stamp='4.877'/>
</phase>
<phase name='rangeCheckElimination' stamp='4.877'>
<phase_done name='rangeCheckElimination' stamp='4.877'/>
</phase>
<phase name='optimize_null_checks' stamp='4.877'>
<phase_done name='optimize_null_checks' stamp='4.877'/>
</phase>
<phase_done name='buildIR' stamp='4.877'/>
</phase>
<phase name='emit_lir' stamp='4.877'>
<phase name='lirGeneration' stamp='4.877'>
<phase_done name='lirGeneration' stamp='4.877'/>
</phase>
<phase name='linearScan' stamp='4.877'>
<phase_done name='linearScan' stamp='4.877'/>
</phase>
<phase_done name='emit_lir' stamp='4.877'/>
</phase>
<phase name='codeemit' stamp='4.877'>
<phase_done name='codeemit' stamp='4.877'/>
</phase>
<phase name='codeinstall' stamp='4.877'>
<phase_done name='codeinstall' stamp='4.893'/>
</phase>
<code_cache total_blobs='235' nmethods='3' adapters='151' free_code_cache='250583360'/>
<task_done success='1' nmsize='656' count='731' backedge_count='14374' stamp='4.893'/>
</task>
<task compile_id='5' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4361' iicount='4361' level='3' stamp='4.894'>
<phase name='buildIR' stamp='4.894'>
<type id='735' name='void'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='844' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' iicount='4361'/>
<parse method='844'  stamp='4.894'>
<parse_done stamp='4.894'/>
</parse>
<phase name='optimize_blocks' stamp='4.894'>
<phase_done name='optimize_blocks' stamp='4.894'/>
</phase>
<phase name='rangeCheckElimination' stamp='4.894'>
<phase_done name='rangeCheckElimination' stamp='4.894'/>
</phase>
<phase name='optimize_null_checks' stamp='4.894'>
<phase_done name='optimize_null_checks' stamp='4.894'/>
</phase>
<phase_done name='buildIR' stamp='4.894'/>
</phase>
<phase name='emit_lir' stamp='4.894'>
<phase name='lirGeneration' stamp='4.894'>
<phase_done name='lirGeneration' stamp='4.894'/>
</phase>
<phase name='linearScan' stamp='4.894'>
<phase_done name='linearScan' stamp='4.894'/>
</phase>
<phase_done name='emit_lir' stamp='4.894'/>
</phase>
<phase name='codeemit' stamp='4.894'>
<phase_done name='codeemit' stamp='4.894'/>
</phase>
<phase name='codeinstall' stamp='4.894'>
<phase_done name='codeinstall' stamp='4.897'/>
</phase>
<code_cache total_blobs='235' nmethods='4' adapters='151' free_code_cache='250593728'/>
<task_done success='1' nmsize='336' count='4361' stamp='4.897'/>
</task>
<task compile_id='6' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='2944' iicount='2944' level='3' stamp='4.897'>
<phase name='buildIR' stamp='4.897'>
<klass id='807' name='java/lang/StringBuilder' flags='17'/>
<type id='728' name='char'/>
<method id='844' holder='807' name='append' return='807' arguments='728' flags='1' bytes='8' iicount='2944'/>
<parse method='844'  stamp='4.897'>
<bc code='183' bci='2'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='805' name='append' return='805' arguments='728' flags='1' bytes='29' iicount='6479'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='7'/>
<type id='735' name='void'/>
<type id='733' name='int'/>
<method id='848' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' iicount='7180'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='17'/>
<method id='850' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='324'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='852' name='java/util/Arrays' flags='1'/>
<method id='853' holder='852' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='378'/>
<call method='853' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='184' bci='11'/>
<klass id='855' name='java/lang/Math' flags='17'/>
<method id='856' holder='855' name='min' return='733' arguments='733 733' flags='9' bytes='11' iicount='1715'/>
<call method='856' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='856'>
<parse_done stamp='4.898'/>
</parse>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='858' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='2560'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='4.898'/>
</parse>
<parse_done stamp='4.898'/>
</parse>
<parse_done stamp='4.898'/>
</parse>
<parse_done stamp='4.898'/>
</parse>
<phase name='optimize_blocks' stamp='4.898'>
<phase_done name='optimize_blocks' stamp='4.898'/>
</phase>
<phase name='rangeCheckElimination' stamp='4.898'>
<phase_done name='rangeCheckElimination' stamp='4.898'/>
</phase>
<phase name='optimize_null_checks' stamp='4.898'>
<phase_done name='optimize_null_checks' stamp='4.898'/>
</phase>
<phase_done name='buildIR' stamp='4.898'/>
</phase>
<phase name='emit_lir' stamp='4.898'>
<phase name='lirGeneration' stamp='4.898'>
<phase_done name='lirGeneration' stamp='4.898'/>
</phase>
<phase name='linearScan' stamp='4.898'>
<phase_done name='linearScan' stamp='4.899'/>
</phase>
<phase_done name='emit_lir' stamp='4.899'/>
</phase>
<phase name='codeemit' stamp='4.899'>
<phase_done name='codeemit' stamp='4.899'/>
</phase>
<phase name='codeinstall' stamp='4.899'>
<phase_done name='codeinstall' stamp='4.956'/>
</phase>
<code_cache total_blobs='238' nmethods='5' adapters='151' free_code_cache='250579520'/>
<task_done success='1' nmsize='1432' count='2944' inlined_bytes='86' stamp='4.956'/>
</task>
<task compile_id='8' method='java/lang/String getChars (II[CI)V' bytes='62' count='768' iicount='768' level='3' stamp='4.957'>
<phase name='buildIR' stamp='4.957'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='getChars' return='735' arguments='733 733 833 733' flags='1' bytes='62' iicount='768'/>
<parse method='844'  stamp='4.957'>
<bc code='183' bci='9'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='847' holder='846' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='848' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='2560'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='4.957'/>
</parse>
<phase name='optimize_blocks' stamp='4.957'>
<phase_done name='optimize_blocks' stamp='4.957'/>
</phase>
<phase name='rangeCheckElimination' stamp='4.957'>
<phase_done name='rangeCheckElimination' stamp='4.957'/>
</phase>
<phase name='optimize_null_checks' stamp='4.957'>
<phase_done name='optimize_null_checks' stamp='4.957'/>
</phase>
<phase_done name='buildIR' stamp='4.957'/>
</phase>
<phase name='emit_lir' stamp='4.957'>
<phase name='lirGeneration' stamp='4.957'>
<phase_done name='lirGeneration' stamp='4.957'/>
</phase>
<phase name='linearScan' stamp='4.957'>
<phase_done name='linearScan' stamp='4.957'/>
</phase>
<phase_done name='emit_lir' stamp='4.957'/>
</phase>
<phase name='codeemit' stamp='4.957'>
<phase_done name='codeemit' stamp='4.957'/>
</phase>
<phase name='codeinstall' stamp='4.957'>
<phase_done name='codeinstall' stamp='5.011'/>
</phase>
<code_cache total_blobs='246' nmethods='6' adapters='154' free_code_cache='250574848'/>
<task_done success='1' nmsize='1080' count='768' stamp='5.011'/>
</task>
<task compile_id='9' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='384' iicount='384' level='3' stamp='5.055'>
<phase name='buildIR' stamp='5.056'>
<klass id='752' name='java/lang/SecurityManager' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='844' holder='746' name='getSecurityManager' return='752' flags='9' bytes='4' iicount='386'/>
<parse method='844'  stamp='5.056'>
<parse_done stamp='5.056'/>
</parse>
<phase name='optimize_blocks' stamp='5.056'>
<phase_done name='optimize_blocks' stamp='5.056'/>
</phase>
<phase name='rangeCheckElimination' stamp='5.056'>
<phase_done name='rangeCheckElimination' stamp='5.056'/>
</phase>
<phase name='optimize_null_checks' stamp='5.056'>
<phase_done name='optimize_null_checks' stamp='5.056'/>
</phase>
<phase_done name='buildIR' stamp='5.056'/>
</phase>
<phase name='emit_lir' stamp='5.056'>
<phase name='lirGeneration' stamp='5.056'>
<phase_done name='lirGeneration' stamp='5.056'/>
</phase>
<phase name='linearScan' stamp='5.056'>
<phase_done name='linearScan' stamp='5.056'/>
</phase>
<phase_done name='emit_lir' stamp='5.056'/>
</phase>
<phase name='codeemit' stamp='5.056'>
<phase_done name='codeemit' stamp='5.056'/>
</phase>
<phase name='codeinstall' stamp='5.056'>
<phase_done name='codeinstall' stamp='5.061'/>
</phase>
<code_cache total_blobs='252' nmethods='9' adapters='158' free_code_cache='250580160'/>
<task_done success='1' nmsize='336' count='388' stamp='5.061'/>
</task>
<task compile_id='10' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='649' backedge_count='3104' iicount='649' level='3' stamp='5.062'>
<phase name='buildIR' stamp='5.062'>
<type id='727' name='boolean'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='equals' return='727' arguments='740' flags='1' bytes='81' iicount='655'/>
<parse method='844'  stamp='5.062'>
<parse_done stamp='5.062'/>
</parse>
<phase name='optimize_blocks' stamp='5.062'>
<phase_done name='optimize_blocks' stamp='5.062'/>
</phase>
<phase name='rangeCheckElimination' stamp='5.062'>
<phase_done name='rangeCheckElimination' stamp='5.062'/>
</phase>
<phase name='optimize_null_checks' stamp='5.062'>
<phase_done name='optimize_null_checks' stamp='5.062'/>
</phase>
<phase_done name='buildIR' stamp='5.062'/>
</phase>
<phase name='emit_lir' stamp='5.062'>
<phase name='lirGeneration' stamp='5.062'>
<phase_done name='lirGeneration' stamp='5.062'/>
</phase>
<phase name='linearScan' stamp='5.062'>
<phase_done name='linearScan' stamp='5.062'/>
</phase>
<phase_done name='emit_lir' stamp='5.062'/>
</phase>
<phase name='codeemit' stamp='5.062'>
<phase_done name='codeemit' stamp='5.062'/>
</phase>
<phase name='codeinstall' stamp='5.062'>
<phase_done name='codeinstall' stamp='5.095'/>
</phase>
<code_cache total_blobs='257' nmethods='10' adapters='161' free_code_cache='250543936'/>
<task_done success='1' nmsize='1360' count='673' backedge_count='3254' stamp='5.095'/>
</task>
<task compile_id='11' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='5.095'>
<phase name='buildIR' stamp='5.095'>
<klass id='846' name='[Lsun/instrument/TransformerManager$TransformerInfo;' flags='1042'/>
<klass id='844' name='sun/instrument/TransformerManager' flags='1'/>
<method id='847' holder='844' name='getSnapshotTransformerList' return='846' flags='2' bytes='5' iicount='128'/>
<parse method='847'  stamp='5.095'>
<parse_done stamp='5.095'/>
</parse>
<phase name='optimize_blocks' stamp='5.095'>
<phase_done name='optimize_blocks' stamp='5.095'/>
</phase>
<phase name='rangeCheckElimination' stamp='5.095'>
<phase_done name='rangeCheckElimination' stamp='5.095'/>
</phase>
<phase name='optimize_null_checks' stamp='5.095'>
<phase_done name='optimize_null_checks' stamp='5.095'/>
</phase>
<phase_done name='buildIR' stamp='5.095'/>
</phase>
<phase name='emit_lir' stamp='5.095'>
<phase name='lirGeneration' stamp='5.095'>
<phase_done name='lirGeneration' stamp='5.095'/>
</phase>
<phase name='linearScan' stamp='5.095'>
<phase_done name='linearScan' stamp='5.095'/>
</phase>
<phase_done name='emit_lir' stamp='5.095'/>
</phase>
<phase name='codeemit' stamp='5.095'>
<phase_done name='codeemit' stamp='5.095'/>
</phase>
<phase name='codeinstall' stamp='5.095'>
<phase_done name='codeinstall' stamp='5.108'/>
</phase>
<code_cache total_blobs='258' nmethods='11' adapters='161' free_code_cache='250543168'/>
<task_done success='1' nmsize='272' count='129' stamp='5.109'/>
</task>
<task compile_id='12' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='769' iicount='769' level='3' stamp='5.109'>
<phase name='buildIR' stamp='5.111'>
<type id='735' name='void'/>
<klass id='833' name='[C' flags='1041'/>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='&lt;init&gt;' return='735' arguments='833 733 733' flags='1' bytes='82' iicount='771'/>
<parse method='844'  stamp='5.111'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='846' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='5' compiler='C1' level='3' iicount='4438'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='5.111'/>
</parse>
<bc code='183' bci='13'/>
<klass id='848' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='849' holder='848' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='851' name='java/util/Arrays' flags='1'/>
<method id='852' holder='851' name='copyOfRange' return='833' arguments='833 733 733' flags='9' bytes='63' iicount='872'/>
<call method='852' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='5.111'/>
</parse>
<phase name='optimize_blocks' stamp='5.111'>
<phase_done name='optimize_blocks' stamp='5.111'/>
</phase>
<phase name='rangeCheckElimination' stamp='5.111'>
<phase_done name='rangeCheckElimination' stamp='5.111'/>
</phase>
<phase name='optimize_null_checks' stamp='5.111'>
<phase_done name='optimize_null_checks' stamp='5.111'/>
</phase>
<phase_done name='buildIR' stamp='5.111'/>
</phase>
<phase name='emit_lir' stamp='5.111'>
<phase name='lirGeneration' stamp='5.111'>
<phase_done name='lirGeneration' stamp='5.111'/>
</phase>
<phase name='linearScan' stamp='5.111'>
<phase_done name='linearScan' stamp='5.111'/>
</phase>
<phase_done name='emit_lir' stamp='5.111'/>
</phase>
<phase name='codeemit' stamp='5.111'>
<phase_done name='codeemit' stamp='5.111'/>
</phase>
<phase name='codeinstall' stamp='5.111'>
<phase_done name='codeinstall' stamp='5.241'/>
</phase>
<code_cache total_blobs='263' nmethods='12' adapters='163' free_code_cache='250527936'/>
<task_done success='1' nmsize='1272' count='772' inlined_bytes='1' stamp='5.241'/>
</task>
<task compile_id='14' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='256' iicount='256' level='3' stamp='5.245'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='256' stamp='5.245'/>
</task>
<task compile_id='13' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='256' iicount='256' level='1' stamp='5.245'>
<phase name='buildIR' stamp='5.245'>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='766' name='java/lang/ref/Reference' flags='1025'/>
<method id='844' holder='766' name='get' return='740' flags='1' bytes='5' iicount='256'/>
<parse method='844'  stamp='5.245'>
<parse_done stamp='5.245'/>
</parse>
<phase name='optimize_blocks' stamp='5.245'>
<phase_done name='optimize_blocks' stamp='5.245'/>
</phase>
<phase name='rangeCheckElimination' stamp='5.245'>
<phase_done name='rangeCheckElimination' stamp='5.245'/>
</phase>
<phase name='optimize_null_checks' stamp='5.245'>
<phase_done name='optimize_null_checks' stamp='5.245'/>
</phase>
<phase_done name='buildIR' stamp='5.245'/>
</phase>
<phase name='emit_lir' stamp='5.245'>
<phase name='lirGeneration' stamp='5.245'>
<phase_done name='lirGeneration' stamp='5.245'/>
</phase>
<phase name='linearScan' stamp='5.245'>
<phase_done name='linearScan' stamp='5.245'/>
</phase>
<phase_done name='emit_lir' stamp='5.245'/>
</phase>
<phase name='codeemit' stamp='5.245'>
<phase_done name='codeemit' stamp='5.245'/>
</phase>
<phase name='codeinstall' stamp='5.245'>
<phase_done name='codeinstall' stamp='5.255'/>
</phase>
<code_cache total_blobs='263' nmethods='14' adapters='163' free_code_cache='250537984'/>
<task_done success='1' nmsize='272' count='256' stamp='5.255'/>
</task>
<task compile_id='16' method='java/lang/Character toLowerCase (I)I' bytes='9' count='3328' iicount='3328' level='3' stamp='5.256'>
<phase name='buildIR' stamp='5.256'>
<type id='733' name='int'/>
<klass id='822' name='java/lang/Character' flags='17'/>
<method id='844' holder='822' name='toLowerCase' return='733' arguments='733' flags='9' bytes='9' iicount='3328'/>
<parse method='844'  stamp='5.256'>
<bc code='184' bci='1'/>
<klass id='847' name='java/lang/CharacterData' flags='1024'/>
<method id='848' holder='847' name='of' return='847' arguments='733' flags='24' bytes='120' iicount='3552'/>
<call method='848' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='850' holder='847' name='toLowerCase' return='733' arguments='733' flags='1024' bytes='0' iicount='1'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='5.256'/>
</parse>
<phase name='optimize_blocks' stamp='5.256'>
<phase_done name='optimize_blocks' stamp='5.256'/>
</phase>
<phase name='rangeCheckElimination' stamp='5.256'>
<phase_done name='rangeCheckElimination' stamp='5.256'/>
</phase>
<phase name='optimize_null_checks' stamp='5.256'>
<phase_done name='optimize_null_checks' stamp='5.256'/>
</phase>
<phase_done name='buildIR' stamp='5.256'/>
</phase>
<phase name='emit_lir' stamp='5.256'>
<phase name='lirGeneration' stamp='5.256'>
<phase_done name='lirGeneration' stamp='5.256'/>
</phase>
<phase name='linearScan' stamp='5.256'>
<phase_done name='linearScan' stamp='5.256'/>
</phase>
<phase_done name='emit_lir' stamp='5.256'/>
</phase>
<phase name='codeemit' stamp='5.256'>
<phase_done name='codeemit' stamp='5.256'/>
</phase>
<phase name='codeinstall' stamp='5.256'>
<phase_done name='codeinstall' stamp='5.525'/>
</phase>
<code_cache total_blobs='264' nmethods='15' adapters='163' free_code_cache='250536768'/>
<task_done success='1' nmsize='568' count='3346' stamp='5.525'/>
</task>
<task compile_id='17' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='3346' iicount='3346' level='3' stamp='5.525'>
<phase name='buildIR' stamp='5.525'>
<type id='733' name='int'/>
<klass id='844' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='845' holder='844' name='toLowerCase' return='733' arguments='733' flags='0' bytes='39' iicount='3346'/>
<parse method='845'  stamp='5.525'>
<bc code='182' bci='4'/>
<method id='847' holder='844' name='getProperties' return='733' arguments='733' flags='0' bytes='11' iicount='3570'/>
<call method='847' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='844'/>
<parse method='847'>
<parse_done stamp='5.525'/>
</parse>
<parse_done stamp='5.525'/>
</parse>
<phase name='optimize_blocks' stamp='5.525'>
<phase_done name='optimize_blocks' stamp='5.525'/>
</phase>
<phase name='rangeCheckElimination' stamp='5.525'>
<phase_done name='rangeCheckElimination' stamp='5.525'/>
</phase>
<phase name='optimize_null_checks' stamp='5.525'>
<phase_done name='optimize_null_checks' stamp='5.525'/>
</phase>
<phase_done name='buildIR' stamp='5.525'/>
</phase>
<phase name='emit_lir' stamp='5.525'>
<phase name='lirGeneration' stamp='5.525'>
<phase_done name='lirGeneration' stamp='5.525'/>
</phase>
<phase name='linearScan' stamp='5.525'>
<phase_done name='linearScan' stamp='5.525'/>
</phase>
<phase_done name='emit_lir' stamp='5.525'/>
</phase>
<phase name='codeemit' stamp='5.525'>
<phase_done name='codeemit' stamp='5.525'/>
</phase>
<phase name='codeinstall' stamp='5.525'>
<dependency type='leaf_type' ctxk='844'/>
<phase_done name='codeinstall' stamp='5.556'/>
</phase>
<code_cache total_blobs='265' nmethods='16' adapters='163' free_code_cache='250535360'/>
<task_done success='1' nmsize='624' count='3357' inlined_bytes='11' stamp='5.556'/>
</task>
<task compile_id='18' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='150' backedge_count='3306' iicount='150' level='3' stamp='5.556'>
<phase name='buildIR' stamp='5.556'>
<klass id='741' name='java/lang/String' flags='17'/>
<klass id='844' name='java/io/WinNTFileSystem' flags='0'/>
<method id='845' holder='844' name='normalize' return='741' arguments='741' flags='1' bytes='143' iicount='150'/>
<parse method='845'  stamp='5.557'>
<bc code='182' bci='1'/>
<type id='733' name='int'/>
<method id='847' holder='741' name='length' return='733' flags='1' bytes='6' compile_id='15' compiler='C2' level='4' iicount='27777'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<parse_done stamp='5.557'/>
</parse>
<bc code='182' bci='31'/>
<type id='728' name='char'/>
<method id='849' holder='741' name='charAt' return='728' arguments='733' flags='1' bytes='29' compile_id='7' compiler='C2' level='4' iicount='102427'/>
<call method='849' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='18'/>
<type id='735' name='void'/>
<klass id='851' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='852' holder='851' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='5.557'/>
</parse>
<bc code='183' bci='61'/>
<method id='853' holder='844' name='normalize' return='741' arguments='741 733 733' flags='2' bytes='231' iicount='63'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='90'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='111'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='137'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='5.557'/>
</parse>
<phase name='optimize_blocks' stamp='5.557'>
<phase_done name='optimize_blocks' stamp='5.557'/>
</phase>
<phase name='rangeCheckElimination' stamp='5.557'>
<phase_done name='rangeCheckElimination' stamp='5.557'/>
</phase>
<phase name='optimize_null_checks' stamp='5.557'>
<phase_done name='optimize_null_checks' stamp='5.557'/>
</phase>
<phase_done name='buildIR' stamp='5.557'/>
</phase>
<phase name='emit_lir' stamp='5.557'>
<phase name='lirGeneration' stamp='5.557'>
<phase_done name='lirGeneration' stamp='5.557'/>
</phase>
<phase name='linearScan' stamp='5.557'>
<phase_done name='linearScan' stamp='5.557'/>
</phase>
<phase_done name='emit_lir' stamp='5.557'/>
</phase>
<phase name='codeemit' stamp='5.558'>
<phase_done name='codeemit' stamp='5.558'/>
</phase>
<phase name='codeinstall' stamp='5.558'>
<dependency type='leaf_type' ctxk='844'/>
<phase_done name='codeinstall' stamp='5.956'/>
</phase>
<code_cache total_blobs='268' nmethods='17' adapters='165' free_code_cache='250530304'/>
<task_done success='1' nmsize='2088' count='150' backedge_count='3306' inlined_bytes='35' stamp='5.956'/>
</task>
<task compile_id='20' method='java/lang/String indexOf (II)I' bytes='70' count='491' backedge_count='16493' iicount='491' level='3' stamp='5.956'>
<phase name='buildIR' stamp='5.956'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='indexOf' return='733' arguments='733 733' flags='1' bytes='70' iicount='491'/>
<parse method='844'  stamp='5.956'>
<bc code='183' bci='66'/>
<method id='846' holder='741' name='indexOfSupplementary' return='733' arguments='733 733' flags='2' bytes='71' iicount='1'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='5.957'/>
</parse>
<phase name='optimize_blocks' stamp='5.957'>
<phase_done name='optimize_blocks' stamp='5.957'/>
</phase>
<phase name='rangeCheckElimination' stamp='5.957'>
<phase_done name='rangeCheckElimination' stamp='5.957'/>
</phase>
<phase name='optimize_null_checks' stamp='5.957'>
<phase_done name='optimize_null_checks' stamp='5.957'/>
</phase>
<phase_done name='buildIR' stamp='5.957'/>
</phase>
<phase name='emit_lir' stamp='5.957'>
<phase name='lirGeneration' stamp='5.957'>
<phase_done name='lirGeneration' stamp='5.957'/>
</phase>
<phase name='linearScan' stamp='5.957'>
<phase_done name='linearScan' stamp='5.957'/>
</phase>
<phase_done name='emit_lir' stamp='5.957'/>
</phase>
<phase name='codeemit' stamp='5.957'>
<phase_done name='codeemit' stamp='5.957'/>
</phase>
<phase name='codeinstall' stamp='5.957'>
<phase_done name='codeinstall' stamp='5.973'/>
</phase>
<code_cache total_blobs='272' nmethods='18' adapters='168' free_code_cache='250526656'/>
<task_done success='1' nmsize='936' count='496' backedge_count='16667' stamp='5.973'/>
</task>
<task compile_id='22' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='829' backedge_count='3003' iicount='829' level='3' stamp='5.973'>
<phase name='buildIR' stamp='5.973'>
<type id='727' name='boolean'/>
<klass id='741' name='java/lang/String' flags='17'/>
<type id='733' name='int'/>
<method id='844' holder='741' name='startsWith' return='727' arguments='741 733' flags='1' bytes='72' iicount='829'/>
<parse method='844'  stamp='5.973'>
<parse_done stamp='5.973'/>
</parse>
<phase name='optimize_blocks' stamp='5.973'>
<phase_done name='optimize_blocks' stamp='5.973'/>
</phase>
<phase name='rangeCheckElimination' stamp='5.973'>
<phase_done name='rangeCheckElimination' stamp='5.973'/>
</phase>
<phase name='optimize_null_checks' stamp='5.973'>
<phase_done name='optimize_null_checks' stamp='5.973'/>
</phase>
<phase_done name='buildIR' stamp='5.973'/>
</phase>
<phase name='emit_lir' stamp='5.973'>
<phase name='lirGeneration' stamp='5.973'>
<phase_done name='lirGeneration' stamp='5.973'/>
</phase>
<phase name='linearScan' stamp='5.973'>
<phase_done name='linearScan' stamp='5.973'/>
</phase>
<phase_done name='emit_lir' stamp='5.973'/>
</phase>
<phase name='codeemit' stamp='5.973'>
<phase_done name='codeemit' stamp='5.973'/>
</phase>
<phase name='codeinstall' stamp='5.973'>
<phase_done name='codeinstall' stamp='6.009'/>
</phase>
<code_cache total_blobs='276' nmethods='19' adapters='171' free_code_cache='250523264'/>
<task_done success='1' nmsize='816' count='829' backedge_count='3003' stamp='6.009'/>
</task>
<task compile_id='26' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4637' iicount='4637' level='1' stamp='6.009'>
<phase name='buildIR' stamp='6.009'>
<type id='735' name='void'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='844' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='5' compiler='C1' level='3' iicount='4637'/>
<parse method='844'  stamp='6.009'>
<parse_done stamp='6.009'/>
</parse>
<phase name='optimize_blocks' stamp='6.009'>
<phase_done name='optimize_blocks' stamp='6.009'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.009'>
<phase_done name='rangeCheckElimination' stamp='6.009'/>
</phase>
<phase name='optimize_null_checks' stamp='6.009'>
<phase_done name='optimize_null_checks' stamp='6.009'/>
</phase>
<phase_done name='buildIR' stamp='6.009'/>
</phase>
<phase name='emit_lir' stamp='6.009'>
<phase name='lirGeneration' stamp='6.009'>
<phase_done name='lirGeneration' stamp='6.009'/>
</phase>
<phase name='linearScan' stamp='6.009'>
<phase_done name='linearScan' stamp='6.009'/>
</phase>
<phase_done name='emit_lir' stamp='6.009'/>
</phase>
<phase name='codeemit' stamp='6.009'>
<phase_done name='codeemit' stamp='6.009'/>
</phase>
<phase name='codeinstall' stamp='6.009'>
<phase_done name='codeinstall' stamp='6.012'/>
</phase>
<code_cache total_blobs='277' nmethods='20' adapters='171' free_code_cache='250522496'/>
<task_done success='1' nmsize='272' count='4646' stamp='6.012'/>
</task>
<task compile_id='24' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='3604' iicount='3604' level='3' stamp='6.012'>
<phase name='buildIR' stamp='6.012'>
<klass id='844' name='java/lang/CharacterData' flags='1024'/>
<type id='733' name='int'/>
<method id='845' holder='844' name='of' return='844' arguments='733' flags='24' bytes='120' iicount='3604'/>
<parse method='845'  stamp='6.012'>
<parse_done stamp='6.012'/>
</parse>
<phase name='optimize_blocks' stamp='6.012'>
<phase_done name='optimize_blocks' stamp='6.012'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.012'>
<phase_done name='rangeCheckElimination' stamp='6.012'/>
</phase>
<phase name='optimize_null_checks' stamp='6.012'>
<phase_done name='optimize_null_checks' stamp='6.012'/>
</phase>
<phase_done name='buildIR' stamp='6.012'/>
</phase>
<phase name='emit_lir' stamp='6.012'>
<phase name='lirGeneration' stamp='6.012'>
<phase_done name='lirGeneration' stamp='6.012'/>
</phase>
<phase name='linearScan' stamp='6.012'>
<phase_done name='linearScan' stamp='6.012'/>
</phase>
<phase_done name='emit_lir' stamp='6.012'/>
</phase>
<phase name='codeemit' stamp='6.012'>
<phase_done name='codeemit' stamp='6.012'/>
</phase>
<phase name='codeinstall' stamp='6.012'>
<phase_done name='codeinstall' stamp='6.058'/>
</phase>
<code_cache total_blobs='281' nmethods='21' adapters='174' free_code_cache='250518208'/>
<task_done success='1' nmsize='1456' count='3604' stamp='6.058'/>
</task>
<task compile_id='21' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='599' iicount='599' level='3' stamp='6.059'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='599' stamp='6.059'/>
</task>
<task compile_id='23' method='java/lang/Math min (II)I' bytes='11' count='1833' iicount='1833' level='3' stamp='6.059'>
<phase name='buildIR' stamp='6.059'>
<type id='733' name='int'/>
<klass id='844' name='java/lang/Math' flags='17'/>
<method id='845' holder='844' name='min' return='733' arguments='733 733' flags='9' bytes='11' iicount='1833'/>
<parse method='845'  stamp='6.059'>
<parse_done stamp='6.059'/>
</parse>
<phase name='optimize_blocks' stamp='6.059'>
<phase_done name='optimize_blocks' stamp='6.059'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.059'>
<phase_done name='rangeCheckElimination' stamp='6.059'/>
</phase>
<phase name='optimize_null_checks' stamp='6.059'>
<phase_done name='optimize_null_checks' stamp='6.059'/>
</phase>
<phase_done name='buildIR' stamp='6.059'/>
</phase>
<phase name='emit_lir' stamp='6.059'>
<phase name='lirGeneration' stamp='6.059'>
<phase_done name='lirGeneration' stamp='6.059'/>
</phase>
<phase name='linearScan' stamp='6.059'>
<phase_done name='linearScan' stamp='6.059'/>
</phase>
<phase_done name='emit_lir' stamp='6.059'/>
</phase>
<phase name='codeemit' stamp='6.059'>
<phase_done name='codeemit' stamp='6.059'/>
</phase>
<phase name='codeinstall' stamp='6.059'>
<phase_done name='codeinstall' stamp='6.063'/>
</phase>
<code_cache total_blobs='283' nmethods='22' adapters='175' free_code_cache='250516736'/>
<task_done success='1' nmsize='400' count='1833' stamp='6.063'/>
</task>
<task compile_id='25' method='java/lang/String indexOf (I)I' bytes='7' count='588' iicount='588' level='3' stamp='6.063'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='588' stamp='6.063'/>
</task>
<task compile_id='19' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='917' iicount='917' level='3' stamp='6.063'>
<phase name='buildIR' stamp='6.063'>
<klass id='833' name='[C' flags='1041'/>
<type id='733' name='int'/>
<klass id='844' name='java/util/Arrays' flags='1'/>
<method id='845' holder='844' name='copyOfRange' return='833' arguments='833 733 733' flags='9' bytes='63' iicount='917'/>
<parse method='845'  stamp='6.063'>
<bc code='183' bci='16'/>
<type id='735' name='void'/>
<klass id='807' name='java/lang/StringBuilder' flags='17'/>
<method id='848' holder='807' name='&lt;init&gt;' return='735' flags='1' bytes='7' iicount='271'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='3'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='850' holder='805' name='&lt;init&gt;' return='735' arguments='733' flags='0' bytes='12' iicount='426'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='852' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='26' compiler='C1' level='1' iicount='4646'/>
<call method='852' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<parse_done stamp='6.064'/>
</parse>
<parse_done stamp='6.064'/>
</parse>
<parse_done stamp='6.064'/>
</parse>
<bc code='182' bci='20'/>
<method id='854' holder='807' name='append' return='807' arguments='733' flags='1' bytes='8' iicount='6'/>
<call method='854' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<bc code='183' bci='2'/>
<method id='856' holder='805' name='append' return='805' arguments='733' flags='1' bytes='62' iicount='6'/>
<call method='856' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.064'/>
</parse>
<bc code='182' bci='25'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='859' holder='807' name='append' return='807' arguments='741' flags='1' bytes='8' iicount='640'/>
<call method='859' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='859'>
<bc code='183' bci='2'/>
<method id='861' holder='805' name='append' return='805' arguments='741' flags='1' bytes='50' iicount='756'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.064'/>
</parse>
<bc code='182' bci='29'/>
<call method='854' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<bc code='183' bci='2'/>
<call method='856' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.064'/>
</parse>
<bc code='182' bci='32'/>
<method id='863' holder='807' name='toString' return='741' flags='1' bytes='17' iicount='318'/>
<call method='863' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='863'>
<bc code='183' bci='13'/>
<method id='865' holder='741' name='&lt;init&gt;' return='735' arguments='833 733 733' flags='1' bytes='82' compile_id='12' compiler='C1' level='3' iicount='818'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.064'/>
</parse>
<bc code='183' bci='35'/>
<klass id='847' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='867' holder='847' name='&lt;init&gt;' return='735' arguments='741' flags='1' bytes='6' iicount='1'/>
<call method='867' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='869' name='java/lang/Math' flags='17'/>
<method id='870' holder='869' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='23' compiler='C1' level='3' iicount='1836'/>
<call method='870' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='870'>
<parse_done stamp='6.064'/>
</parse>
<bc code='184' bci='57'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='872' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='2560'/>
<call method='872' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='6.064'/>
</parse>
<phase name='optimize_blocks' stamp='6.064'>
<phase_done name='optimize_blocks' stamp='6.064'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.064'>
<phase_done name='rangeCheckElimination' stamp='6.064'/>
</phase>
<phase name='optimize_null_checks' stamp='6.064'>
<phase_done name='optimize_null_checks' stamp='6.064'/>
</phase>
<phase_done name='buildIR' stamp='6.064'/>
</phase>
<phase name='emit_lir' stamp='6.065'>
<phase name='lirGeneration' stamp='6.065'>
<phase_done name='lirGeneration' stamp='6.065'/>
</phase>
<phase name='linearScan' stamp='6.065'>
<phase_done name='linearScan' stamp='6.065'/>
</phase>
<phase_done name='emit_lir' stamp='6.065'/>
</phase>
<phase name='codeemit' stamp='6.065'>
<phase_done name='codeemit' stamp='6.065'/>
</phase>
<phase name='codeinstall' stamp='6.065'>
<phase_done name='codeinstall' stamp='6.175'/>
</phase>
<code_cache total_blobs='285' nmethods='23' adapters='176' free_code_cache='250511232'/>
<task_done success='1' nmsize='2872' count='917' inlined_bytes='72' stamp='6.175'/>
</task>
<task compile_id='27' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='3974' iicount='3974' level='3' stamp='6.175'>
<phase name='buildIR' stamp='6.175'>
<type id='727' name='boolean'/>
<type id='728' name='char'/>
<klass id='844' name='java/io/WinNTFileSystem' flags='0'/>
<method id='845' holder='844' name='isSlash' return='727' arguments='728' flags='2' bytes='18' iicount='3974'/>
<parse method='845'  stamp='6.175'>
<parse_done stamp='6.175'/>
</parse>
<phase name='optimize_blocks' stamp='6.175'>
<phase_done name='optimize_blocks' stamp='6.175'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.175'>
<phase_done name='rangeCheckElimination' stamp='6.175'/>
</phase>
<phase name='optimize_null_checks' stamp='6.175'>
<phase_done name='optimize_null_checks' stamp='6.175'/>
</phase>
<phase_done name='buildIR' stamp='6.175'/>
</phase>
<phase name='emit_lir' stamp='6.175'>
<phase name='lirGeneration' stamp='6.175'>
<phase_done name='lirGeneration' stamp='6.175'/>
</phase>
<phase name='linearScan' stamp='6.175'>
<phase_done name='linearScan' stamp='6.175'/>
</phase>
<phase_done name='emit_lir' stamp='6.175'/>
</phase>
<phase name='codeemit' stamp='6.175'>
<phase_done name='codeemit' stamp='6.175'/>
</phase>
<phase name='codeinstall' stamp='6.175'>
<phase_done name='codeinstall' stamp='6.181'/>
</phase>
<code_cache total_blobs='287' nmethods='24' adapters='177' free_code_cache='250509632'/>
<task_done success='1' nmsize='496' count='4060' stamp='6.181'/>
</task>
<task compile_id='30' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='3645' iicount='3645' level='3' stamp='6.181'>
<phase name='buildIR' stamp='6.181'>
<klass id='806' name='java/lang/StringBuffer' flags='17'/>
<type id='728' name='char'/>
<method id='844' holder='806' name='append' return='806' arguments='728' flags='33' bytes='13' iicount='3645'/>
<parse method='844'  stamp='6.181'>
<bc code='183' bci='7'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='805' name='append' return='805' arguments='728' flags='1' bytes='29' iicount='6598'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='7'/>
<type id='735' name='void'/>
<type id='733' name='int'/>
<method id='848' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' compile_id='3' compiler='C2' level='4' iicount='7189'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='17'/>
<method id='850' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='326'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='852' name='java/util/Arrays' flags='1'/>
<method id='853' holder='852' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='390'/>
<call method='853' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='184' bci='11'/>
<klass id='855' name='java/lang/Math' flags='17'/>
<method id='856' holder='855' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='23' compiler='C1' level='3' iicount='1847'/>
<call method='856' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='856'>
<parse_done stamp='6.182'/>
</parse>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='858' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='2560'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='6.182'/>
</parse>
<parse_done stamp='6.182'/>
</parse>
<parse_done stamp='6.182'/>
</parse>
<parse_done stamp='6.182'/>
</parse>
<phase name='optimize_blocks' stamp='6.182'>
<phase_done name='optimize_blocks' stamp='6.182'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.182'>
<phase_done name='rangeCheckElimination' stamp='6.182'/>
</phase>
<phase name='optimize_null_checks' stamp='6.182'>
<phase_done name='optimize_null_checks' stamp='6.182'/>
</phase>
<phase_done name='buildIR' stamp='6.182'/>
</phase>
<phase name='emit_lir' stamp='6.182'>
<phase name='lirGeneration' stamp='6.182'>
<phase_done name='lirGeneration' stamp='6.182'/>
</phase>
<phase name='linearScan' stamp='6.182'>
<phase_done name='linearScan' stamp='6.182'/>
</phase>
<phase_done name='emit_lir' stamp='6.182'/>
</phase>
<phase name='codeemit' stamp='6.182'>
<phase_done name='codeemit' stamp='6.182'/>
</phase>
<phase name='codeinstall' stamp='6.182'>
<phase_done name='codeinstall' stamp='6.247'/>
</phase>
<code_cache total_blobs='288' nmethods='25' adapters='177' free_code_cache='250506304'/>
<task_done success='1' nmsize='1848' count='3645' inlined_bytes='86' stamp='6.247'/>
</task>
<task compile_id='29' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='645' iicount='645' level='3' stamp='6.247'>
<phase name='buildIR' stamp='6.247'>
<klass id='807' name='java/lang/StringBuilder' flags='17'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='807' name='append' return='807' arguments='741' flags='1' bytes='8' iicount='645'/>
<parse method='844'  stamp='6.247'>
<bc code='183' bci='2'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='805' name='append' return='805' arguments='741' flags='1' bytes='50' iicount='765'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.247'/>
</parse>
<phase name='optimize_blocks' stamp='6.247'>
<phase_done name='optimize_blocks' stamp='6.247'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.247'>
<phase_done name='rangeCheckElimination' stamp='6.247'/>
</phase>
<phase name='optimize_null_checks' stamp='6.247'>
<phase_done name='optimize_null_checks' stamp='6.247'/>
</phase>
<phase_done name='buildIR' stamp='6.247'/>
</phase>
<phase name='emit_lir' stamp='6.247'>
<phase name='lirGeneration' stamp='6.247'>
<phase_done name='lirGeneration' stamp='6.247'/>
</phase>
<phase name='linearScan' stamp='6.247'>
<phase_done name='linearScan' stamp='6.247'/>
</phase>
<phase_done name='emit_lir' stamp='6.247'/>
</phase>
<phase name='codeemit' stamp='6.247'>
<phase_done name='codeemit' stamp='6.247'/>
</phase>
<phase name='codeinstall' stamp='6.247'>
<phase_done name='codeinstall' stamp='6.253'/>
</phase>
<code_cache total_blobs='289' nmethods='26' adapters='177' free_code_cache='250505344'/>
<task_done success='1' nmsize='392' count='645' stamp='6.253'/>
</task>
<task compile_id='31' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='258' iicount='258' level='3' stamp='6.253'>
<phase name='buildIR' stamp='6.253'>
<klass id='836' name='[B' flags='1041'/>
<klass id='844' name='java/io/BufferedInputStream' flags='1'/>
<method id='845' holder='844' name='getBufIfOpen' return='836' flags='2' bytes='21' iicount='280'/>
<parse method='845'  stamp='6.253'>
<bc code='183' bci='15'/>
<type id='735' name='void'/>
<klass id='741' name='java/lang/String' flags='17'/>
<klass id='847' name='java/io/IOException' unloaded='1'/>
<method id='849' holder='847' name='&lt;init&gt;' return='735' arguments='741' unloaded='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='6.253'/>
</parse>
<phase name='optimize_blocks' stamp='6.253'>
<phase_done name='optimize_blocks' stamp='6.253'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.253'>
<phase_done name='rangeCheckElimination' stamp='6.253'/>
</phase>
<phase name='optimize_null_checks' stamp='6.253'>
<phase_done name='optimize_null_checks' stamp='6.253'/>
</phase>
<phase_done name='buildIR' stamp='6.253'/>
</phase>
<phase name='emit_lir' stamp='6.253'>
<phase name='lirGeneration' stamp='6.253'>
<phase_done name='lirGeneration' stamp='6.253'/>
</phase>
<phase name='linearScan' stamp='6.253'>
<phase_done name='linearScan' stamp='6.253'/>
</phase>
<phase_done name='emit_lir' stamp='6.253'/>
</phase>
<phase name='codeemit' stamp='6.253'>
<phase_done name='codeemit' stamp='6.253'/>
</phase>
<phase name='codeinstall' stamp='6.253'>
<phase_done name='codeinstall' stamp='6.259'/>
</phase>
<code_cache total_blobs='290' nmethods='27' adapters='177' free_code_cache='250504128'/>
<task_done success='1' nmsize='552' count='1534' stamp='6.259'/>
</task>
<task compile_id='33' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='382' backedge_count='5968' iicount='382' level='3' stamp='6.260'>
<phase name='buildIR' stamp='6.260'>
<klass id='741' name='java/lang/String' flags='17'/>
<klass id='845' name='java/io/DataInput' flags='1537'/>
<klass id='844' name='java/io/DataInputStream' flags='1'/>
<method id='846' holder='844' name='readUTF' return='741' arguments='845' flags='25' bytes='501' iicount='383'/>
<parse method='846'  stamp='6.260'>
<bc code='185' bci='1'/>
<type id='733' name='int'/>
<method id='848' holder='845' name='readUnsignedShort' return='733' flags='1025' bytes='0' iicount='1'/>
<call method='848' instr='invokeinterface'/>
<method id='849' holder='844' name='readUnsignedShort' return='733' flags='17' bytes='39' iicount='387'/>
<dependency type='unique_concrete_method' ctxk='845' x='849'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='844'/>
<bc code='193' bci='12'/>
<dependency type='leaf_type' ctxk='844'/>
<bc code='192' bci='19'/>
<dependency type='leaf_type' ctxk='844'/>
<bc code='185' bci='87'/>
<type id='735' name='void'/>
<klass id='836' name='[B' flags='1041'/>
<method id='851' holder='845' name='readFully' return='735' arguments='836 733 733' flags='1025' bytes='0' iicount='1'/>
<call method='851' instr='invokeinterface'/>
<method id='852' holder='844' name='readFully' return='735' arguments='836 733 733' flags='17' bytes='63' iicount='434'/>
<dependency type='unique_concrete_method' ctxk='845' x='852'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='844'/>
<bc code='183' bci='259'/>
<klass id='854' name='java/io/UTFDataFormatException' unloaded='1'/>
<method id='856' holder='854' name='&lt;init&gt;' return='735' arguments='741' unloaded='1'/>
<call method='856' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='291'/>
<klass id='807' name='java/lang/StringBuilder' flags='17'/>
<method id='857' holder='807' name='&lt;init&gt;' return='735' flags='1' bytes='7' iicount='273'/>
<call method='857' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='3'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='859' holder='805' name='&lt;init&gt;' return='735' arguments='733' flags='0' bytes='12' iicount='431'/>
<call method='859' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='859'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='861' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='26' compiler='C1' level='1' iicount='5157'/>
<call method='861' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<parse_done stamp='6.260'/>
</parse>
<parse_done stamp='6.260'/>
</parse>
<parse_done stamp='6.260'/>
</parse>
<bc code='182' bci='296'/>
<method id='864' holder='807' name='append' return='807' arguments='741' flags='1' bytes='8' compile_id='29' compiler='C1' level='3' iicount='645'/>
<call method='864' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='864'>
<bc code='183' bci='2'/>
<method id='866' holder='805' name='append' return='805' arguments='741' flags='1' bytes='50' iicount='765'/>
<call method='866' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.260'/>
</parse>
<bc code='182' bci='301'/>
<method id='868' holder='807' name='append' return='807' arguments='733' flags='1' bytes='8' iicount='6'/>
<call method='868' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='868'>
<bc code='183' bci='2'/>
<method id='870' holder='805' name='append' return='805' arguments='733' flags='1' bytes='62' iicount='6'/>
<call method='870' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.261'/>
</parse>
<bc code='182' bci='304'/>
<method id='872' holder='807' name='toString' return='741' flags='1' bytes='17' iicount='321'/>
<call method='872' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='872'>
<bc code='183' bci='13'/>
<klass id='833' name='[C' flags='1041'/>
<method id='874' holder='741' name='&lt;init&gt;' return='735' arguments='833 733 733' flags='1' bytes='82' compile_id='12' compiler='C1' level='3' iicount='1393'/>
<call method='874' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.261'/>
</parse>
<bc code='183' bci='307'/>
<call method='856' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='351'/>
<call method='856' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='403'/>
<call method='857' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='3'/>
<call method='859' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='859'>
<bc code='183' bci='1'/>
<call method='861' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<parse_done stamp='6.261'/>
</parse>
<parse_done stamp='6.261'/>
</parse>
<parse_done stamp='6.261'/>
</parse>
<bc code='182' bci='408'/>
<call method='864' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='864'>
<bc code='183' bci='2'/>
<call method='866' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.261'/>
</parse>
<bc code='182' bci='415'/>
<call method='868' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='868'>
<bc code='183' bci='2'/>
<call method='870' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.261'/>
</parse>
<bc code='182' bci='418'/>
<call method='872' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='872'>
<bc code='183' bci='13'/>
<call method='874' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.261'/>
</parse>
<bc code='183' bci='421'/>
<call method='856' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='469'/>
<call method='857' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='3'/>
<call method='859' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='859'>
<bc code='183' bci='1'/>
<call method='861' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<parse_done stamp='6.261'/>
</parse>
<parse_done stamp='6.261'/>
</parse>
<parse_done stamp='6.261'/>
</parse>
<bc code='182' bci='474'/>
<call method='864' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='864'>
<bc code='183' bci='2'/>
<call method='866' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.261'/>
</parse>
<bc code='182' bci='479'/>
<call method='868' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='868'>
<bc code='183' bci='2'/>
<call method='870' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.261'/>
</parse>
<bc code='182' bci='482'/>
<call method='872' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='872'>
<bc code='183' bci='13'/>
<call method='874' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.261'/>
</parse>
<bc code='183' bci='485'/>
<call method='856' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='497'/>
<call method='874' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.261'/>
</parse>
<phase name='optimize_blocks' stamp='6.261'>
<phase_done name='optimize_blocks' stamp='6.261'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.261'>
<phase_done name='rangeCheckElimination' stamp='6.261'/>
</phase>
<phase name='optimize_null_checks' stamp='6.261'>
<phase_done name='optimize_null_checks' stamp='6.262'/>
</phase>
<phase_done name='buildIR' stamp='6.262'/>
</phase>
<phase name='emit_lir' stamp='6.262'>
<phase name='lirGeneration' stamp='6.262'>
<phase_done name='lirGeneration' stamp='6.262'/>
</phase>
<phase name='linearScan' stamp='6.262'>
<phase_done name='linearScan' stamp='6.263'/>
</phase>
<phase_done name='emit_lir' stamp='6.263'/>
</phase>
<phase name='codeemit' stamp='6.263'>
<phase_done name='codeemit' stamp='6.264'/>
</phase>
<phase name='codeinstall' stamp='6.264'>
<dependency type='leaf_type' ctxk='844'/>
<dependency type='unique_concrete_method' ctxk='845' x='849'/>
<dependency type='unique_concrete_method' ctxk='845' x='852'/>
<phase_done name='codeinstall' stamp='6.443'/>
</phase>
<code_cache total_blobs='294' nmethods='29' adapters='177' free_code_cache='250476160'/>
<task_done success='1' nmsize='8712' count='602' backedge_count='8598' inlined_bytes='159' stamp='6.443'/>
</task>
<task compile_id='38' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='992' backedge_count='992' iicount='992' level='3' stamp='6.443'>
<phase name='buildIR' stamp='6.443'>
<type id='735' name='void'/>
<klass id='836' name='[B' flags='1041'/>
<type id='733' name='int'/>
<klass id='844' name='java/io/DataInputStream' flags='1'/>
<method id='845' holder='844' name='readFully' return='735' arguments='836 733 733' flags='17' bytes='63' iicount='992'/>
<parse method='845'  stamp='6.443'>
<bc code='183' bci='8'/>
<klass id='848' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='849' holder='848' name='&lt;init&gt;' return='735' unloaded='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='34'/>
<klass id='809' name='java/io/InputStream' flags='1025'/>
<method id='851' holder='809' name='read' return='733' arguments='836 733 733' flags='1' bytes='109' iicount='1'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='48'/>
<klass id='852' name='java/io/EOFException' unloaded='1'/>
<method id='853' holder='852' name='&lt;init&gt;' return='735' unloaded='1'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='6.476'/>
</parse>
<phase name='optimize_blocks' stamp='6.476'>
<phase_done name='optimize_blocks' stamp='6.476'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.476'>
<phase_done name='rangeCheckElimination' stamp='6.476'/>
</phase>
<phase name='optimize_null_checks' stamp='6.476'>
<phase_done name='optimize_null_checks' stamp='6.476'/>
</phase>
<phase_done name='buildIR' stamp='6.476'/>
</phase>
<phase name='emit_lir' stamp='6.476'>
<phase name='lirGeneration' stamp='6.476'>
<phase_done name='lirGeneration' stamp='6.476'/>
</phase>
<phase name='linearScan' stamp='6.476'>
<phase_done name='linearScan' stamp='6.476'/>
</phase>
<phase_done name='emit_lir' stamp='6.476'/>
</phase>
<phase name='codeemit' stamp='6.476'>
<phase_done name='codeemit' stamp='6.476'/>
</phase>
<phase name='codeinstall' stamp='6.476'>
<phase_done name='codeinstall' stamp='6.507'/>
</phase>
<code_cache total_blobs='295' nmethods='31' adapters='178' free_code_cache='250483136'/>
<task_done success='1' nmsize='1128' count='992' backedge_count='992' stamp='6.507'/>
</task>
<task compile_id='42' method='java/io/DataInputStream readShort ()S' bytes='40' count='1997' iicount='1997' level='3' stamp='6.507'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1997' stamp='6.507'/>
</task>
<task compile_id='40' method='java/util/ArrayList size ()I' bytes='5' count='275' iicount='275' level='1' stamp='6.507'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='275' stamp='6.507'/>
</task>
<task compile_id='39' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='714' iicount='714' level='3' stamp='6.507'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='714' stamp='6.507'/>
</task>
<task compile_id='37' method='java/io/DataInputStream readUnsignedShort ()I' bytes='39' count='602' iicount='602' level='3' stamp='6.507'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='602' stamp='6.507'/>
</task>
<task compile_id='36' method='java/io/DataInputStream readUTF ()Ljava/lang/String;' bytes='5' count='602' iicount='602' level='3' stamp='6.507'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='602' stamp='6.507'/>
</task>
<task compile_id='35' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='1005' iicount='1005' level='3' stamp='6.507'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1005' stamp='6.507'/>
</task>
<task compile_id='34' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='993' backedge_count='12' iicount='993' level='3' stamp='6.507'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='993' backedge_count='12' stamp='6.507'/>
</task>
<task compile_id='32' method='java/io/BufferedInputStream read ()I' bytes='49' count='5199' iicount='5199' level='3' stamp='6.507'>
<phase name='buildIR' stamp='6.507'>
<type id='733' name='int'/>
<klass id='844' name='java/io/BufferedInputStream' flags='1'/>
<method id='845' holder='844' name='read' return='733' flags='33' bytes='49' iicount='5199'/>
<parse method='845'  stamp='6.507'>
<bc code='183' bci='12'/>
<type id='735' name='void'/>
<method id='847' holder='844' name='fill' return='735' flags='2' bytes='233' iicount='14'/>
<call method='847' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='29'/>
<klass id='836' name='[B' flags='1041'/>
<method id='849' holder='844' name='getBufIfOpen' return='836' flags='2' bytes='21' compile_id='43' compiler='C2' level='4' iicount='7223'/>
<call method='849' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='15'/>
<klass id='741' name='java/lang/String' flags='17'/>
<klass id='851' name='java/io/IOException' unloaded='1'/>
<method id='853' holder='851' name='&lt;init&gt;' return='735' arguments='741' unloaded='1'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='6.507'/>
</parse>
<parse_done stamp='6.507'/>
</parse>
<phase name='optimize_blocks' stamp='6.507'>
<phase_done name='optimize_blocks' stamp='6.507'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.507'>
<phase_done name='rangeCheckElimination' stamp='6.507'/>
</phase>
<phase name='optimize_null_checks' stamp='6.507'>
<phase_done name='optimize_null_checks' stamp='6.507'/>
</phase>
<phase_done name='buildIR' stamp='6.508'/>
</phase>
<phase name='emit_lir' stamp='6.508'>
<phase name='lirGeneration' stamp='6.508'>
<phase_done name='lirGeneration' stamp='6.508'/>
</phase>
<phase name='linearScan' stamp='6.508'>
<phase_done name='linearScan' stamp='6.508'/>
</phase>
<phase_done name='emit_lir' stamp='6.508'/>
</phase>
<phase name='codeemit' stamp='6.508'>
<phase_done name='codeemit' stamp='6.508'/>
</phase>
<phase name='codeinstall' stamp='6.508'>
<dependency type='leaf_type' ctxk='844'/>
<phase_done name='codeinstall' stamp='6.531'/>
</phase>
<code_cache total_blobs='297' nmethods='32' adapters='179' free_code_cache='250480128'/>
<task_done success='1' nmsize='1336' count='5199' inlined_bytes='21' stamp='6.531'/>
</task>
<task compile_id='44' method='com/zju/leetcode/multiThread/testThread access$000 (Lcom/zju/leetcode/multiThread/testThread;)Z' bytes='5' count='84992' iicount='84992' level='1' stamp='6.531'>
<phase name='buildIR' stamp='6.531'>
<type id='727' name='boolean'/>
<klass id='844' name='com/zju/leetcode/multiThread/testThread' flags='1'/>
<method id='845' holder='844' name='access$000' return='727' arguments='844' flags='4104' bytes='5' iicount='84992'/>
<parse method='845'  stamp='6.531'>
<parse_done stamp='6.531'/>
</parse>
<phase name='optimize_blocks' stamp='6.531'>
<phase_done name='optimize_blocks' stamp='6.531'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.531'>
<phase_done name='rangeCheckElimination' stamp='6.531'/>
</phase>
<phase name='optimize_null_checks' stamp='6.531'>
<phase_done name='optimize_null_checks' stamp='6.531'/>
</phase>
<phase_done name='buildIR' stamp='6.531'/>
</phase>
<phase name='emit_lir' stamp='6.531'>
<phase name='lirGeneration' stamp='6.531'>
<phase_done name='lirGeneration' stamp='6.531'/>
</phase>
<phase name='linearScan' stamp='6.531'>
<phase_done name='linearScan' stamp='6.531'/>
</phase>
<phase_done name='emit_lir' stamp='6.531'/>
</phase>
<phase name='codeemit' stamp='6.531'>
<phase_done name='codeemit' stamp='6.531'/>
</phase>
<phase name='codeinstall' stamp='6.531'>
<phase_done name='codeinstall' stamp='6.538'/>
</phase>
<code_cache total_blobs='298' nmethods='33' adapters='179' free_code_cache='250479360'/>
<task_done success='1' nmsize='240' count='84992' stamp='6.538'/>
</task>
<task compile_id='41' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='775' iicount='775' level='3' stamp='6.538'>
<phase name='buildIR' stamp='6.539'>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='805' name='append' return='805' arguments='741' flags='1' bytes='50' iicount='775'/>
<parse method='844'  stamp='6.539'>
<bc code='183' bci='5'/>
<method id='846' holder='805' name='appendNull' return='805' flags='2' bytes='56' iicount='1'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='733' name='int'/>
<method id='848' holder='741' name='length' return='733' flags='1' bytes='6' compile_id='15' compiler='C2' level='4' iicount='27784'/>
<call method='848' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='6.539'/>
</parse>
<bc code='183' bci='21'/>
<type id='735' name='void'/>
<method id='850' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' compile_id='3' compiler='C2' level='4' iicount='7189'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='183' bci='17'/>
<method id='852' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='326'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='854' name='java/util/Arrays' flags='1'/>
<method id='855' holder='854' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='394'/>
<call method='855' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<bc code='184' bci='11'/>
<klass id='857' name='java/lang/Math' flags='17'/>
<method id='858' holder='857' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='23' compiler='C1' level='3' iicount='2506'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='6.539'/>
</parse>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='860' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='2560'/>
<call method='860' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='6.539'/>
</parse>
<parse_done stamp='6.539'/>
</parse>
<bc code='182' bci='35'/>
<method id='862' holder='741' name='getChars' return='735' arguments='733 733 833 733' flags='1' bytes='62' compile_id='8' compiler='C1' level='3' iicount='855'/>
<call method='862' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.539'/>
</parse>
<phase name='optimize_blocks' stamp='6.539'>
<phase_done name='optimize_blocks' stamp='6.539'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.539'>
<phase_done name='rangeCheckElimination' stamp='6.539'/>
</phase>
<phase name='optimize_null_checks' stamp='6.539'>
<phase_done name='optimize_null_checks' stamp='6.539'/>
</phase>
<phase_done name='buildIR' stamp='6.539'/>
</phase>
<phase name='emit_lir' stamp='6.539'>
<phase name='lirGeneration' stamp='6.539'>
<phase_done name='lirGeneration' stamp='6.539'/>
</phase>
<phase name='linearScan' stamp='6.539'>
<phase_done name='linearScan' stamp='6.539'/>
</phase>
<phase_done name='emit_lir' stamp='6.539'/>
</phase>
<phase name='codeemit' stamp='6.539'>
<phase_done name='codeemit' stamp='6.540'/>
</phase>
<phase name='codeinstall' stamp='6.540'>
<phase_done name='codeinstall' stamp='6.563'/>
</phase>
<code_cache total_blobs='299' nmethods='34' adapters='179' free_code_cache='250475840'/>
<task_done success='1' nmsize='1880' count='775' inlined_bytes='63' stamp='6.563'/>
</task>
<task compile_id='45' compile_kind='osr' method='com/zju/leetcode/multiThread/testThread$1 run ()V' bytes='26' count='1' backedge_count='84992' iicount='1' osr_bci='2' level='3' stamp='6.564'>
<phase name='buildIR' stamp='6.564'>
<type id='735' name='void'/>
<klass id='844' name='com/zju/leetcode/multiThread/testThread$1' flags='8'/>
<method id='845' holder='844' name='run' return='735' flags='1' bytes='26' iicount='1'/>
<parse method='845'  stamp='6.564'>
<bc code='184' bci='6'/>
<type id='727' name='boolean'/>
<klass id='847' name='com/zju/leetcode/multiThread/testThread' flags='1'/>
<method id='848' holder='847' name='access$000' return='727' arguments='847' flags='4104' bytes='5' compile_id='44' compiler='C1' level='1' iicount='84992'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='6.564'/>
</parse>
<bc code='182' bci='22'/>
<type id='733' name='int'/>
<klass id='850' name='java/io/PrintStream' unloaded='1'/>
<method id='852' holder='850' name='println' return='735' arguments='733' unloaded='1'/>
<call method='852' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='6.564'/>
</parse>
<phase name='optimize_blocks' stamp='6.564'>
<phase_done name='optimize_blocks' stamp='6.564'/>
</phase>
<phase name='optimize_null_checks' stamp='6.564'>
<phase_done name='optimize_null_checks' stamp='6.564'/>
</phase>
<phase_done name='buildIR' stamp='6.564'/>
</phase>
<phase name='emit_lir' stamp='6.564'>
<phase name='lirGeneration' stamp='6.564'>
<phase_done name='lirGeneration' stamp='6.564'/>
</phase>
<phase name='linearScan' stamp='6.564'>
<phase_done name='linearScan' stamp='6.564'/>
</phase>
<phase_done name='emit_lir' stamp='6.564'/>
</phase>
<phase name='codeemit' stamp='6.564'>
<phase_done name='codeemit' stamp='6.565'/>
</phase>
<phase name='codeinstall' stamp='6.565'>
<phase_done name='codeinstall' stamp='6.726'/>
</phase>
<code_cache total_blobs='300' nmethods='35' adapters='179' free_code_cache='250473920'/>
<task_done success='1' nmsize='968' count='1' backedge_count='1473431' inlined_bytes='5' stamp='6.726'/>
</task>
<task compile_id='46' method='com/zju/leetcode/multiThread/testThread$1 run ()V' bytes='26' count='1' backedge_count='1473536' iicount='1' level='3' stamp='6.727'>
<phase name='buildIR' stamp='6.727'>
<type id='735' name='void'/>
<klass id='844' name='com/zju/leetcode/multiThread/testThread$1' flags='8'/>
<method id='845' holder='844' name='run' return='735' flags='1' bytes='26' iicount='1'/>
<parse method='845'  stamp='6.727'>
<bc code='184' bci='6'/>
<type id='727' name='boolean'/>
<klass id='847' name='com/zju/leetcode/multiThread/testThread' flags='1'/>
<method id='848' holder='847' name='access$000' return='727' arguments='847' flags='4104' bytes='5' compile_id='44' compiler='C1' level='1' iicount='84992'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='6.727'/>
</parse>
<bc code='182' bci='22'/>
<type id='733' name='int'/>
<klass id='850' name='java/io/PrintStream' unloaded='1'/>
<method id='852' holder='850' name='println' return='735' arguments='733' unloaded='1'/>
<call method='852' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='6.727'/>
</parse>
<phase name='optimize_blocks' stamp='6.727'>
<phase_done name='optimize_blocks' stamp='6.727'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.727'>
<phase_done name='rangeCheckElimination' stamp='6.727'/>
</phase>
<phase name='optimize_null_checks' stamp='6.727'>
<phase_done name='optimize_null_checks' stamp='6.727'/>
</phase>
<phase_done name='buildIR' stamp='6.727'/>
</phase>
<phase name='emit_lir' stamp='6.727'>
<phase name='lirGeneration' stamp='6.727'>
<phase_done name='lirGeneration' stamp='6.727'/>
</phase>
<phase name='linearScan' stamp='6.727'>
<phase_done name='linearScan' stamp='6.727'/>
</phase>
<phase_done name='emit_lir' stamp='6.727'/>
</phase>
<phase name='codeemit' stamp='6.727'>
<phase_done name='codeemit' stamp='6.727'/>
</phase>
<phase name='codeinstall' stamp='6.727'>
<phase_done name='codeinstall' stamp='6.856'/>
</phase>
<code_cache total_blobs='302' nmethods='36' adapters='180' free_code_cache='250471488'/>
<task_done success='1' nmsize='904' count='1' backedge_count='7305959' inlined_bytes='5' stamp='6.856'/>
</task>
<task compile_id='48' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='644' iicount='644' level='3' stamp='6.859'>
<phase name='buildIR' stamp='6.859'>
<type id='733' name='int'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='844' name='java/util/HashMap' flags='1'/>
<method id='845' holder='844' name='hash' return='733' arguments='740' flags='24' bytes='20' iicount='645'/>
<parse method='845'  stamp='6.859'>
<bc code='182' bci='9'/>
<method id='847' holder='740' name='hashCode' return='733' flags='257' bytes='0' iicount='89'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='6.859'/>
</parse>
<phase name='optimize_blocks' stamp='6.859'>
<phase_done name='optimize_blocks' stamp='6.859'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.859'>
<phase_done name='rangeCheckElimination' stamp='6.859'/>
</phase>
<phase name='optimize_null_checks' stamp='6.859'>
<phase_done name='optimize_null_checks' stamp='6.859'/>
</phase>
<phase_done name='buildIR' stamp='6.859'/>
</phase>
<phase name='emit_lir' stamp='6.859'>
<phase name='lirGeneration' stamp='6.859'>
<phase_done name='lirGeneration' stamp='6.859'/>
</phase>
<phase name='linearScan' stamp='6.859'>
<phase_done name='linearScan' stamp='6.860'/>
</phase>
<phase_done name='emit_lir' stamp='6.860'/>
</phase>
<phase name='codeemit' stamp='6.860'>
<phase_done name='codeemit' stamp='6.860'/>
</phase>
<phase name='codeinstall' stamp='6.860'>
<phase_done name='codeinstall' stamp='6.907'/>
</phase>
<code_cache total_blobs='305' nmethods='38' adapters='181' free_code_cache='250468736'/>
<task_done success='1' nmsize='584' count='647' stamp='6.907'/>
</task>
<task compile_id='51' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='386' backedge_count='41' iicount='386' level='3' stamp='6.907'>
<phase name='buildIR' stamp='6.907'>
<klass id='740' name='java/lang/Object' flags='1'/>
<type id='733' name='int'/>
<type id='727' name='boolean'/>
<klass id='844' name='java/util/HashMap' flags='1'/>
<method id='845' holder='844' name='putVal' return='740' arguments='733 740 740 727 727' flags='16' bytes='300' iicount='386'/>
<parse method='845'  stamp='6.907'>
<bc code='182' bci='20'/>
<klass id='848' name='[Ljava/util/HashMap$Node;' flags='1040'/>
<method id='849' holder='844' name='resize' return='848' flags='16' bytes='359' iicount='31'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='56'/>
<klass id='847' name='java/util/HashMap$Node' flags='8'/>
<method id='851' holder='844' name='newNode' return='847' arguments='733 740 740 847' flags='0' bytes='13' iicount='325'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='91'/>
<method id='852' holder='740' name='equals' return='727' arguments='740' flags='1' bytes='11' iicount='1'/>
<call method='852' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='123'/>
<klass id='853' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='854' holder='853' name='putTreeVal' return='853' arguments='844 848 733 740 740' flags='16' bytes='314' iicount='1'/>
<call method='854' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='152'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='169'/>
<type id='735' name='void'/>
<method id='855' holder='844' name='treeifyBin' return='735' arguments='848 733' flags='16' bytes='110' iicount='1'/>
<call method='855' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='203'/>
<call method='852' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='253'/>
<method id='857' holder='844' name='afterNodeAccess' return='735' arguments='847' flags='0' bytes='1' iicount='23'/>
<call method='857' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='288'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='295'/>
<method id='858' holder='844' name='afterNodeInsertion' return='735' arguments='727' flags='0' bytes='1' iicount='325'/>
<call method='858' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='6.908'/>
</parse>
<phase name='optimize_blocks' stamp='6.908'>
<phase_done name='optimize_blocks' stamp='6.908'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.908'>
<phase_done name='rangeCheckElimination' stamp='6.908'/>
</phase>
<phase name='optimize_null_checks' stamp='6.908'>
<phase_done name='optimize_null_checks' stamp='6.908'/>
</phase>
<phase_done name='buildIR' stamp='6.908'/>
</phase>
<phase name='emit_lir' stamp='6.908'>
<phase name='lirGeneration' stamp='6.908'>
<phase_done name='lirGeneration' stamp='6.909'/>
</phase>
<phase name='linearScan' stamp='6.909'>
<phase_done name='linearScan' stamp='6.909'/>
</phase>
<phase_done name='emit_lir' stamp='6.909'/>
</phase>
<phase name='codeemit' stamp='6.909'>
<phase_done name='codeemit' stamp='6.909'/>
</phase>
<phase name='codeinstall' stamp='6.909'>
<phase_done name='codeinstall' stamp='7.074'/>
</phase>
<code_cache total_blobs='307' nmethods='39' adapters='181' free_code_cache='250458496'/>
<task_done success='1' nmsize='4856' count='389' backedge_count='41' stamp='7.074'/>
</task>
<task compile_id='53' method='java/lang/Character toLowerCase (C)C' bytes='6' count='512' iicount='512' level='3' stamp='7.074'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='512' stamp='7.074'/>
</task>
<task compile_id='52' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='184' backedge_count='8192' iicount='184' level='3' stamp='7.074'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='184' backedge_count='8192' stamp='7.074'/>
</task>
<task compile_id='49' method='java/lang/String indexOf (I)I' bytes='7' count='654' iicount='654' level='3' stamp='7.074'>
<phase name='buildIR' stamp='7.075'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='indexOf' return='733' arguments='733' flags='1' bytes='7' iicount='654'/>
<parse method='844'  stamp='7.075'>
<bc code='182' bci='3'/>
<method id='846' holder='741' name='indexOf' return='733' arguments='733 733' flags='1' bytes='70' compile_id='20' compiler='C1' level='3' iicount='671'/>
<call method='846' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='7.075'/>
</parse>
<phase name='optimize_blocks' stamp='7.075'>
<phase_done name='optimize_blocks' stamp='7.075'/>
</phase>
<phase name='rangeCheckElimination' stamp='7.075'>
<phase_done name='rangeCheckElimination' stamp='7.075'/>
</phase>
<phase name='optimize_null_checks' stamp='7.075'>
<phase_done name='optimize_null_checks' stamp='7.075'/>
</phase>
<phase_done name='buildIR' stamp='7.075'/>
</phase>
<phase name='emit_lir' stamp='7.075'>
<phase name='lirGeneration' stamp='7.075'>
<phase_done name='lirGeneration' stamp='7.075'/>
</phase>
<phase name='linearScan' stamp='7.075'>
<phase_done name='linearScan' stamp='7.075'/>
</phase>
<phase_done name='emit_lir' stamp='7.075'/>
</phase>
<phase name='codeemit' stamp='7.075'>
<phase_done name='codeemit' stamp='7.075'/>
</phase>
<phase name='codeinstall' stamp='7.075'>
<phase_done name='codeinstall' stamp='7.089'/>
</phase>
<code_cache total_blobs='308' nmethods='40' adapters='181' free_code_cache='250457408'/>
<task_done success='1' nmsize='520' count='671' stamp='7.089'/>
</task>
<task compile_id='54' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='172' backedge_count='3333' iicount='172' level='3' stamp='7.090'>
<phase name='buildIR' stamp='7.090'>
<klass id='741' name='java/lang/String' flags='17'/>
<type id='727' name='boolean'/>
<klass id='844' name='java/io/BufferedReader' flags='1'/>
<method id='845' holder='844' name='readLine' return='741' arguments='727' flags='0' bytes='304' iicount='172'/>
<parse method='845'  stamp='7.090'>
<bc code='183' bci='11'/>
<type id='735' name='void'/>
<method id='848' holder='844' name='ensureOpen' return='735' flags='2' bytes='18' iicount='172'/>
<call method='848' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='13'/>
<klass id='850' name='java/io/IOException' unloaded='1'/>
<method id='852' holder='850' name='&lt;init&gt;' return='735' arguments='741' unloaded='1'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='7.090'/>
</parse>
<bc code='183' bci='44'/>
<method id='853' holder='844' name='fill' return='735' flags='2' bytes='170' iicount='7'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='63'/>
<type id='733' name='int'/>
<klass id='806' name='java/lang/StringBuffer' flags='17'/>
<method id='855' holder='806' name='length' return='733' flags='33' bytes='5' iicount='6'/>
<call method='855' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<parse_done stamp='7.090'/>
</parse>
<bc code='182' bci='70'/>
<method id='857' holder='806' name='toString' return='741' flags='33' bytes='36' iicount='107'/>
<call method='857' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='208'/>
<klass id='833' name='[C' flags='1041'/>
<method id='859' holder='741' name='&lt;init&gt;' return='735' arguments='833 733 733' flags='1' bytes='82' compile_id='12' compiler='C1' level='3' iicount='1603'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='226'/>
<method id='861' holder='806' name='append' return='806' arguments='833 733 733' flags='33' bytes='15' iicount='3'/>
<call method='861' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<bc code='183' bci='9'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='863' holder='805' name='append' return='805' arguments='833 733 733' flags='1' bytes='40' iicount='3'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='7.091'/>
</parse>
<bc code='182' bci='231'/>
<call method='857' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='275'/>
<method id='866' holder='806' name='&lt;init&gt;' return='735' arguments='733' flags='1' bytes='6' iicount='110'/>
<call method='866' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='866'>
<bc code='183' bci='2'/>
<method id='868' holder='805' name='&lt;init&gt;' return='735' arguments='733' flags='0' bytes='12' iicount='448'/>
<call method='868' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='868'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='870' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='26' compiler='C1' level='1' iicount='5432'/>
<call method='870' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='870'>
<parse_done stamp='7.091'/>
</parse>
<parse_done stamp='7.091'/>
</parse>
<parse_done stamp='7.091'/>
</parse>
<bc code='182' bci='289'/>
<call method='861' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<bc code='183' bci='9'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='7.091'/>
</parse>
<parse_done stamp='7.091'/>
</parse>
<phase name='optimize_blocks' stamp='7.091'>
<phase_done name='optimize_blocks' stamp='7.091'/>
</phase>
<phase name='rangeCheckElimination' stamp='7.091'>
<phase_done name='rangeCheckElimination' stamp='7.091'/>
</phase>
<phase name='optimize_null_checks' stamp='7.091'>
<phase_done name='optimize_null_checks' stamp='7.091'/>
</phase>
<phase_done name='buildIR' stamp='7.091'/>
</phase>
<phase name='emit_lir' stamp='7.091'>
<phase name='lirGeneration' stamp='7.091'>
<phase_done name='lirGeneration' stamp='7.091'/>
</phase>
<phase name='linearScan' stamp='7.091'>
<phase_done name='linearScan' stamp='7.092'/>
</phase>
<phase_done name='emit_lir' stamp='7.092'/>
</phase>
<phase name='codeemit' stamp='7.092'>
<phase_done name='codeemit' stamp='7.092'/>
</phase>
<phase name='codeinstall' stamp='7.092'>
<dependency type='leaf_type' ctxk='844'/>
<phase_done name='codeinstall' stamp='7.411'/>
</phase>
<code_cache total_blobs='310' nmethods='41' adapters='181' free_code_cache='250441024'/>
<task_done success='1' nmsize='5960' count='172' backedge_count='3333' inlined_bytes='72' stamp='7.411'/>
</task>
<task compile_id='57' method='java/lang/String toLowerCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='243' backedge_count='4096' iicount='243' level='3' stamp='7.411'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='243' backedge_count='4096' stamp='7.411'/>
</task>
<task compile_id='55' method='java/lang/String lastIndexOf (II)I' bytes='52' count='165' backedge_count='6618' iicount='165' level='3' stamp='7.411'>
<phase name='buildIR' stamp='7.411'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='lastIndexOf' return='733' arguments='733 733' flags='1' bytes='52' iicount='165'/>
<parse method='844'  stamp='7.411'>
<bc code='184' bci='16'/>
<klass id='846' name='java/lang/Math' flags='17'/>
<method id='847' holder='846' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='23' compiler='C1' level='3' iicount='2791'/>
<call method='847' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<parse_done stamp='7.472'/>
</parse>
<bc code='183' bci='48'/>
<method id='849' holder='741' name='lastIndexOfSupplementary' return='733' arguments='733 733' flags='2' bytes='70' iicount='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='7.472'/>
</parse>
<phase name='optimize_blocks' stamp='7.472'>
<phase_done name='optimize_blocks' stamp='7.472'/>
</phase>
<phase name='rangeCheckElimination' stamp='7.472'>
<phase_done name='rangeCheckElimination' stamp='7.472'/>
</phase>
<phase name='optimize_null_checks' stamp='7.472'>
<phase_done name='optimize_null_checks' stamp='7.472'/>
</phase>
<phase_done name='buildIR' stamp='7.472'/>
</phase>
<phase name='emit_lir' stamp='7.472'>
<phase name='lirGeneration' stamp='7.472'>
<phase_done name='lirGeneration' stamp='7.472'/>
</phase>
<phase name='linearScan' stamp='7.472'>
<phase_done name='linearScan' stamp='7.472'/>
</phase>
<phase_done name='emit_lir' stamp='7.473'/>
</phase>
<phase name='codeemit' stamp='7.473'>
<phase_done name='codeemit' stamp='7.473'/>
</phase>
<phase name='codeinstall' stamp='7.473'>
<phase_done name='codeinstall' stamp='7.521'/>
</phase>
<code_cache total_blobs='311' nmethods='43' adapters='181' free_code_cache='250443136'/>
<task_done success='1' nmsize='936' count='167' backedge_count='6739' inlined_bytes='11' stamp='7.521'/>
</task>
<task compile_id='59' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='768' iicount='768' level='3' stamp='7.521'>
<phase name='buildIR' stamp='7.521'>
<type id='727' name='boolean'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='startsWith' return='727' arguments='741' flags='1' bytes='7' iicount='768'/>
<parse method='844'  stamp='7.521'>
<bc code='182' bci='3'/>
<type id='733' name='int'/>
<method id='846' holder='741' name='startsWith' return='727' arguments='741 733' flags='1' bytes='72' compile_id='22' compiler='C1' level='3' iicount='1026'/>
<call method='846' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='7.521'/>
</parse>
<phase name='optimize_blocks' stamp='7.521'>
<phase_done name='optimize_blocks' stamp='7.521'/>
</phase>
<phase name='rangeCheckElimination' stamp='7.521'>
<phase_done name='rangeCheckElimination' stamp='7.521'/>
</phase>
<phase name='optimize_null_checks' stamp='7.521'>
<phase_done name='optimize_null_checks' stamp='7.521'/>
</phase>
<phase_done name='buildIR' stamp='7.521'/>
</phase>
<phase name='emit_lir' stamp='7.521'>
<phase name='lirGeneration' stamp='7.521'>
<phase_done name='lirGeneration' stamp='7.521'/>
</phase>
<phase name='linearScan' stamp='7.521'>
<phase_done name='linearScan' stamp='7.522'/>
</phase>
<phase_done name='emit_lir' stamp='7.522'/>
</phase>
<phase name='codeemit' stamp='7.522'>
<phase_done name='codeemit' stamp='7.522'/>
</phase>
<phase name='codeinstall' stamp='7.522'>
<phase_done name='codeinstall' stamp='7.528'/>
</phase>
<code_cache total_blobs='312' nmethods='44' adapters='181' free_code_cache='250442048'/>
<task_done success='1' nmsize='520' count='780' stamp='7.528'/>
</task>
<task compile_id='58' method='java/nio/Buffer position ()I' bytes='5' count='279' iicount='279' level='1' stamp='7.529'>
<phase name='buildIR' stamp='7.529'>
<type id='733' name='int'/>
<klass id='820' name='java/nio/Buffer' flags='1025'/>
<method id='844' holder='820' name='position' return='733' flags='17' bytes='5' iicount='279'/>
<parse method='844'  stamp='7.529'>
<parse_done stamp='7.529'/>
</parse>
<phase name='optimize_blocks' stamp='7.529'>
<phase_done name='optimize_blocks' stamp='7.529'/>
</phase>
<phase name='rangeCheckElimination' stamp='7.529'>
<phase_done name='rangeCheckElimination' stamp='7.529'/>
</phase>
<phase name='optimize_null_checks' stamp='7.529'>
<phase_done name='optimize_null_checks' stamp='7.529'/>
</phase>
<phase_done name='buildIR' stamp='7.529'/>
</phase>
<phase name='emit_lir' stamp='7.529'>
<phase name='lirGeneration' stamp='7.529'>
<phase_done name='lirGeneration' stamp='7.529'/>
</phase>
<phase name='linearScan' stamp='7.529'>
<phase_done name='linearScan' stamp='7.529'/>
</phase>
<phase_done name='emit_lir' stamp='7.529'/>
</phase>
<phase name='codeemit' stamp='7.529'>
<phase_done name='codeemit' stamp='7.529'/>
</phase>
<phase name='codeinstall' stamp='7.529'>
<phase_done name='codeinstall' stamp='7.629'/>
</phase>
<code_cache total_blobs='313' nmethods='45' adapters='181' free_code_cache='250441280'/>
<task_done success='1' nmsize='272' count='279' stamp='7.629'/>
</task>
<task compile_id='60' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='265' iicount='265' level='1' stamp='7.629'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='265' stamp='7.629'/>
</task>
<task compile_id='50' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='409' iicount='409' level='3' stamp='7.629'>
<phase name='buildIR' stamp='7.629'>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='844' name='java/util/HashMap' flags='1'/>
<method id='845' holder='844' name='put' return='740' arguments='740 740' flags='1' bytes='13' iicount='409'/>
<parse method='845'  stamp='7.629'>
<bc code='184' bci='2'/>
<type id='733' name='int'/>
<method id='847' holder='844' name='hash' return='733' arguments='740' flags='24' bytes='20' compile_id='48' compiler='C1' level='3' iicount='701'/>
<call method='847' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='182' bci='9'/>
<method id='849' holder='740' name='hashCode' return='733' flags='257' bytes='0' iicount='89'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='7.629'/>
</parse>
<bc code='182' bci='9'/>
<type id='727' name='boolean'/>
<method id='850' holder='844' name='putVal' return='740' arguments='733 740 740 727 727' flags='16' bytes='300' compile_id='51' compiler='C1' level='3' iicount='409'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='7.629'/>
</parse>
<phase name='optimize_blocks' stamp='7.629'>
<phase_done name='optimize_blocks' stamp='7.629'/>
</phase>
<phase name='rangeCheckElimination' stamp='7.629'>
<phase_done name='rangeCheckElimination' stamp='7.630'/>
</phase>
<phase name='optimize_null_checks' stamp='7.630'>
<phase_done name='optimize_null_checks' stamp='7.630'/>
</phase>
<phase_done name='buildIR' stamp='7.630'/>
</phase>
<phase name='emit_lir' stamp='7.630'>
<phase name='lirGeneration' stamp='7.630'>
<phase_done name='lirGeneration' stamp='7.630'/>
</phase>
<phase name='linearScan' stamp='7.630'>
<phase_done name='linearScan' stamp='7.630'/>
</phase>
<phase_done name='emit_lir' stamp='7.630'/>
</phase>
<phase name='codeemit' stamp='7.630'>
<phase_done name='codeemit' stamp='7.630'/>
</phase>
<phase name='codeinstall' stamp='7.630'>
<phase_done name='codeinstall' stamp='7.949'/>
</phase>
<code_cache total_blobs='314' nmethods='46' adapters='181' free_code_cache='250439488'/>
<task_done success='1' nmsize='952' count='409' inlined_bytes='20' stamp='7.949'/>
</task>
<task compile_id='61' method='sun/instrument/InstrumentationImpl transform (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B' bytes='38' count='256' iicount='256' level='3' stamp='7.952'>
<phase name='buildIR' stamp='7.952'>
<klass id='836' name='[B' flags='1041'/>
<klass id='744' name='java/lang/ClassLoader' flags='1025'/>
<klass id='741' name='java/lang/String' flags='17'/>
<klass id='742' name='java/lang/Class' flags='17'/>
<klass id='753' name='java/security/ProtectionDomain' flags='1'/>
<type id='727' name='boolean'/>
<klass id='844' name='sun/instrument/InstrumentationImpl' flags='1'/>
<method id='845' holder='844' name='transform' return='836' arguments='744 741 742 753 836 727' flags='2' bytes='38' iicount='256'/>
<parse method='845'  stamp='7.952'>
<bc code='182' bci='34'/>
<klass id='847' name='sun/instrument/TransformerManager' flags='1'/>
<method id='848' holder='847' name='transform' return='836' arguments='744 741 742 753 836' flags='1' bytes='98' iicount='257'/>
<call method='848' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='847' x='848'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='847'/>
<parse_done stamp='7.952'/>
</parse>
<phase name='optimize_blocks' stamp='7.952'>
<phase_done name='optimize_blocks' stamp='7.952'/>
</phase>
<phase name='rangeCheckElimination' stamp='7.952'>
<phase_done name='rangeCheckElimination' stamp='7.952'/>
</phase>
<phase name='optimize_null_checks' stamp='7.952'>
<phase_done name='optimize_null_checks' stamp='7.952'/>
</phase>
<phase_done name='buildIR' stamp='7.952'/>
</phase>
<phase name='emit_lir' stamp='7.952'>
<phase name='lirGeneration' stamp='7.952'>
<phase_done name='lirGeneration' stamp='7.952'/>
</phase>
<phase name='linearScan' stamp='7.952'>
<phase_done name='linearScan' stamp='7.952'/>
</phase>
<phase_done name='emit_lir' stamp='7.952'/>
</phase>
<phase name='codeemit' stamp='7.952'>
<phase_done name='codeemit' stamp='7.952'/>
</phase>
<phase name='codeinstall' stamp='7.952'>
<dependency type='leaf_type' ctxk='847'/>
<dependency type='unique_concrete_method' ctxk='847' x='848'/>
<phase_done name='codeinstall' stamp='8.427'/>
</phase>
<code_cache total_blobs='316' nmethods='47' adapters='182' free_code_cache='250437504'/>
<task_done success='1' nmsize='616' count='260' stamp='8.427'/>
</task>
<task compile_id='62' method='sun/instrument/TransformerManager transform (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B' bytes='98' count='260' iicount='260' level='3' stamp='8.427'>
<phase name='buildIR' stamp='8.427'>
<klass id='836' name='[B' flags='1041'/>
<klass id='744' name='java/lang/ClassLoader' flags='1025'/>
<klass id='741' name='java/lang/String' flags='17'/>
<klass id='742' name='java/lang/Class' flags='17'/>
<klass id='753' name='java/security/ProtectionDomain' flags='1'/>
<klass id='844' name='sun/instrument/TransformerManager' flags='1'/>
<method id='845' holder='844' name='transform' return='836' arguments='744 741 742 753 836' flags='1' bytes='98' iicount='260'/>
<parse method='845'  stamp='8.427'>
<bc code='183' bci='4'/>
<klass id='848' name='[Lsun/instrument/TransformerManager$TransformerInfo;' flags='1042'/>
<method id='849' holder='844' name='getSnapshotTransformerList' return='848' flags='2' bytes='5' compile_id='11' compiler='C1' level='1' iicount='129'/>
<call method='849' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<parse_done stamp='8.427'/>
</parse>
<bc code='182' bci='33'/>
<klass id='851' name='java/lang/instrument/ClassFileTransformer' unloaded='1'/>
<klass id='847' name='sun/instrument/TransformerManager$TransformerInfo' flags='2'/>
<method id='852' holder='847' name='transformer' return='851' flags='0' bytes='5' iicount='1'/>
<call method='852' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='847'/>
<inline_fail reason='not inlineable'/>
<bc code='185' bci='50'/>
<method id='853' holder='851' name='transform' return='836' arguments='744 741 742 753 836' unloaded='1'/>
<call method='853' instr='invokeinterface'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='8.428'/>
</parse>
<phase name='optimize_blocks' stamp='8.428'>
<phase_done name='optimize_blocks' stamp='8.428'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.428'>
<phase_done name='rangeCheckElimination' stamp='8.428'/>
</phase>
<phase name='optimize_null_checks' stamp='8.428'>
<phase_done name='optimize_null_checks' stamp='8.428'/>
</phase>
<phase_done name='buildIR' stamp='8.428'/>
</phase>
<phase name='emit_lir' stamp='8.428'>
<phase name='lirGeneration' stamp='8.428'>
<phase_done name='lirGeneration' stamp='8.428'/>
</phase>
<phase name='linearScan' stamp='8.428'>
<phase_done name='linearScan' stamp='8.429'/>
</phase>
<phase_done name='emit_lir' stamp='8.429'/>
</phase>
<phase name='codeemit' stamp='8.429'>
<phase_done name='codeemit' stamp='8.429'/>
</phase>
<phase name='codeinstall' stamp='8.429'>
<dependency type='leaf_type' ctxk='844'/>
<dependency type='leaf_type' ctxk='847'/>
<phase_done name='codeinstall' stamp='8.510'/>
</phase>
<code_cache total_blobs='317' nmethods='48' adapters='182' free_code_cache='250434944'/>
<task_done success='1' nmsize='1272' count='260' inlined_bytes='5' stamp='8.510'/>
</task>
<task compile_id='63' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='393' iicount='393' level='3' stamp='8.510'>
<phase name='buildIR' stamp='8.510'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='844' name='java/util/HashMap$Node' flags='8'/>
<method id='845' holder='844' name='&lt;init&gt;' return='735' arguments='733 740 740 844' flags='0' bytes='26' iicount='393'/>
<parse method='845'  stamp='8.510'>
<bc code='183' bci='1'/>
<method id='847' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='26' compiler='C1' level='1' iicount='5493'/>
<call method='847' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='844'/>
<parse_done stamp='8.510'/>
</parse>
<parse_done stamp='8.510'/>
</parse>
<phase name='optimize_blocks' stamp='8.510'>
<phase_done name='optimize_blocks' stamp='8.510'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.510'>
<phase_done name='rangeCheckElimination' stamp='8.510'/>
</phase>
<phase name='optimize_null_checks' stamp='8.510'>
<phase_done name='optimize_null_checks' stamp='8.510'/>
</phase>
<phase_done name='buildIR' stamp='8.510'/>
</phase>
<phase name='emit_lir' stamp='8.510'>
<phase name='lirGeneration' stamp='8.510'>
<phase_done name='lirGeneration' stamp='8.510'/>
</phase>
<phase name='linearScan' stamp='8.510'>
<phase_done name='linearScan' stamp='8.510'/>
</phase>
<phase_done name='emit_lir' stamp='8.510'/>
</phase>
<phase name='codeemit' stamp='8.510'>
<phase_done name='codeemit' stamp='8.510'/>
</phase>
<phase name='codeinstall' stamp='8.510'>
<dependency type='no_finalizable_subclasses' ctxk='844'/>
<phase_done name='codeinstall' stamp='8.533'/>
</phase>
<code_cache total_blobs='318' nmethods='49' adapters='182' free_code_cache='250433792'/>
<task_done success='1' nmsize='528' count='406' inlined_bytes='1' stamp='8.533'/>
</task>
<task compile_id='64' method='sun/util/locale/LocaleUtils isUpper (C)Z' bytes='18' count='260' iicount='260' level='3' stamp='8.533'>
<phase name='buildIR' stamp='8.533'>
<type id='727' name='boolean'/>
<type id='728' name='char'/>
<klass id='844' name='sun/util/locale/LocaleUtils' flags='17'/>
<method id='845' holder='844' name='isUpper' return='727' arguments='728' flags='10' bytes='18' iicount='260'/>
<parse method='845'  stamp='8.533'>
<parse_done stamp='8.533'/>
</parse>
<phase name='optimize_blocks' stamp='8.533'>
<phase_done name='optimize_blocks' stamp='8.533'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.533'>
<phase_done name='rangeCheckElimination' stamp='8.533'/>
</phase>
<phase name='optimize_null_checks' stamp='8.533'>
<phase_done name='optimize_null_checks' stamp='8.533'/>
</phase>
<phase_done name='buildIR' stamp='8.533'/>
</phase>
<phase name='emit_lir' stamp='8.533'>
<phase name='lirGeneration' stamp='8.533'>
<phase_done name='lirGeneration' stamp='8.533'/>
</phase>
<phase name='linearScan' stamp='8.533'>
<phase_done name='linearScan' stamp='8.533'/>
</phase>
<phase_done name='emit_lir' stamp='8.533'/>
</phase>
<phase name='codeemit' stamp='8.533'>
<phase_done name='codeemit' stamp='8.533'/>
</phase>
<phase name='codeinstall' stamp='8.533'>
<phase_done name='codeinstall' stamp='8.558'/>
</phase>
<code_cache total_blobs='319' nmethods='50' adapters='182' free_code_cache='250432768'/>
<task_done success='1' nmsize='464' count='262' stamp='8.558'/>
</task>
<task compile_id='65' method='java/util/LinkedHashMap removeEldestEntry (Ljava/util/Map$Entry;)Z' bytes='2' count='178' iicount='179' level='1' stamp='8.562'>
<phase name='buildIR' stamp='8.562'>
<type id='727' name='boolean'/>
<klass id='845' name='java/util/Map$Entry' flags='1545'/>
<klass id='844' name='java/util/LinkedHashMap' flags='1'/>
<method id='846' holder='844' name='removeEldestEntry' return='727' arguments='845' flags='4' bytes='2' iicount='211'/>
<parse method='846'  stamp='8.562'>
<parse_done stamp='8.562'/>
</parse>
<phase name='optimize_blocks' stamp='8.562'>
<phase_done name='optimize_blocks' stamp='8.562'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.562'>
<phase_done name='rangeCheckElimination' stamp='8.562'/>
</phase>
<phase name='optimize_null_checks' stamp='8.562'>
<phase_done name='optimize_null_checks' stamp='8.562'/>
</phase>
<phase_done name='buildIR' stamp='8.562'/>
</phase>
<phase name='emit_lir' stamp='8.562'>
<phase name='lirGeneration' stamp='8.562'>
<phase_done name='lirGeneration' stamp='8.562'/>
</phase>
<phase name='linearScan' stamp='8.562'>
<phase_done name='linearScan' stamp='8.562'/>
</phase>
<phase_done name='emit_lir' stamp='8.562'/>
</phase>
<phase name='codeemit' stamp='8.562'>
<phase_done name='codeemit' stamp='8.562'/>
</phase>
<phase name='codeinstall' stamp='8.562'>
<phase_done name='codeinstall' stamp='8.565'/>
</phase>
<code_cache total_blobs='320' nmethods='51' adapters='182' free_code_cache='250432064'/>
<task_done success='1' nmsize='272' count='342' stamp='8.565'/>
</task>
<task compile_id='66' method='java/util/LinkedHashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='23' count='398' iicount='399' level='3' stamp='8.565'>
<phase name='buildIR' stamp='8.565'>
<klass id='845' name='java/util/HashMap$Node' flags='8'/>
<type id='733' name='int'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='844' name='java/util/LinkedHashMap' flags='1'/>
<method id='846' holder='844' name='newNode' return='845' arguments='733 740 740 845' flags='0' bytes='23' iicount='476'/>
<parse method='846'  stamp='8.565'>
<bc code='183' bci='9'/>
<type id='735' name='void'/>
<klass id='848' name='java/util/LinkedHashMap$Entry' flags='8'/>
<method id='849' holder='848' name='&lt;init&gt;' return='735' arguments='733 740 740 845' flags='0' bytes='10' iicount='578'/>
<call method='849' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='6'/>
<method id='851' holder='845' name='&lt;init&gt;' return='735' arguments='733 740 740 845' flags='0' bytes='26' compile_id='63' compiler='C1' level='3' iicount='993'/>
<call method='851' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='1'/>
<method id='853' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='26' compiler='C1' level='1' iicount='6087'/>
<call method='853' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<parse_done stamp='8.565'/>
</parse>
<parse_done stamp='8.565'/>
</parse>
<parse_done stamp='8.565'/>
</parse>
<bc code='183' bci='17'/>
<method id='855' holder='844' name='linkNodeLast' return='735' arguments='848' flags='2' bytes='33' iicount='628'/>
<call method='855' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<parse_done stamp='8.566'/>
</parse>
<parse_done stamp='8.566'/>
</parse>
<phase name='optimize_blocks' stamp='8.566'>
<phase_done name='optimize_blocks' stamp='8.566'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.566'>
<phase_done name='rangeCheckElimination' stamp='8.566'/>
</phase>
<phase name='optimize_null_checks' stamp='8.566'>
<phase_done name='optimize_null_checks' stamp='8.566'/>
</phase>
<phase_done name='buildIR' stamp='8.566'/>
</phase>
<phase name='emit_lir' stamp='8.566'>
<phase name='lirGeneration' stamp='8.566'>
<phase_done name='lirGeneration' stamp='8.566'/>
</phase>
<phase name='linearScan' stamp='8.566'>
<phase_done name='linearScan' stamp='8.566'/>
</phase>
<phase_done name='emit_lir' stamp='8.566'/>
</phase>
<phase name='codeemit' stamp='8.566'>
<phase_done name='codeemit' stamp='8.566'/>
</phase>
<phase name='codeinstall' stamp='8.566'>
<phase_done name='codeinstall' stamp='8.585'/>
</phase>
<code_cache total_blobs='321' nmethods='52' adapters='182' free_code_cache='250429888'/>
<task_done success='1' nmsize='1104' count='628' inlined_bytes='70' stamp='8.585'/>
</task>
<task compile_id='69' method='java/util/LinkedHashMap afterNodeInsertion (Z)V' bytes='40' count='628' iicount='628' level='3' stamp='8.585'>
<phase name='buildIR' stamp='8.585'>
<type id='735' name='void'/>
<type id='727' name='boolean'/>
<klass id='844' name='java/util/LinkedHashMap' flags='1'/>
<method id='845' holder='844' name='afterNodeInsertion' return='735' arguments='727' flags='0' bytes='40' iicount='628'/>
<parse method='845'  stamp='8.585'>
<bc code='182' bci='15'/>
<klass id='848' name='java/util/Map$Entry' flags='1545'/>
<method id='849' holder='844' name='removeEldestEntry' return='727' arguments='848' flags='4' bytes='2' compile_id='65' compiler='C1' level='1' iicount='342'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='28'/>
<type id='733' name='int'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='851' name='java/util/HashMap' flags='1'/>
<method id='852' holder='851' name='hash' return='733' arguments='740' flags='24' bytes='20' compile_id='48' compiler='C1' level='3' iicount='1322'/>
<call method='852' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<bc code='182' bci='9'/>
<method id='854' holder='740' name='hashCode' return='733' flags='257' bytes='0' iicount='109'/>
<call method='854' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='8.585'/>
</parse>
<bc code='182' bci='35'/>
<klass id='850' name='java/util/HashMap$Node' flags='8'/>
<method id='855' holder='851' name='removeNode' return='850' arguments='733 740 740 727 727' flags='16' bytes='291' iicount='1'/>
<call method='855' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='8.585'/>
</parse>
<phase name='optimize_blocks' stamp='8.585'>
<phase_done name='optimize_blocks' stamp='8.585'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.585'>
<phase_done name='rangeCheckElimination' stamp='8.585'/>
</phase>
<phase name='optimize_null_checks' stamp='8.585'>
<phase_done name='optimize_null_checks' stamp='8.585'/>
</phase>
<phase_done name='buildIR' stamp='8.585'/>
</phase>
<phase name='emit_lir' stamp='8.586'>
<phase name='lirGeneration' stamp='8.586'>
<phase_done name='lirGeneration' stamp='8.586'/>
</phase>
<phase name='linearScan' stamp='8.586'>
<phase_done name='linearScan' stamp='8.586'/>
</phase>
<phase_done name='emit_lir' stamp='8.586'/>
</phase>
<phase name='codeemit' stamp='8.586'>
<phase_done name='codeemit' stamp='8.586'/>
</phase>
<phase name='codeinstall' stamp='8.586'>
<phase_done name='codeinstall' stamp='8.611'/>
</phase>
<code_cache total_blobs='322' nmethods='53' adapters='182' free_code_cache='250427520'/>
<task_done success='1' nmsize='1352' count='628' inlined_bytes='20' stamp='8.611'/>
</task>
<task compile_id='70' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='680' iicount='680' level='3' stamp='8.611'>
<phase name='buildIR' stamp='8.611'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='844' holder='805' name='&lt;init&gt;' return='735' arguments='733' flags='0' bytes='12' iicount='680'/>
<parse method='844'  stamp='8.611'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='846' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='26' compiler='C1' level='1' iicount='6153'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='805'/>
<parse_done stamp='8.611'/>
</parse>
<parse_done stamp='8.611'/>
</parse>
<phase name='optimize_blocks' stamp='8.611'>
<phase_done name='optimize_blocks' stamp='8.611'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.611'>
<phase_done name='rangeCheckElimination' stamp='8.611'/>
</phase>
<phase name='optimize_null_checks' stamp='8.611'>
<phase_done name='optimize_null_checks' stamp='8.611'/>
</phase>
<phase_done name='buildIR' stamp='8.611'/>
</phase>
<phase name='emit_lir' stamp='8.611'>
<phase name='lirGeneration' stamp='8.611'>
<phase_done name='lirGeneration' stamp='8.611'/>
</phase>
<phase name='linearScan' stamp='8.611'>
<phase_done name='linearScan' stamp='8.611'/>
</phase>
<phase_done name='emit_lir' stamp='8.611'/>
</phase>
<phase name='codeemit' stamp='8.611'>
<phase_done name='codeemit' stamp='8.611'/>
</phase>
<phase name='codeinstall' stamp='8.611'>
<dependency type='no_finalizable_subclasses' ctxk='805'/>
<phase_done name='codeinstall' stamp='8.622'/>
</phase>
<code_cache total_blobs='323' nmethods='54' adapters='182' free_code_cache='250426304'/>
<task_done success='1' nmsize='592' count='680' inlined_bytes='1' stamp='8.622'/>
</task>
<task compile_id='67' method='java/util/LinkedHashMap$Entry &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='10' count='628' iicount='628' level='3' stamp='8.622'>
<phase name='buildIR' stamp='8.622'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='845' name='java/util/HashMap$Node' flags='8'/>
<klass id='844' name='java/util/LinkedHashMap$Entry' flags='8'/>
<method id='846' holder='844' name='&lt;init&gt;' return='735' arguments='733 740 740 845' flags='0' bytes='10' iicount='628'/>
<parse method='846'  stamp='8.622'>
<bc code='183' bci='6'/>
<method id='848' holder='845' name='&lt;init&gt;' return='735' arguments='733 740 740 845' flags='0' bytes='26' compile_id='63' compiler='C1' level='3' iicount='993'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<method id='850' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='26' compiler='C1' level='1' iicount='6153'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='844'/>
<parse_done stamp='8.622'/>
</parse>
<parse_done stamp='8.622'/>
</parse>
<parse_done stamp='8.622'/>
</parse>
<phase name='optimize_blocks' stamp='8.622'>
<phase_done name='optimize_blocks' stamp='8.622'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.622'>
<phase_done name='rangeCheckElimination' stamp='8.623'/>
</phase>
<phase name='optimize_null_checks' stamp='8.623'>
<phase_done name='optimize_null_checks' stamp='8.623'/>
</phase>
<phase_done name='buildIR' stamp='8.623'/>
</phase>
<phase name='emit_lir' stamp='8.623'>
<phase name='lirGeneration' stamp='8.623'>
<phase_done name='lirGeneration' stamp='8.623'/>
</phase>
<phase name='linearScan' stamp='8.623'>
<phase_done name='linearScan' stamp='8.623'/>
</phase>
<phase_done name='emit_lir' stamp='8.623'/>
</phase>
<phase name='codeemit' stamp='8.623'>
<phase_done name='codeemit' stamp='8.623'/>
</phase>
<phase name='codeinstall' stamp='8.623'>
<dependency type='no_finalizable_subclasses' ctxk='844'/>
<phase_done name='codeinstall' stamp='8.655'/>
</phase>
<code_cache total_blobs='324' nmethods='55' adapters='182' free_code_cache='250425024'/>
<task_done success='1' nmsize='592' count='628' inlined_bytes='27' stamp='8.655'/>
</task>
<task compile_id='68' method='java/util/LinkedHashMap linkNodeLast (Ljava/util/LinkedHashMap$Entry;)V' bytes='33' count='628' iicount='628' level='3' stamp='8.655'>
<phase name='buildIR' stamp='8.655'>
<type id='735' name='void'/>
<klass id='845' name='java/util/LinkedHashMap$Entry' flags='8'/>
<klass id='844' name='java/util/LinkedHashMap' flags='1'/>
<method id='846' holder='844' name='linkNodeLast' return='735' arguments='845' flags='2' bytes='33' iicount='628'/>
<parse method='846'  stamp='8.655'>
<parse_done stamp='8.655'/>
</parse>
<phase name='optimize_blocks' stamp='8.655'>
<phase_done name='optimize_blocks' stamp='8.655'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.655'>
<phase_done name='rangeCheckElimination' stamp='8.655'/>
</phase>
<phase name='optimize_null_checks' stamp='8.655'>
<phase_done name='optimize_null_checks' stamp='8.655'/>
</phase>
<phase_done name='buildIR' stamp='8.655'/>
</phase>
<phase name='emit_lir' stamp='8.655'>
<phase name='lirGeneration' stamp='8.655'>
<phase_done name='lirGeneration' stamp='8.655'/>
</phase>
<phase name='linearScan' stamp='8.655'>
<phase_done name='linearScan' stamp='8.655'/>
</phase>
<phase_done name='emit_lir' stamp='8.655'/>
</phase>
<phase name='codeemit' stamp='8.655'>
<phase_done name='codeemit' stamp='8.655'/>
</phase>
<phase name='codeinstall' stamp='8.655'>
<phase_done name='codeinstall' stamp='8.674'/>
</phase>
<code_cache total_blobs='325' nmethods='56' adapters='182' free_code_cache='250423744'/>
<task_done success='1' nmsize='560' count='628' stamp='8.674'/>
</task>
<task compile_id='72' method='java/nio/ByteBuffer arrayOffset ()I' bytes='35' count='262' iicount='262' level='3' stamp='8.674'>
<phase name='buildIR' stamp='8.674'>
<type id='733' name='int'/>
<klass id='844' name='java/nio/ByteBuffer' flags='1025'/>
<method id='845' holder='844' name='arrayOffset' return='733' flags='17' bytes='35' iicount='262'/>
<parse method='845'  stamp='8.674'>
<bc code='183' bci='11'/>
<type id='735' name='void'/>
<klass id='847' name='java/lang/UnsupportedOperationException' unloaded='1'/>
<method id='848' holder='847' name='&lt;init&gt;' return='735' unloaded='1'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='26'/>
<klass id='849' name='java/nio/ReadOnlyBufferException' unloaded='1'/>
<method id='850' holder='849' name='&lt;init&gt;' return='735' unloaded='1'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='8.674'/>
</parse>
<phase name='optimize_blocks' stamp='8.674'>
<phase_done name='optimize_blocks' stamp='8.674'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.674'>
<phase_done name='rangeCheckElimination' stamp='8.674'/>
</phase>
<phase name='optimize_null_checks' stamp='8.674'>
<phase_done name='optimize_null_checks' stamp='8.674'/>
</phase>
<phase_done name='buildIR' stamp='8.674'/>
</phase>
<phase name='emit_lir' stamp='8.674'>
<phase name='lirGeneration' stamp='8.674'>
<phase_done name='lirGeneration' stamp='8.674'/>
</phase>
<phase name='linearScan' stamp='8.674'>
<phase_done name='linearScan' stamp='8.674'/>
</phase>
<phase_done name='emit_lir' stamp='8.674'/>
</phase>
<phase name='codeemit' stamp='8.674'>
<phase_done name='codeemit' stamp='8.674'/>
</phase>
<phase name='codeinstall' stamp='8.674'>
<phase_done name='codeinstall' stamp='8.689'/>
</phase>
<code_cache total_blobs='326' nmethods='57' adapters='182' free_code_cache='250422080'/>
<task_done success='1' nmsize='728' count='270' stamp='8.689'/>
</task>
<task compile_id='73' method='java/nio/Buffer limit ()I' bytes='5' count='261' iicount='261' level='1' stamp='8.689'>
<phase name='buildIR' stamp='8.689'>
<type id='733' name='int'/>
<klass id='820' name='java/nio/Buffer' flags='1025'/>
<method id='844' holder='820' name='limit' return='733' flags='17' bytes='5' iicount='261'/>
<parse method='844'  stamp='8.689'>
<parse_done stamp='8.689'/>
</parse>
<phase name='optimize_blocks' stamp='8.689'>
<phase_done name='optimize_blocks' stamp='8.689'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.689'>
<phase_done name='rangeCheckElimination' stamp='8.689'/>
</phase>
<phase name='optimize_null_checks' stamp='8.689'>
<phase_done name='optimize_null_checks' stamp='8.689'/>
</phase>
<phase_done name='buildIR' stamp='8.689'/>
</phase>
<phase name='emit_lir' stamp='8.689'>
<phase name='lirGeneration' stamp='8.689'>
<phase_done name='lirGeneration' stamp='8.689'/>
</phase>
<phase name='linearScan' stamp='8.689'>
<phase_done name='linearScan' stamp='8.689'/>
</phase>
<phase_done name='emit_lir' stamp='8.689'/>
</phase>
<phase name='codeemit' stamp='8.689'>
<phase_done name='codeemit' stamp='8.689'/>
</phase>
<phase name='codeinstall' stamp='8.689'>
<phase_done name='codeinstall' stamp='8.692'/>
</phase>
<code_cache total_blobs='327' nmethods='58' adapters='182' free_code_cache='250421312'/>
<task_done success='1' nmsize='272' count='261' stamp='8.692'/>
</task>
<task compile_id='74' method='java/nio/CharBuffer arrayOffset ()I' bytes='35' count='257' iicount='257' level='3' stamp='8.692'>
<phase name='buildIR' stamp='8.692'>
<type id='733' name='int'/>
<klass id='844' name='java/nio/CharBuffer' flags='1025'/>
<method id='845' holder='844' name='arrayOffset' return='733' flags='17' bytes='35' iicount='257'/>
<parse method='845'  stamp='8.692'>
<bc code='183' bci='11'/>
<type id='735' name='void'/>
<klass id='847' name='java/lang/UnsupportedOperationException' unloaded='1'/>
<method id='848' holder='847' name='&lt;init&gt;' return='735' unloaded='1'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='26'/>
<klass id='849' name='java/nio/ReadOnlyBufferException' unloaded='1'/>
<method id='850' holder='849' name='&lt;init&gt;' return='735' unloaded='1'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='8.692'/>
</parse>
<phase name='optimize_blocks' stamp='8.692'>
<phase_done name='optimize_blocks' stamp='8.692'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.692'>
<phase_done name='rangeCheckElimination' stamp='8.692'/>
</phase>
<phase name='optimize_null_checks' stamp='8.692'>
<phase_done name='optimize_null_checks' stamp='8.692'/>
</phase>
<phase_done name='buildIR' stamp='8.692'/>
</phase>
<phase name='emit_lir' stamp='8.692'>
<phase name='lirGeneration' stamp='8.692'>
<phase_done name='lirGeneration' stamp='8.692'/>
</phase>
<phase name='linearScan' stamp='8.693'>
<phase_done name='linearScan' stamp='8.693'/>
</phase>
<phase_done name='emit_lir' stamp='8.693'/>
</phase>
<phase name='codeemit' stamp='8.693'>
<phase_done name='codeemit' stamp='8.693'/>
</phase>
<phase name='codeinstall' stamp='8.693'>
<phase_done name='codeinstall' stamp='8.711'/>
</phase>
<code_cache total_blobs='329' nmethods='59' adapters='182' free_code_cache='250414272'/>
<task_done success='1' nmsize='728' count='257' stamp='8.712'/>
</task>
</compilation_log>
<compilation_log thread='1944'>
<start_compile_thread name='C2 CompilerThread1' thread='1944' process='9412' stamp='0.958'/>
<task compile_id='3' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='7180' iicount='7180' stamp='5.011'>
<phase name='parse' nodes='3' live='3' stamp='5.011'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='844' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' iicount='7180'/>
<parse method='844' uses='7180' stamp='5.011'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='7006' not_taken='174' cnt='7180' prob='0.975766'/>
<bc code='183' bci='17'/>
<method id='846' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='324'/>
<call method='846' count='162' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='174' stamp='5.012'>
<bc code='183' bci='31'/>
<method id='849' holder='805' name='hugeCapacity' return='733' arguments='733' flags='2' bytes='28' iicount='1'/>
<call method='849' count='-1' prof_factor='0.537037' inline='1'/>
<klass id='763' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='849' bci='7' reason='unloaded' action='reinterpret' index='145' klass='763'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='129' live='127' memory='41976' stamp='5.012'/>
</parse>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='847' name='java/util/Arrays' flags='1'/>
<method id='848' holder='847' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='379'/>
<call method='848' count='162' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='848' uses='174' stamp='5.012'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='851' name='java/lang/Math' flags='17'/>
<method id='852' holder='851' name='min' return='733' arguments='733 733' flags='9' bytes='11' iicount='1719'/>
<call method='852' count='-1' prof_factor='0.459103' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='853' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='2560'/>
<call method='853' count='-1' prof_factor='0.459103' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='320' live='316' memory='77672' stamp='5.012'/>
</parse>
<parse_done nodes='347' live='342' memory='83016' stamp='5.012'/>
</parse>
<phase_done name='parse' nodes='349' live='221' stamp='5.012'/>
</phase>
<phase name='optimizer' nodes='349' live='221' stamp='5.012'>
<phase name='escapeAnalysis' nodes='353' live='218' stamp='5.013'>
<phase name='connectionGraph' nodes='354' live='219' stamp='5.013'>
<phase_done name='connectionGraph' nodes='354' live='219' stamp='5.013'/>
</phase>
<phase_done name='escapeAnalysis' nodes='354' live='219' stamp='5.013'/>
</phase>
<phase name='ccp' nodes='354' live='219' stamp='5.013'>
<phase_done name='ccp' nodes='354' live='219' stamp='5.013'/>
</phase>
<phase name='idealLoop' nodes='354' live='218' stamp='5.013'>
<phase_done name='idealLoop' nodes='360' live='208' stamp='5.013'/>
</phase>
<phase name='idealLoop' nodes='360' live='208' stamp='5.013'>
<phase_done name='idealLoop' nodes='366' live='208' stamp='5.013'/>
</phase>
<phase_done name='optimizer' nodes='424' live='246' stamp='5.014'/>
</phase>
<phase name='matcher' nodes='424' live='246' stamp='5.014'>
<phase_done name='matcher' nodes='246' live='246' stamp='5.014'/>
</phase>
<phase name='regalloc' nodes='309' live='308' stamp='5.015'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='385' live='359' stamp='5.016'/>
</phase>
<phase name='output' nodes='385' live='359' stamp='5.016'>
<phase_done name='output' nodes='404' live='369' stamp='5.028'/>
</phase>
<code_cache total_blobs='251' nmethods='8' adapters='157' free_code_cache='250576320'/>
<task_done success='1' nmsize='712' count='7180' inlined_bytes='69' stamp='5.055'/>
</task>
<task compile_id='43' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='6177' iicount='6178' stamp='6.264'>
<phase name='parse' nodes='3' live='3' stamp='6.264'>
<klass id='836' name='[B' flags='1041'/>
<klass id='844' name='java/io/BufferedInputStream' flags='1'/>
<method id='845' holder='844' name='getBufIfOpen' return='836' flags='2' bytes='21' compile_id='31' compiler='C1' level='3' iicount='6246'/>
<klass id='847' name='java/io/IOException' unloaded='1'/>
<uncommon_trap method='845' bci='9' reason='unloaded' action='reinterpret' index='65' klass='847'/>
<parse method='845' uses='6246' stamp='6.264'>
<bc code='199' bci='6'/>
<branch target_bci='19' taken='6244' not_taken='0' cnt='6244' prob='always'/>
<uncommon_trap bci='6' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='46' live='44' memory='26152' stamp='6.265'/>
</parse>
<phase_done name='parse' nodes='47' live='28' stamp='6.265'/>
</phase>
<phase name='optimizer' nodes='47' live='28' stamp='6.265'>
<phase name='ccp' nodes='47' live='28' stamp='6.265'>
<phase_done name='ccp' nodes='47' live='28' stamp='6.265'/>
</phase>
<phase name='idealLoop' nodes='47' live='28' stamp='6.265'>
<phase_done name='idealLoop' nodes='47' live='28' stamp='6.265'/>
</phase>
<phase_done name='optimizer' nodes='50' live='28' stamp='6.265'/>
</phase>
<phase name='matcher' nodes='50' live='28' stamp='6.265'>
<phase_done name='matcher' nodes='29' live='29' stamp='6.265'/>
</phase>
<phase name='regalloc' nodes='34' live='34' stamp='6.265'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='36' live='33' stamp='6.265'/>
</phase>
<phase name='output' nodes='36' live='33' stamp='6.265'>
<phase_done name='output' nodes='45' live='41' stamp='6.265'/>
</phase>
<code_cache total_blobs='293' nmethods='28' adapters='177' free_code_cache='250492736'/>
<task_done success='1' nmsize='120' count='7223' stamp='6.269'/>
</task>
<task compile_id='47' compile_kind='osr' method='com/zju/leetcode/multiThread/testThread$1 run ()V' bytes='26' count='1' backedge_count='7310336' iicount='1' osr_bci='2' stamp='6.857'>
<phase name='parse' nodes='3' live='3' stamp='6.857'>
<type id='735' name='void'/>
<klass id='844' name='com/zju/leetcode/multiThread/testThread$1' flags='8'/>
<method id='845' holder='844' name='run' return='735' flags='1' bytes='26' compile_id='46' compiler='C1' level='3' iicount='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<uncommon_trap method='845' bci='18' reason='unloaded' action='reinterpret' index='32' klass='746'/>
<parse method='845' uses='1' osr_bci='2' stamp='6.857'>
<uncommon_trap method='845' bci='18' reason='unloaded' action='reinterpret' index='32' klass='746'/>
<uncommon_trap bci='2' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='2' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='2' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='3'/>
<uncommon_trap bci='3' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='6'/>
<type id='727' name='boolean'/>
<klass id='847' name='com/zju/leetcode/multiThread/testThread' flags='1'/>
<method id='848' holder='847' name='access$000' return='727' arguments='847' flags='4104' bytes='5' compile_id='44' compiler='C1' level='1' iicount='84992'/>
<call method='848' count='5836800' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='848' uses='5.8368e+006' stamp='6.858'>
<bc code='180' bci='1'/>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='150' live='144' memory='43704' stamp='6.858'/>
</parse>
<bc code='153' bci='9'/>
<branch target_bci='18' taken='0' not_taken='5836800' cnt='5.8368e+006' prob='never'/>
<uncommon_trap bci='9' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='166' live='159' memory='46384' stamp='6.858'/>
</parse>
<phase_done name='parse' nodes='166' live='115' stamp='6.858'/>
</phase>
<phase name='optimizer' nodes='166' live='115' stamp='6.858'>
<phase name='idealLoop' nodes='171' live='108' stamp='6.858'>
<loop_tree>
<loop idx='171' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='177' live='105' stamp='6.858'/>
</phase>
<phase name='idealLoop' nodes='177' live='105' stamp='6.858'>
<loop_tree>
<loop idx='171' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='177' live='105' stamp='6.858'/>
</phase>
<phase name='idealLoop' nodes='177' live='105' stamp='6.858'>
<loop_tree>
<loop idx='171' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='177' live='105' stamp='6.858'/>
</phase>
<phase name='ccp' nodes='177' live='105' stamp='6.858'>
<phase_done name='ccp' nodes='177' live='105' stamp='6.858'/>
</phase>
<phase name='idealLoop' nodes='178' live='103' stamp='6.858'>
<loop_tree>
<loop idx='171' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='199' live='97' stamp='6.859'/>
</phase>
<phase name='idealLoop' nodes='199' live='97' stamp='6.859'>
<loop_tree>
<loop idx='171' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='202' live='81' stamp='6.859'/>
</phase>
<phase name='idealLoop' nodes='202' live='81' stamp='6.859'>
<loop_tree>
<loop idx='171' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='205' live='81' stamp='6.859'/>
</phase>
<phase_done name='optimizer' nodes='210' live='80' stamp='6.859'/>
</phase>
<phase name='matcher' nodes='210' live='80' stamp='6.859'>
<phase_done name='matcher' nodes='74' live='74' stamp='6.859'/>
</phase>
<phase name='regalloc' nodes='93' live='91' stamp='6.859'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='102' live='97' stamp='6.859'/>
</phase>
<phase name='output' nodes='102' live='97' stamp='6.859'>
<phase_done name='output' nodes='113' live='105' stamp='6.859'/>
</phase>
<code_cache total_blobs='305' nmethods='37' adapters='181' free_code_cache='250464576'/>
<task_done success='1' nmsize='184' count='1' backedge_count='8335815' inlined_bytes='5' stamp='6.877'/>
</task>
<task compile_id='71' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='5729' iicount='5732' stamp='8.585'>
<phase name='parse' nodes='3' live='3' stamp='8.585'>
<klass id='806' name='java/lang/StringBuffer' flags='17'/>
<type id='728' name='char'/>
<method id='844' holder='806' name='append' return='806' arguments='728' flags='33' bytes='13' compile_id='30' compiler='C1' level='3' iicount='5896'/>
<parse method='844' uses='5896' stamp='8.586'>
<bc code='183' bci='7'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='805' name='append' return='805' arguments='728' flags='1' bytes='29' compile_id='28' compiler='C2' level='4' iicount='9837'/>
<call method='846' count='5615' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='5893' stamp='8.586'>
<bc code='183' bci='7'/>
<type id='735' name='void'/>
<type id='733' name='int'/>
<method id='847' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' compile_id='3' compiler='C2' level='4' iicount='11295'/>
<call method='847' count='10007' prof_factor='0.599065' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='847' uses='5995' stamp='8.586'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='11035' not_taken='259' cnt='11294' prob='0.977067'/>
<bc code='183' bci='17'/>
<method id='849' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='415'/>
<call method='849' count='254' prof_factor='0.530766' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='137' stamp='8.674'>
<bc code='183' bci='31'/>
<method id='853' holder='805' name='hugeCapacity' return='733' arguments='733' flags='2' bytes='28' iicount='1'/>
<call method='853' count='-1' prof_factor='0.33012' inline='1'/>
<klass id='763' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='853' bci='7' reason='unloaded' action='reinterpret' index='145' klass='763'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='174' live='172' memory='50160' stamp='8.674'/>
</parse>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='850' name='java/util/Arrays' flags='1'/>
<method id='851' holder='850' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='497'/>
<call method='851' count='254' prof_factor='0.530766' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='851' uses='137' stamp='8.674'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='855' name='java/lang/Math' flags='17'/>
<method id='856' holder='855' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='23' compiler='C1' level='3' iicount='3148'/>
<call method='856' count='-1' prof_factor='0.275654' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='857' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='2560'/>
<call method='857' count='-1' prof_factor='0.275654' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='366' live='362' memory='88816' stamp='8.674'/>
</parse>
<parse_done nodes='396' live='391' memory='95848' stamp='8.689'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='446' live='438' memory='105080' stamp='8.689'/>
</parse>
<parse_done nodes='467' live='458' memory='108304' stamp='8.689'/>
</parse>
<phase_done name='parse' nodes='469' live='292' stamp='8.689'/>
</phase>
<phase name='optimizer' nodes='469' live='292' stamp='8.689'>
<phase name='escapeAnalysis' nodes='473' live='288' stamp='8.690'>
<phase name='connectionGraph' nodes='473' live='288' stamp='8.690'>
<phase_done name='connectionGraph' nodes='473' live='288' stamp='8.690'/>
</phase>
<phase_done name='escapeAnalysis' nodes='473' live='288' stamp='8.690'/>
</phase>
<phase name='ccp' nodes='473' live='288' stamp='8.690'>
<phase_done name='ccp' nodes='473' live='288' stamp='8.690'/>
</phase>
<phase name='idealLoop' nodes='473' live='287' stamp='8.690'>
<phase_done name='idealLoop' nodes='491' live='278' stamp='8.690'/>
</phase>
<phase name='idealLoop' nodes='491' live='278' stamp='8.690'>
<phase_done name='idealLoop' nodes='497' live='278' stamp='8.691'/>
</phase>
<phase_done name='optimizer' nodes='661' live='408' stamp='8.691'/>
</phase>
<phase name='matcher' nodes='661' live='408' stamp='8.691'>
<phase_done name='matcher' nodes='401' live='401' stamp='8.692'/>
</phase>
<phase name='regalloc' nodes='509' live='508' stamp='8.692'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='692' live='615' stamp='8.698'/>
</phase>
<phase name='output' nodes='694' live='617' stamp='8.698'>
<phase_done name='output' nodes='720' live='632' stamp='8.712'/>
</phase>
<code_cache total_blobs='330' nmethods='60' adapters='182' free_code_cache='250411008'/>
<task_done success='1' nmsize='1512' count='10029' inlined_bytes='125' stamp='8.759'/>
</task>
</compilation_log>
<compilation_log thread='11160'>
<start_compile_thread name='C2 CompilerThread0' thread='11160' process='9412' stamp='0.956'/>
<task compile_id='7' method='java/lang/String charAt (I)C' bytes='29' count='102427' iicount='102427' stamp='5.011'>
<phase name='parse' nodes='3' live='3' stamp='5.011'>
<type id='728' name='char'/>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='charAt' return='728' arguments='733' flags='1' bytes='29' iicount='102427'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='844' bci='13' reason='unloaded' action='reinterpret' index='245' klass='846'/>
<parse method='844' uses='102427' stamp='5.011'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='102427' cnt='102427' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='102427' not_taken='0' cnt='102427' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35048' stamp='5.012'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='5.012'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='5.012'>
<phase name='ccp' nodes='103' live='63' stamp='5.012'>
<phase_done name='ccp' nodes='103' live='63' stamp='5.012'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='5.012'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='5.012'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='5.012'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='5.012'>
<phase_done name='matcher' nodes='55' live='55' stamp='5.012'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='5.012'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='5.013'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='5.013'>
<phase_done name='output' nodes='93' live='85' stamp='5.013'/>
</phase>
<code_cache total_blobs='250' nmethods='7' adapters='156' free_code_cache='250573312'/>
<task_done success='1' nmsize='216' count='102427' stamp='5.028'/>
</task>
<task compile_id='15' method='java/lang/String length ()I' bytes='6' count='27776' iicount='27776' stamp='5.111'>
<phase name='parse' nodes='3' live='3' stamp='5.111'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='length' return='733' flags='1' bytes='6' iicount='27777'/>
<parse method='844' uses='27777' stamp='5.111'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='44' live='42' memory='25944' stamp='5.111'/>
</parse>
<phase_done name='parse' nodes='45' live='27' stamp='5.111'/>
</phase>
<phase name='optimizer' nodes='45' live='27' stamp='5.111'>
<phase name='ccp' nodes='45' live='27' stamp='5.111'>
<phase_done name='ccp' nodes='45' live='27' stamp='5.111'/>
</phase>
<phase name='idealLoop' nodes='45' live='27' stamp='5.111'>
<phase_done name='idealLoop' nodes='45' live='27' stamp='5.111'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='5.111'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='5.111'>
<phase_done name='matcher' nodes='24' live='24' stamp='5.111'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='5.111'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='30' live='29' stamp='5.111'/>
</phase>
<phase name='output' nodes='30' live='29' stamp='5.111'>
<phase_done name='output' nodes='38' live='37' stamp='5.241'/>
</phase>
<code_cache total_blobs='263' nmethods='13' adapters='163' free_code_cache='250533312'/>
<task_done success='1' nmsize='120' count='27777' stamp='5.245'/>
</task>
<task compile_id='28' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='6542' iicount='6544' stamp='6.175'>
<phase name='parse' nodes='3' live='3' stamp='6.175'>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='728' name='char'/>
<method id='844' holder='805' name='append' return='805' arguments='728' flags='1' bytes='29' iicount='6560'/>
<parse method='844' uses='6560' stamp='6.175'>
<bc code='183' bci='7'/>
<type id='735' name='void'/>
<type id='733' name='int'/>
<method id='846' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' compile_id='3' compiler='C2' level='4' iicount='7189'/>
<call method='846' count='6069' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='6556' stamp='6.253'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='7012' not_taken='177' cnt='7189' prob='0.975379'/>
<bc code='183' bci='17'/>
<method id='847' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='326'/>
<call method='847' count='164' prof_factor='0.911949' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='847' uses='161' stamp='6.253'>
<bc code='183' bci='31'/>
<method id='851' holder='805' name='hugeCapacity' return='733' arguments='733' flags='2' bytes='28' iicount='1'/>
<call method='851' count='-1' prof_factor='0.493865' inline='1'/>
<klass id='763' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='851' bci='7' reason='unloaded' action='reinterpret' index='145' klass='763'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='147' live='145' memory='44880' stamp='6.253'/>
</parse>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='848' name='java/util/Arrays' flags='1'/>
<method id='849' holder='848' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='391'/>
<call method='849' count='164' prof_factor='0.911949' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='161' stamp='6.260'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='853' name='java/lang/Math' flags='17'/>
<method id='854' holder='853' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='23' compiler='C1' level='3' iicount='2091'/>
<call method='854' count='-1' prof_factor='0.411765' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='855' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='2560'/>
<call method='855' count='-1' prof_factor='0.411765' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='338' live='334' memory='84440' stamp='6.261'/>
</parse>
<parse_done nodes='365' live='360' memory='89736' stamp='6.261'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='414' live='406' memory='98440' stamp='6.261'/>
</parse>
<phase_done name='parse' nodes='416' live='259' stamp='6.261'/>
</phase>
<phase name='optimizer' nodes='416' live='259' stamp='6.261'>
<phase name='escapeAnalysis' nodes='420' live='255' stamp='6.261'>
<phase name='connectionGraph' nodes='421' live='256' stamp='6.261'>
<phase_done name='connectionGraph' nodes='421' live='256' stamp='6.261'/>
</phase>
<phase_done name='escapeAnalysis' nodes='421' live='256' stamp='6.261'/>
</phase>
<phase name='ccp' nodes='421' live='256' stamp='6.261'>
<phase_done name='ccp' nodes='421' live='256' stamp='6.262'/>
</phase>
<phase name='idealLoop' nodes='421' live='255' stamp='6.262'>
<phase_done name='idealLoop' nodes='439' live='246' stamp='6.262'/>
</phase>
<phase name='idealLoop' nodes='439' live='246' stamp='6.262'>
<phase_done name='idealLoop' nodes='445' live='246' stamp='6.262'/>
</phase>
<phase_done name='optimizer' nodes='504' live='285' stamp='6.263'/>
</phase>
<phase name='matcher' nodes='504' live='285' stamp='6.263'>
<phase_done name='matcher' nodes='284' live='284' stamp='6.263'/>
</phase>
<phase name='regalloc' nodes='353' live='352' stamp='6.263'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='462' live='419' stamp='6.267'/>
</phase>
<phase name='output' nodes='462' live='419' stamp='6.267'>
<phase_done name='output' nodes='481' live='431' stamp='6.443'/>
</phase>
<code_cache total_blobs='294' nmethods='30' adapters='177' free_code_cache='250480576'/>
<task_done success='1' nmsize='840' count='6598' inlined_bytes='96' stamp='6.475'/>
</task>
<task compile_id='56' method='java/lang/String hashCode ()I' bytes='55' count='1156' backedge_count='20492' iicount='1156' stamp='7.090'>
<phase name='parse' nodes='3' live='3' stamp='7.090'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='hashCode' return='733' flags='1' bytes='55' compile_id='4' compiler='C1' level='3' iicount='1156'/>
<parse method='844' uses='1156' stamp='7.090'>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='226' not_taken='580' cnt='806' prob='0.280397'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='2' not_taken='578' cnt='580' prob='0.00344828'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='578' not_taken='16362' cnt='16940' prob='0.0341204'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='578' not_taken='16362' cnt='16362' prob='0.0341204'/>
<parse_done nodes='190' live='184' memory='50048' stamp='7.091'/>
</parse>
<phase_done name='parse' nodes='191' live='124' stamp='7.091'/>
</phase>
<phase name='optimizer' nodes='191' live='124' stamp='7.091'>
<phase name='idealLoop' nodes='192' live='104' stamp='7.091'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='96' stamp='7.091'/>
</phase>
<phase name='idealLoop' nodes='196' live='96' stamp='7.091'>
<loop_tree>
<loop idx='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='222' live='102' stamp='7.091'/>
</phase>
<phase name='idealLoop' nodes='222' live='102' stamp='7.091'>
<loop_tree>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='312' live='172' stamp='7.091'/>
</phase>
<phase name='ccp' nodes='312' live='172' stamp='7.091'>
<phase_done name='ccp' nodes='312' live='172' stamp='7.092'/>
</phase>
<phase name='idealLoop' nodes='312' live='172' stamp='7.092'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='364' live='198' stamp='7.092'/>
</phase>
<phase name='idealLoop' nodes='364' live='198' stamp='7.092'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='370' live='184' stamp='7.092'/>
</phase>
<phase name='idealLoop' nodes='370' live='184' stamp='7.092'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='380' live='167' stamp='7.092'/>
</phase>
<phase_done name='optimizer' nodes='409' live='161' stamp='7.092'/>
</phase>
<phase name='matcher' nodes='409' live='161' stamp='7.092'>
<phase_done name='matcher' nodes='141' live='141' stamp='7.093'/>
</phase>
<phase name='regalloc' nodes='177' live='176' stamp='7.093'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='195' live='190' stamp='7.093'/>
</phase>
<phase name='output' nodes='195' live='190' stamp='7.093'>
<phase_done name='output' nodes='209' live='200' stamp='7.411'/>
</phase>
<code_cache total_blobs='311' nmethods='42' adapters='181' free_code_cache='250439744'/>
<task_done success='1' nmsize='376' count='1172' backedge_count='20980' stamp='7.472'/>
</task>
</compilation_log>
<hotspot_log_done stamp='9.104'/>
</hotspot_log>
